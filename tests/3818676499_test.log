TEST ID: 3818676499

TEST DESCRIPTION:
{m: 32,
 do_forward_impl: ['numpy_gemm', 'numba_jit_direct', 'numba_jit_gemm', 'cv2', 'numba_cuda_direct', 'numba_cuda_tiles', 'numba_cuda_viafft', 'keras'],
 kernel_size: [3, 5, 7],
 n_kernels: [16, 32, 64],
 n_channels: [16, 32, 64],
 img_side: [2, 4, 8, 16, 32, 64],
 n_repetitions: 10}

============================================================================================================================================================================
TESTING IMPLEMENTATION numpy_gemm...
1/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0010097026824951172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0009851455688476562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0009903907775878906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0 s]
1/162 DONE. [mean time: 0.0007994890213012696 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.003000020980834961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0019867420196533203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0029993057250976562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0029866695404052734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.002016782760620117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0019948482513427734 s]
2/162 DONE. [mean time: 0.002495861053466797 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.008982181549072266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.009942770004272461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.010154962539672852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.008979320526123047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.008975505828857422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.007977724075317383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.009974479675292969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.009972572326660156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.008009910583496094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.008946657180786133 s]
3/162 DONE. [mean time: 0.009391260147094727 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03488302230834961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03890538215637207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03589439392089844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03388643264770508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03690004348754883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03490018844604492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03287935256958008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03592729568481445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.03390932083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.032922983169555664 s]
4/162 DONE. [mean time: 0.03530681133270264 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.1413412094116211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.14563560485839844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.14556407928466797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.14361786842346191 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.14663958549499512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.1386265754699707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.13763117790222168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.14361906051635742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.13407468795776367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.14860248565673828 s]
5/162 DONE. [mean time: 0.14273757934570314 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5445559024810791 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5515563488006592 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5425493717193604 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5445454120635986 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5485360622406006 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5824801921844482 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.541579008102417 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5415921211242676 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5405888557434082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.544588565826416 s]
6/162 DONE. [mean time: 0.5484492778778076 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0010120868682861328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009853839874267578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.001043081283569336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009868144989013672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009832382202148438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009989738464355469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0009963512420654297 s]
7/162 DONE. [mean time: 0.000999784469604492 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029931068420410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.00299072265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.003004312515258789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.002956390380859375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0020189285278320312 s]
8/162 DONE. [mean time: 0.0028922557830810547 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0109710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.010989189147949219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.01095271110534668 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.010969877243041992 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.010971307754516602 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.011007308959960938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.010935306549072266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.009999275207519531 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.010971307754516602 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.01196742057800293 s]
9/162 DONE. [mean time: 0.011269974708557128 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04890751838684082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04527401924133301 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04388236999511719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04490542411804199 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04390883445739746 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04488992691040039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04586672782897949 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04587745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04387521743774414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.04288601875305176 s]
10/162 DONE. [mean time: 0.04522416591644287 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.16755175590515137 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.17256808280944824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.16758966445922852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.1735367774963379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.1685471534729004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.176527738571167 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.1715068817138672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.19148874282836914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.1904888153076172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CD0> done in 0.17645859718322754 s]
11/162 DONE. [mean time: 0.17572617530822754 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.7899527549743652 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.8148293495178223 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.7906413078308105 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.8078842163085938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.8626933097839355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.8188114166259766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.8298423290252686 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.860353946685791 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.8477778434753418 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.7888789176940918 s]
12/162 DONE. [mean time: 0.8213621377944946 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0010013580322265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009937286376953125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009989738464355469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.000995635986328125 s]
13/162 DONE. [mean time: 0.0011967897415161132 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.002990245819091797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003993511199951172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.00398564338684082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003989219665527344 s]
14/162 DONE. [mean time: 0.003789687156677246 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.013962984085083008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014987945556640625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014931678771972656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.013963460922241211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014959335327148438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014960765838623047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.015962839126586914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.015952348709106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014960289001464844 s]
15/162 DONE. [mean time: 0.01515958309173584 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.06287097930908203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.06079816818237305 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05987668037414551 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05983591079711914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0608367919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.059842824935913086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.06382536888122559 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.06183958053588867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.06518411636352539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.061867713928222656 s]
16/162 DONE. [mean time: 0.06207704544067383 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.253345251083374 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.22838950157165527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.22838997840881348 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.27430200576782227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2822098731994629 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.22643327713012695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.22735357284545898 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.22739291191101074 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2503318786621094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2314136028289795 s]
17/162 DONE. [mean time: 0.24315590858459474 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1838040351867676 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1599056720733643 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.211292028427124 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1789422035217285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1738264560699463 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1928493976593018 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1689152717590332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1510162353515625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1638877391815186 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1918177604675293 s]
18/162 DONE. [mean time: 1.1779215812683106 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0010001659393310547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009722709655761719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0010004043579101562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0010042190551757812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.000990152359008789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0010149478912353516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.001003265380859375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009958744049072266 s]
19/162 DONE. [mean time: 0.0010959625244140625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.002968311309814453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0020198822021484375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029659271240234375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0020194053649902344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029685497283935547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.002022266387939453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.002964496612548828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0020177364349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.002981901168823242 s]
20/162 DONE. [mean time: 0.002592015266418457 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.009012460708618164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.009947061538696289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.00897669792175293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008952140808105469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008975505828857422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008976459503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008987665176391602 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008964061737060547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.008975982666015625 s]
21/162 DONE. [mean time: 0.00907440185546875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03490591049194336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03490638732910156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03490877151489258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03390812873840332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.033908843994140625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.035903215408325195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.0359044075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03592085838317871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03885984420776367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03789520263671875 s]
22/162 DONE. [mean time: 0.03580191135406494 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.14760351181030273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.14561104774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.1326456069946289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.13866519927978516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.13467884063720703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.14062762260437012 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.14058375358581543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.13364291191101074 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.13466954231262207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.1376643180847168 s]
23/162 DONE. [mean time: 0.1388364315032959 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.5665140151977539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.5657293796539307 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.6173496246337891 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.5525233745574951 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.6203413009643555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.6083781719207764 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.553520679473877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.6063828468322754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.5750586986541748 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.6380603313446045 s]
24/162 DONE. [mean time: 0.5905853033065795 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009913444519042969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009908676147460938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0010232925415039062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009970664978027344 s]
25/162 DONE. [mean time: 0.0010990381240844726 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002966642379760742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0029959678649902344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002988100051879883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0030050277709960938 s]
26/162 DONE. [mean time: 0.0029907464981079102 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.010884523391723633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.012972354888916016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.012965917587280273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.013967514038085938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.010963916778564453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.012989282608032227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.012966394424438477 s]
27/162 DONE. [mean time: 0.012361526489257812 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.047872066497802734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.0468747615814209 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.04886913299560547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.04588890075683594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.04446244239807129 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.049866676330566406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.043883323669433594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.05487847328186035 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.04485440254211426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.04590296745300293 s]
28/162 DONE. [mean time: 0.04753470420837402 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.19050168991088867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.17852330207824707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.17449736595153809 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.1725752353668213 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.1934504508972168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.17353606224060059 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.1715412139892578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.17453336715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.17955660820007324 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.17553091049194336 s]
29/162 DONE. [mean time: 0.17862412929534913 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8646953105926514 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8257541656494141 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8108327388763428 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.7990903854370117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8068432807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8567495346069336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8955790996551514 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.813485860824585 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.7928805351257324 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.8567097187042236 s]
30/162 DONE. [mean time: 0.832661247253418 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0020051002502441406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009872913360595703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0020074844360351562 s]
31/162 DONE. [mean time: 0.0013976097106933594 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.004973411560058594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.003991842269897461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.003990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0039861202239990234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.003989458084106445 s]
32/162 DONE. [mean time: 0.003988099098205566 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.015958309173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.014935970306396484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.015958309173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.019944190979003906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.014960289001464844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.014959573745727539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.016213417053222656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.014878988265991211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.014941692352294922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.015975475311279297 s]
33/162 DONE. [mean time: 0.015957450866699217 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.06335902214050293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.06682014465332031 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.062349557876586914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0608367919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.060837507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.06382894515991211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0648348331451416 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.06200718879699707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.06283187866210938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.06083846092224121 s]
34/162 DONE. [mean time: 0.06305396556854248 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.24638056755065918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2403557300567627 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.23839735984802246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.23836350440979004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.24733972549438477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.24135804176330566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2443399429321289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.23940730094909668 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.23038434982299805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2513613700866699 s]
35/162 DONE. [mean time: 0.24176878929138185 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.184838056564331 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.2232649326324463 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1689119338989258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1716923713684082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1575746536254883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1712090969085693 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.2217769622802734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1977601051330566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.2137956619262695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.2845771312713623 s]
36/162 DONE. [mean time: 1.1996399879455566 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0020067691802978516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019812583923339844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0020034313201904297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019860267639160156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019943714141845703 s]
37/162 DONE. [mean time: 0.001595616340637207 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.0029573440551757812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.0020279884338378906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.0029566287994384766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.004019737243652344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.0029616355895996094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.003991365432739258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.003985881805419922 s]
38/162 DONE. [mean time: 0.003390979766845703 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.009972572326660156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.010970354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.010996341705322266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.010980367660522461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.010938405990600586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.012949705123901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.010970354080200195 s]
39/162 DONE. [mean time: 0.011269807815551758 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.038870811462402344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.03690147399902344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.03789854049682617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.038895606994628906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.040891170501708984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.038895606994628906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.03690171241760254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.037899017333984375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.03889584541320801 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.03893232345581055 s]
40/162 DONE. [mean time: 0.038597941398620605 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.19045495986938477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.17856550216674805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.16554903984069824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.16852116584777832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.14760541915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.16057133674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.17952203750610352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.1765282154083252 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.17253994941711426 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.17253708839416504 s]
41/162 DONE. [mean time: 0.17143874168395995 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6173501014709473 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6462745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6642649173736572 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6931836605072021 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6931142807006836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6502633094787598 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6911556720733643 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6981573104858398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.6323542594909668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.5993618965148926 s]
42/162 DONE. [mean time: 0.6586482286453247 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0009927749633789062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0009982585906982422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.0019948482513427734 s]
43/162 DONE. [mean time: 0.0014955520629882813 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.0029909610748291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.00399017333984375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.0029904842376708984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.0030007362365722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.0029828548431396484 s]
44/162 DONE. [mean time: 0.003291153907775879 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.012954950332641602 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.010971307754516602 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.012026786804199219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.01296544075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.012965679168701172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.012964010238647461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.011968851089477539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.013964414596557617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.013964176177978516 s]
45/162 DONE. [mean time: 0.012671375274658203 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.05227494239807129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.046537160873413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.04652571678161621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.046910762786865234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.046875953674316406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.04687356948852539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.046651601791381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.04687070846557617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0478363037109375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.04591560363769531 s]
46/162 DONE. [mean time: 0.04732723236083984 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.18739891052246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.19344639778137207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.2299041748046875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.19447970390319824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.1934826374053955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.19445323944091797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.18952250480651855 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.1964726448059082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.18949079513549805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61F0> done in 0.18550682067871094 s]
47/162 DONE. [mean time: 0.19551589488983154 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.891608715057373 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.8926513195037842 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.8806867599487305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.8597292900085449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.890617847442627 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.8607368469238281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.8547332286834717 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.854712963104248 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.8567290306091309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.9565272331237793 s]
48/162 DONE. [mean time: 0.8800740718841553 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.001987934112548828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0010018348693847656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0019638538360595703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0010285377502441406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.002001523971557617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0019528865814208984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0020246505737304688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0010056495666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0019693374633789062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 0.0010204315185546875 s]
49/162 DONE. [mean time: 0.0015956640243530273 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.003949642181396484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.004985809326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.004988670349121094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.003987789154052734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.0050165653228759766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.0039594173431396484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.0050203800201416016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.003968715667724609 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.005006313323974609 s]
50/162 DONE. [mean time: 0.004587030410766602 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.016954898834228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.015953540802001953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.01692342758178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.01598215103149414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.01697230339050293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.016947507858276367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.02291393280029297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.017966270446777344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.017929553985595703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.019979476928710938 s]
51/162 DONE. [mean time: 0.017852306365966797 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.07576107978820801 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06286787986755371 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06482720375061035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06382894515991211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06283164024353027 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06283235549926758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06479215621948242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06685566902160645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.0628347396850586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.06382918357849121 s]
52/162 DONE. [mean time: 0.06512608528137206 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.24581480026245117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.24733924865722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.24634099006652832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.24035859107971191 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.25734758377075195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.24734210968017578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.2632565498352051 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.23936223983764648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.25032901763916016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.24534392356872559 s]
53/162 DONE. [mean time: 0.2484830379486084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.2626323699951172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.1997931003570557 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.212763786315918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.2087738513946533 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.203782081604004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.2347331047058105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.2426681518554688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.223768949508667 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.3015551567077637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 1.2576665878295898 s]
54/162 DONE. [mean time: 1.2351130247116089 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0010039806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0009944438934326172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0009918212890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0009982585906982422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0009961128234863281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.000997304916381836 s]
55/162 DONE. [mean time: 0.0010938167572021485 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0030069351196289062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0029833316802978516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.002989053726196289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0029883384704589844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0029921531677246094 s]
56/162 DONE. [mean time: 0.0030919551849365235 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.013985633850097656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.011944293975830078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.012964963912963867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.01398777961730957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.012964963912963867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.01194310188293457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.012964725494384766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.01297760009765625 s]
57/162 DONE. [mean time: 0.012866640090942382 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.04787158966064453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.04787254333496094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.04787182807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.04886889457702637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0468752384185791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.05385899543762207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.049866437911987305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.04886960983276367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.05186104774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.04886937141418457 s]
58/162 DONE. [mean time: 0.049268555641174314 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.19148778915405273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.18650126457214355 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.19447994232177734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.21346521377563477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.2034590244293213 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.19550442695617676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.2022848129272461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.21043896675109863 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.2294478416442871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.20245885848999023 s]
59/162 DONE. [mean time: 0.20325231552124023 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9764077663421631 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9394817352294922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9493505954742432 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9544887542724609 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9659125804901123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9285814762115479 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9375224113464355 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.9308929443359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.8936107158660889 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.8926150798797607 s]
60/162 DONE. [mean time: 0.9368864059448242 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0019953250885009766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.000978708267211914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.001995563507080078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.000980377197265625 s]
61/162 DONE. [mean time: 0.0013962030410766602 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.003985881805419922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.0049517154693603516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.004014015197753906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.003957033157348633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.0040132999420166016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.004967927932739258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.00400853157043457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.004962444305419922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.0040132999420166016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64C0> done in 0.004962921142578125 s]
62/162 DONE. [mean time: 0.004383707046508789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.017928600311279297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.01795196533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.022938013076782227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.017952442169189453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.017926931381225586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.01994633674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.018949508666992188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.017952919006347656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.017919301986694336 s]
63/162 DONE. [mean time: 0.019046616554260255 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.07377982139587402 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.09474587440490723 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.09873485565185547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.08178138732910156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.07480025291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0718085765838623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.07679414749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.07380294799804688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.07197046279907227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0718080997467041 s]
64/162 DONE. [mean time: 0.07920141220092773 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2852010726928711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.27725911140441895 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.27729320526123047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2812840938568115 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2812507152557373 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.30418896675109863 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2872323989868164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2822442054748535 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.3011951446533203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2911841869354248 s]
65/162 DONE. [mean time: 0.2869332551956177 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4401602745056152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4471361637115479 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.532902717590332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.453019618988037 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4082789421081543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4610834121704102 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4874722957611084 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4621267318725586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5030097961425781 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.510026454925537 s]
66/162 DONE. [mean time: 1.4708177328109742 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.001982450485229492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.001995563507080078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.001993417739868164 s]
67/162 DONE. [mean time: 0.0019933700561523436 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.00695490837097168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.007006168365478516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.005980491638183594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.006951093673706055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.005995750427246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0069696903228759766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.006982088088989258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0069806575775146484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.00698089599609375 s]
68/162 DONE. [mean time: 0.006878972053527832 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.03787398338317871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.03892111778259277 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.03691244125366211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.03786206245422363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.03992629051208496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0379030704498291 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.046874046325683594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.040891170501708984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.03589296340942383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.039914608001708984 s]
69/162 DONE. [mean time: 0.039297175407409665 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.17055034637451172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.17453384399414062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16156554222106934 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16958403587341309 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16851425170898438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16060638427734375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16452336311340332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16456007957458496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16459918022155762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.16455721855163574 s]
70/162 DONE. [mean time: 0.16645944118499756 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.7719383239746094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.750990629196167 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.7644369602203369 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.7620012760162354 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.8187761306762695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.148927927017212 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.7999036312103271 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.7699053287506104 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.7679471969604492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9185354709625244 s]
71/162 DONE. [mean time: 0.8276319980621338 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.35408353805542 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.146509885787964 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.1893951892852783 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.1022250652313232 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.1086885929107666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 2.964115858078003 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 2.9403417110443115 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.02298641204834 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 2.9890356063842773 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 3.0331149101257324 s]
72/162 DONE. [mean time: 3.085149621963501 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0009982585906982422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0009975433349609375 s]
73/162 DONE. [mean time: 0.0012964487075805664 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0030167102813720703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.003965854644775391 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.003015756607055664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.002967357635498047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.003015756607055664 s]
74/162 DONE. [mean time: 0.0032935857772827147 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.01793050765991211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.01396036148071289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.012989282608032227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.012941598892211914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.012964487075805664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.011968851089477539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.011968612670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.012964963912963867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.012965917587280273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.012964963912963867 s]
75/162 DONE. [mean time: 0.013663601875305176 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.05140352249145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.04886913299560547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.051897287368774414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.04985547065734863 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.05881929397583008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.05285763740539551 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0548553466796875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.05784440040588379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.05186057090759277 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.05188560485839844 s]
76/162 DONE. [mean time: 0.053014826774597165 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.22341561317443848 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.2163858413696289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.20747923851013184 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.210404634475708 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.2004995346069336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.24331402778625488 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.19950222969055176 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.21937870979309082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.20502090454101562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.22336602210998535 s]
77/162 DONE. [mean time: 0.21517560482025147 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9864275455474854 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9851925373077393 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9870693683624268 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9268288612365723 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 1.0634191036224365 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 1.009941816329956 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9484646320343018 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9504966735839844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9554686546325684 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.9514932632446289 s]
78/162 DONE. [mean time: 0.9768812656402588 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.001959085464477539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0010216236114501953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.001970529556274414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0010216236114501953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0019707679748535156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0010221004486083984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.001968860626220703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0010230541229248047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0019693374633789062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0010223388671875 s]
79/162 DONE. [mean time: 0.0014949321746826171 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005959510803222656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005012989044189453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.003986835479736328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004962444305419922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005011320114135742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.003971576690673828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.00499725341796875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004969358444213867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005011320114135742 s]
80/162 DONE. [mean time: 0.004886913299560547 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.01795172691345215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.01894855499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.018974781036376953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.018923282623291016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.01898360252380371 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.018916606903076172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.018949031829833984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.01994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.017952680587768555 s]
81/162 DONE. [mean time: 0.019046545028686523 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07483553886413574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07277131080627441 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07483458518981934 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07480239868164062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07376432418823242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07783079147338867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07875323295593262 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07383584976196289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07779216766357422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.07280778884887695 s]
82/162 DONE. [mean time: 0.0752027988433838 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2882411479949951 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2852754592895508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2901875972747803 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.29180169105529785 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.30446529388427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.28224682807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.29824018478393555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2872319221496582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2881960868835449 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.29026031494140625 s]
83/162 DONE. [mean time: 0.290614652633667 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.502988576889038 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4421827793121338 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4481682777404785 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4460983276367188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4132440090179443 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.444103479385376 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4451613426208496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4511573314666748 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4381210803985596 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.470592975616455 s]
84/162 DONE. [mean time: 1.4503830194473266 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.0029566287994384766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.0019958019256591797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.001999378204345703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.0019888877868652344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.002007722854614258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.0019817352294921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.0019948482513427734 s]
85/162 DONE. [mean time: 0.002090859413146973 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006957292556762695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006995439529418945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.00596165657043457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006969451904296875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006957292556762695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.008014678955078125 s]
86/162 DONE. [mean time: 0.007181978225708008 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.04587054252624512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0379030704498291 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.03786516189575195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.036889076232910156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.04788374900817871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0388641357421875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.036900997161865234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.03789806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.037876129150390625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.045916080474853516 s]
87/162 DONE. [mean time: 0.040592002868652347 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.1616044044494629 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.16057085990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.16112804412841797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.17752337455749512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.16954493522644043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.1545865535736084 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.16858839988708496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.15754008293151855 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.15558362007141113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.16655731201171875 s]
88/162 DONE. [mean time: 0.1633227586746216 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7280535697937012 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7360601425170898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7540225982666016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7280454635620117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7310338020324707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7290511131286621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7270586490631104 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7280564308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7280902862548828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7430419921875 s]
89/162 DONE. [mean time: 0.733452033996582 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 2.9730942249298096 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.000598907470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.051905870437622 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.05389142036438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.0209484100341797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 2.9614827632904053 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.4458303451538086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.020170211791992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.0329248905181885 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 3.044926166534424 s]
90/162 DONE. [mean time: 3.0606773614883425 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0020265579223632812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0009739398956298828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0010271072387695312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0009734630584716797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.001027822494506836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0009613037109375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0010344982147216797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.001956939697265625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0010335445404052734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0009582042694091797 s]
91/162 DONE. [mean time: 0.0014959096908569336 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.003979921340942383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.0029973983764648438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.0029489994049072266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.004022359848022461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.002997875213623047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.003982067108154297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.002996206283569336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.003972053527832031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.0039751529693603516 s]
92/162 DONE. [mean time: 0.00368647575378418 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.01396632194519043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.013959646224975586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.016957759857177734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.016957998275756836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.014967203140258789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.015951156616210938 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.014926671981811523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.014997720718383789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.014959335327148438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.014960050582885742 s]
93/162 DONE. [mean time: 0.015358996391296387 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05681037902832031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.055850982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05086374282836914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05485105514526367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05388188362121582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.052865028381347656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05385994911193848 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05286097526550293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.055848121643066406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.05385184288024902 s]
94/162 DONE. [mean time: 0.05435435771942139 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.21344232559204102 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.21068644523620605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.20046424865722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.21143484115600586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.20846891403198242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.21244192123413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.21239638328552246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.20345592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.20245862007141113 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.21143507957458496 s]
95/162 DONE. [mean time: 0.20866847038269043 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 1.005312442779541 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 1.0033180713653564 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.9763822555541992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 1.013291358947754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 1.008303165435791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.9614319801330566 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 1.0095272064208984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 1.013176679611206 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.9990837574005127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.990415096282959 s]
96/162 DONE. [mean time: 0.9983243465423584 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0019974708557128906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.001955747604370117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.002024412155151367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.001996755599975586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0010025501251220703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0019659996032714844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0019989013671875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0020110607147216797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0010025501251220703 s]
97/162 DONE. [mean time: 0.0018951892852783203 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.005975484848022461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.004955291748046875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.005021095275878906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.004952430725097656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.004985809326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.004988431930541992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.0049855709075927734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.00499415397644043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.004979372024536133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6310> done in 0.00498652458190918 s]
98/162 DONE. [mean time: 0.005082416534423828 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.019944429397583008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.018950223922729492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.019950389862060547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.01894545555114746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.01991105079650879 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.020978689193725586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.021906614303588867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.01998114585876465 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.022939205169677734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.02094101905822754 s]
99/162 DONE. [mean time: 0.020644307136535645 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.07878637313842773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.08275294303894043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.08081245422363281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.08177804946899414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.08174896240234375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.08078408241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.08304595947265625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.081817626953125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.07582378387451172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62B0> done in 0.07483577728271484 s]
100/162 DONE. [mean time: 0.08041179180145264 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.3011925220489502 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.31515955924987793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.33905482292175293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.34108829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.3032534122467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.30518102645874023 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.35704898834228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.35002851486206055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.30921030044555664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6280> done in 0.30315208435058594 s]
101/162 DONE. [mean time: 0.3224369525909424 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.5129144191741943 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.5628547668457031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.61470365524292 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.5867843627929688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.6784775257110596 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.729377031326294 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.609694242477417 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 1.637622356414795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 2.036593437194824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6250> done in 2.0684337615966797 s]
102/162 DONE. [mean time: 1.7038455963134767 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0019931793212890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0029528141021728516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.003990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0019922256469726562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0029931068420410156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.002029895782470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0019614696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.003022432327270508 s]
103/162 DONE. [mean time: 0.0029951095581054687 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.007943391799926758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.007967710494995117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.008950471878051758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.008977413177490234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.010972976684570312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.009977102279663086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.008940696716308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.008976936340332031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.012966632843017578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.011969327926635742 s]
104/162 DONE. [mean time: 0.01026899814605713 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.05890202522277832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04584646224975586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04192376136779785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04687380790710449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04185199737548828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04886937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04691123962402344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04284858703613281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.042922019958496094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 0.04288434982299805 s]
105/162 DONE. [mean time: 0.04618294239044189 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.23734521865844727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.20249462127685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.20641303062438965 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.2044517993927002 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.19651126861572266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.19743633270263672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.2313826084136963 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.1984694004058838 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.18453717231750488 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 0.18946313858032227 s]
106/162 DONE. [mean time: 0.20495026111602782 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.8079051971435547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.828747034072876 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.797898530960083 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.8148250579833984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.7669498920440674 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.765918493270874 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.7590110301971436 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.7616052627563477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.75099778175354 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.7659528255462646 s]
107/162 DONE. [mean time: 0.7819811105728149 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.104675769805908 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.0955421924591064 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.0987250804901123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.1067514419555664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.097810745239258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.0767738819122314 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.0289111137390137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.0398778915405273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.152669906616211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 3.0208511352539062 s]
108/162 DONE. [mean time: 3.082359766960144 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0019936561584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.002011537551879883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.0009801387786865234 s]
109/162 DONE. [mean time: 0.00139617919921875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.004992008209228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.0039844512939453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.004987239837646484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003988742828369141 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.004987955093383789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.004012584686279297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003964424133300781 s]
110/162 DONE. [mean time: 0.004488015174865722 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.01795196533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.01793217658996582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.019966602325439453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.01796245574951172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.019947052001953125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.01891326904296875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.01795196533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.018976449966430664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.018922090530395508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 0.01894855499267578 s]
111/162 DONE. [mean time: 0.01874725818634033 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07583498954772949 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07380032539367676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.08677411079406738 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07515525817871094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07281184196472168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07450032234191895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07283854484558105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07081079483032227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.07081079483032227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.06984639167785645 s]
112/162 DONE. [mean time: 0.07441482543945313 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.28125882148742676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.29421305656433105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.27726006507873535 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.2772660255432129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.27625370025634766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.2872314453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.32512879371643066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.2762637138366699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.2832071781158447 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.27330541610717773 s]
113/162 DONE. [mean time: 0.28513882160186765 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.3972291946411133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.4299850463867188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.3983278274536133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.4012625217437744 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.3843424320220947 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.4053709506988525 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.4232571125030518 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.4704701900482178 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.445192813873291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 1.4601249694824219 s]
114/162 DONE. [mean time: 1.4217571020126343 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.002019643783569336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0010213851928710938 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.0019702911376953125 s]
115/162 DONE. [mean time: 0.0019946575164794924 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.00698089599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.00698089599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.007979154586791992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.005983114242553711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0059833526611328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0070078372955322266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.006956815719604492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0069811344146728516 s]
116/162 DONE. [mean time: 0.007081079483032227 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.036902427673339844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.03691601753234863 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.03688645362854004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.03687596321105957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.039930105209350586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.04284811019897461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.043921709060668945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.0369265079498291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.03590536117553711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 0.034906625747680664 s]
117/162 DONE. [mean time: 0.03830158710479736 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.15957379341125488 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.15358686447143555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.1495664119720459 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.1595754623413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.16559171676635742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.1695106029510498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.15961027145385742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.1585402488708496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.15882015228271484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.15259313583374023 s]
118/162 DONE. [mean time: 0.15869686603546143 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.70611572265625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.752030611038208 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.6787948608398438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.6921844482421875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.7120616436004639 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.7111382484436035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.6911182403564453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.6961729526519775 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.6801459789276123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.678227424621582 s]
119/162 DONE. [mean time: 0.6998989343643188 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 2.9136135578155518 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 2.937041759490967 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 2.947762966156006 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 2.9371020793914795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 2.9910380840301514 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 2.9202189445495605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 3.0179331302642822 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 3.0060007572174072 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 4.062105894088745 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6670> done in 3.7305805683135986 s]
120/162 DONE. [mean time: 3.146539306640625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0029909610748291016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.00399017333984375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.002991914749145508 s]
121/162 DONE. [mean time: 0.0032911777496337892 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.014960289001464844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.016955852508544922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.012691736221313477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.01296377182006836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.013988018035888672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.012941122055053711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.015964746475219727 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.014951705932617188 s]
122/162 DONE. [mean time: 0.01433424949645996 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08281135559082031 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08676910400390625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08875751495361328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08677220344543457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08577084541320801 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.09358692169189453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.1047213077545166 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08381056785583496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08178186416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.08361053466796875 s]
123/162 DONE. [mean time: 0.08803858757019042 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.363994836807251 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3549613952636719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3731875419616699 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3880000114440918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3889596462249756 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.362032413482666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3649876117706299 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.37898731231689453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.40192532539367676 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.39198827743530273 s]
124/162 DONE. [mean time: 0.3771019458770752 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.5418686866760254 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.6027169227600098 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.5548474788665771 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.6356608867645264 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.8889179229736328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.9440693855285645 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 2.104851245880127 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.7254290580749512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.5578374862670898 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.5199756622314453 s]
125/162 DONE. [mean time: 1.707716131210327 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.99883770942688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.940182685852051 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.782134532928467 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.799665212631226 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.825429201126099 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.90625262260437 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.338571786880493 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.088972091674805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.924737930297852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.818428993225098 s]
126/162 DONE. [mean time: 5.942421078681946 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.001992940902709961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0019927024841308594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0010323524475097656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009987354278564453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009870529174804688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009775161743164062 s]
127/162 DONE. [mean time: 0.0014981985092163085 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.00496220588684082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.005017995834350586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.004007577896118164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.004937171936035156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0050258636474609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.003980875015258789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.00595402717590332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.006980419158935547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.005983591079711914 s]
128/162 DONE. [mean time: 0.005183625221252442 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.01997208595275879 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.018924236297607422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.01997661590576172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.017923831939697266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.01792764663696289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.019921064376831055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.017952680587768555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.017951250076293945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.01795363426208496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.016955137252807617 s]
129/162 DONE. [mean time: 0.018949413299560548 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.08876276016235352 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.07579803466796875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.07483792304992676 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0787515640258789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0747992992401123 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.07480144500732422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.07380104064941406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06981348991394043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.07380294799804688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.07383871078491211 s]
130/162 DONE. [mean time: 0.07600045204162598 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.30515098571777344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.298201322555542 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2922546863555908 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2921767234802246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.29920196533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.28826475143432617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3440971374511719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2852354049682617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2931816577911377 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.28922510147094727 s]
131/162 DONE. [mean time: 0.2987971782684326 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4421467781066895 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.452152967453003 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4471681118011475 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.437121868133545 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.481081247329712 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4421465396881104 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4490900039672852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4641673564910889 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4591360092163086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 1.4418582916259766 s]
132/162 DONE. [mean time: 1.4518028259277345 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.002950906753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.001996278762817383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.001993894577026367 s]
133/162 DONE. [mean time: 0.002190041542053223 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.007977724075317383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.006981611251831055 s]
134/162 DONE. [mean time: 0.007081174850463867 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.038875579833984375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.034908294677734375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.04091477394104004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.03793931007385254 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.03590512275695801 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.034906864166259766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.03586840629577637 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0359036922454834 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.035906076431274414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.03490757942199707 s]
135/162 DONE. [mean time: 0.03670423030853272 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.15462064743041992 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.16552138328552246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.1595313549041748 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.15957403182983398 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.1596088409423828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.15355348587036133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.15059757232666016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.15861105918884277 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.1555767059326172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.15659117698669434 s]
136/162 DONE. [mean time: 0.157716703414917 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7300095558166504 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7211368083953857 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7379913330078125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7180843353271484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7319321632385254 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7161686420440674 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7029476165771484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7430505752563477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7280559539794922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7400529384613037 s]
137/162 DONE. [mean time: 0.7271430015563964 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.023886203765869 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.0837416648864746 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.037003517150879 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.0029971599578857 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.0229198932647705 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.129596471786499 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.0239171981811523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.0358500480651855 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 2.999018430709839 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 3.0000293254852295 s]
138/162 DONE. [mean time: 3.0361964464187623 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029735565185546875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.005183696746826172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.00399017333984375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.003987789154052734 s]
139/162 DONE. [mean time: 0.00390927791595459 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.016980409622192383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.014934778213500977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.013926506042480469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.013992071151733398 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.012960433959960938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.017944812774658203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.013946056365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.01599597930908203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.014921188354492188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.014001131057739258 s]
140/162 DONE. [mean time: 0.015063667297363281 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08676648139953613 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.09275102615356445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08477377891540527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08377599716186523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08374238014221191 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.087799072265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08074784278869629 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08178257942199707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.08178091049194336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0857703685760498 s]
141/162 DONE. [mean time: 0.08506875038146973 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3650979995727539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3610391616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3610234260559082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.36403679847717285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3620595932006836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3660252094268799 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3526890277862549 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.35804104804992676 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3889620304107666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3710136413574219 s]
142/162 DONE. [mean time: 0.3651982545852661 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5678341388702393 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5599262714385986 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5359346866607666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.587721347808838 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5888097286224365 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5528857707977295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.569767713546753 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.4740934371948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5381298065185547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5438735485076904 s]
143/162 DONE. [mean time: 1.5520025491714478 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.8514404296875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.890253782272339 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.716766119003296 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.882285833358765 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.887335300445557 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.859405040740967 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.8673622608184814 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.8754048347473145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.824399471282959 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 5.869174003601074 s]
144/162 DONE. [mean time: 5.852478766441346 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0020067691802978516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.001981973648071289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0020062923431396484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019834041595458984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0009810924530029297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.000997304916381836 s]
145/162 DONE. [mean time: 0.0017951726913452148 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.003979921340942383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.004987478256225586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0049860477447509766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.004987478256225586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.003994464874267578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.00498652458190918 s]
146/162 DONE. [mean time: 0.00498659610748291 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.01894974708557129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.017951488494873047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.017953872680664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.01994490623474121 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.022938966751098633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.028957366943359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.0308840274810791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.021939754486083984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.01897907257080078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66A0> done in 0.02493429183959961 s]
147/162 DONE. [mean time: 0.022643351554870607 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07679367065429688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07679438591003418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.0728156566619873 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07879137992858887 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07380127906799316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.08078598976135254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07380223274230957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07183480262756348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07879233360290527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6640> done in 0.07376408576965332 s]
148/162 DONE. [mean time: 0.07599306106567383 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.3025796413421631 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.2872333526611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.30121946334838867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.29716920852661133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.29624414443969727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.3071427345275879 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.2932558059692383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.3111286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.36801648139953613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6610> done in 0.2862355709075928 s]
149/162 DONE. [mean time: 0.30532279014587405 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.526899814605713 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5688064098358154 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5089664459228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5070085525512695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.470033884048462 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5379502773284912 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5109992027282715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5039477348327637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5390729904174805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65E0> done in 1.5020391941070557 s]
150/162 DONE. [mean time: 1.5175724506378174 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.001993417739868164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.0030007362365722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F65B0> done in 0.001985311508178711 s]
151/162 DONE. [mean time: 0.002692699432373047 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.007979154586791992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.007979154586791992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.007978439331054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.00800943374633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.007980823516845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.006948709487915039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.008008480072021484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.006951093673706055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6580> done in 0.006983280181884766 s]
152/162 DONE. [mean time: 0.007780337333679199 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03690171241760254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.0379030704498291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.038893938064575195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03785967826843262 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03693842887878418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03686690330505371 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03693652153015137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03690171241760254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03693723678588867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6550> done in 0.03594064712524414 s]
153/162 DONE. [mean time: 0.0374997615814209 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.16256475448608398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.1565701961517334 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.16756343841552734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.15953731536865234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.15259408950805664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.15259623527526855 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.1735703945159912 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.15458965301513672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.1605677604675293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6520> done in 0.16156935691833496 s]
154/162 DONE. [mean time: 0.16017231941223145 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7191059589385986 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7130577564239502 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7321164608001709 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7400264739990234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7270278930664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7300839424133301 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7320802211761475 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7270572185516357 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7349998950958252 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6040> done in 0.7440159320831299 s]
155/162 DONE. [mean time: 0.7299571752548217 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.0169382095336914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.0095105171203613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.011943817138672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.013976573944092 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.013941526412964 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.1735949516296387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.0299019813537598 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.0052058696746826 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.047851800918579 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6070> done in 3.0428597927093506 s]
156/162 DONE. [mean time: 3.036572504043579 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003994941711425781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003986358642578125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003991365432739258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.0039861202239990234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.004002809524536133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.0049741268157958984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60A0> done in 0.003989219665527344 s]
157/162 DONE. [mean time: 0.004089188575744629 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.01795196533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.013996124267578125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.014957666397094727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.014960527420043945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.014958381652832031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.012933969497680664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.015989303588867188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.013961553573608398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F60D0> done in 0.014961957931518555 s]
158/162 DONE. [mean time: 0.014863538742065429 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08577108383178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08975887298583984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08972287178039551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.0827796459197998 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08676838874816895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08281326293945312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08479809761047363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08074951171875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.08976078033447266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6100> done in 0.10072994232177734 s]
159/162 DONE. [mean time: 0.08756248950958252 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.364027738571167 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.36705493927001953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.35900354385375977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.36602067947387695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.3491027355194092 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.36302924156188965 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.35505080223083496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.3630690574645996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.35704588890075684 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6130> done in 0.35803937911987305 s]
160/162 DONE. [mean time: 0.3604439735412598 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5408875942230225 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.554837942123413 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5259523391723633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5499022006988525 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5618531703948975 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5758261680603027 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5758721828460693 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5957410335540771 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5648748874664307 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6160> done in 1.5518884658813477 s]
161/162 DONE. [mean time: 1.5599599838256837 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.844380855560303 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.950711011886597 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 6.234344720840454 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.883275270462036 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.8883020877838135 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.931190013885498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.888299465179443 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.922169923782349 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.907257318496704 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6190> done in 5.952093839645386 s]
162/162 DONE. [mean time: 5.940302181243896 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION numpy_gemm DONE. [time: 738.6943628787994 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION numba_jit_direct...
1/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 0.0 s]
1/162 DONE. [mean time: 0.0002991676330566406 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.0009970664978027344 s]
2/162 DONE. [mean time: 0.0011966943740844727 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.0059833526611328125 s]
3/162 DONE. [mean time: 0.005884242057800293 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.0249330997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.023936033248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.023935794830322266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.025931119918823242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.023936033248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.023936748504638672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.024935007095336914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.024933338165283203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.02592945098876953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.02592945098876953 s]
4/162 DONE. [mean time: 0.02483360767364502 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.10272336006164551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.09773874282836914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.10671496391296387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.09773850440979004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0967411994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.09873533248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.09873628616333008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.10970711708068848 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.09873533248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.10372400283813477 s]
5/162 DONE. [mean time: 0.10132904052734375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.4029231071472168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.40190696716308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.412930965423584 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.40188002586364746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.40491318702697754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.40491628646850586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.40691208839416504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.4069514274597168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.4079475402832031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.4038875102996826 s]
6/162 DONE. [mean time: 0.4059198617935181 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009915828704833984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0 s]
7/162 DONE. [mean time: 0.0003983020782470703 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.001986980438232422 s]
8/162 DONE. [mean time: 0.0021941423416137694 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.009972333908081055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.00997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.010970830917358398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.009972810745239258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.011968612670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.00997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 0.010970592498779297 s]
9/162 DONE. [mean time: 0.01047189235687256 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04787158966064453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.046874046325683594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04388260841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04388260841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.044879913330078125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04488682746887207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04488039016723633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04587745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04388260841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.044879913330078125 s]
10/162 DONE. [mean time: 0.04527957439422607 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18849539756774902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18949341773986816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18450570106506348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18849635124206543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18550539016723633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18950724601745605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18452167510986328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18550324440002441 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18849635124206543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.18753504753112793 s]
11/162 DONE. [mean time: 0.18740549087524414 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.758887529373169 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7769229412078857 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7629642486572266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7609701156616211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7579777240753174 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7629976272583008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7760026454925537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7729732990264893 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7758896350860596 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.7729353904724121 s]
12/162 DONE. [mean time: 0.7680516242980957 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009789466857910156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009789466857910156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009970664978027344 s]
13/162 DONE. [mean time: 0.000696253776550293 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.005987405776977539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0049839019775390625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.004987239837646484 s]
14/162 DONE. [mean time: 0.004587745666503907 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.01894831657409668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.018948793411254883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.018949508666992188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.019947290420532227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.01994633674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.019946575164794922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.018949508666992188 s]
15/162 DONE. [mean time: 0.01934816837310791 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08377504348754883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08477377891540527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08477187156677246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.09175610542297363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.09374809265136719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08680343627929688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08676981925964355 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08676695823669434 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08776473999023438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.09072184562683105 s]
16/162 DONE. [mean time: 0.08786489963531494 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.3510627746582031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.35804152488708496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.3640627861022949 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.36203479766845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.3520357608795166 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.35907673835754395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.36099982261657715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.3498260974884033 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.35106325149536133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.35904383659362793 s]
17/162 DONE. [mean time: 0.35692687034606935 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.465149164199829 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.4371604919433594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.4551141262054443 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.4291911125183105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.5090820789337158 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.466160774230957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.4480981826782227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.4411513805389404 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.4231958389282227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.429182529449463 s]
18/162 DONE. [mean time: 1.4504482984542846 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997304916381836 s]
19/162 DONE. [mean time: 0.000498652458190918 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019948482513427734 s]
20/162 DONE. [mean time: 0.0023936033248901367 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970830917358398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0109710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.009973287582397461 s]
21/162 DONE. [mean time: 0.01107039451599121 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.04887056350708008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.048903703689575195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.04983162879943848 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.05285787582397461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.04787182807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.047872066497802734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.04787182807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.04786396026611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.04787182807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.047872066497802734 s]
22/162 DONE. [mean time: 0.04886929988861084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.20345664024353027 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.19747209548950195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.19849681854248047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.20345568656921387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.19747233390808105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.19448161125183105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.20345640182495117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.19647860527038574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.20345616340637207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.20149636268615723 s]
23/162 DONE. [mean time: 0.20027148723602295 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.8307719230651855 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.8098733425140381 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.8018248081207275 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.7999048233032227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.8138306140899658 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.7988648414611816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.7948737144470215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.7988698482513428 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.8068430423736572 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.8218438625335693 s]
24/162 DONE. [mean time: 0.8077500820159912 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009970664978027344 s]
25/162 DONE. [mean time: 0.0007978677749633789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.003976106643676758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.004986763000488281 s]
26/162 DONE. [mean time: 0.004287266731262207 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.019946575164794922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.01994633674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.021941423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.020943880081176758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.02094435691833496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.021939992904663086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.020943880081176758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.022938966751098633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.024965524673461914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.020944595336914062 s]
27/162 DONE. [mean time: 0.021545553207397462 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.0937185287475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.08876204490661621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.08876276016235352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09075736999511719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09474754333496094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09075713157653809 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09175324440002441 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.08776545524597168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.08975958824157715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09075808525085449 s]
28/162 DONE. [mean time: 0.09075417518615722 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.37400150299072266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.3759937286376953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.37100958824157715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.37605714797973633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.375960111618042 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.3730018138885498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.3710136413574219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.36901354789733887 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.3730032444000244 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.3720078468322754 s]
29/162 DONE. [mean time: 0.37330563068389894 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.5249252319335938 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.5079755783081055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.524932622909546 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.4970059394836426 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.5329394340515137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.533862590789795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.496004581451416 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.5019865036010742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.5029828548431396 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.5100090503692627 s]
30/162 DONE. [mean time: 1.513362169265747 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009815692901611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.000997781753540039 s]
31/162 DONE. [mean time: 0.0013946533203125 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.007977962493896484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.00798177719116211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.00797891616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.00797891616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.007978439331054688 s]
32/162 DONE. [mean time: 0.008078646659851075 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.038896799087524414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.03989267349243164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.03989291191101074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.03989386558532715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.04089069366455078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.041887760162353516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.039893388748168945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.03889608383178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0388948917388916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.04089164733886719 s]
33/162 DONE. [mean time: 0.03999307155609131 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.17357110977172852 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.18147969245910645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.17157745361328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.17353534698486328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.17952346801757812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1725771427154541 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.17453408241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.17649197578430176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.16855072975158691 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.16954684257507324 s]
34/162 DONE. [mean time: 0.17423810958862304 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.707146167755127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.735112190246582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.707075834274292 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.718085527420044 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.7051522731781006 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.7101008892059326 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.7171230316162109 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.708111047744751 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.7001287937164307 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.7200748920440674 s]
35/162 DONE. [mean time: 0.7128110647201538 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.854372024536133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.8533806800842285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.865339517593384 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.896339178085327 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.9132511615753174 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.894338846206665 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.8743174076080322 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 3.1077022552490234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.8734652996063232 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 2.849374532699585 s]
36/162 DONE. [mean time: 2.8983863592147827 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009975433349609375 s]
37/162 DONE. [mean time: 0.0008976221084594727 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.003988742828369141 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.004986286163330078 s]
38/162 DONE. [mean time: 0.0046874284744262695 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.022938013076782227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.021941423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.02293872833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.021941184997558594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.02692866325378418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.021940946578979492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.024933338165283203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.021941423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.021941184997558594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.021941184997558594 s]
39/162 DONE. [mean time: 0.02293860912322998 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.09574508666992188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.0937492847442627 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.0957789421081543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.09870076179504395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.10072994232177734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.09574413299560547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.09474682807922363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.0967411994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.09973359107971191 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.09877157211303711 s]
40/162 DONE. [mean time: 0.09704413414001464 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.3989565372467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.3919525146484375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.39394688606262207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.394944429397583 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.3979361057281494 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.39394712448120117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.39095520973205566 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.3959770202636719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.40491795539855957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C10> done in 0.40493226051330566 s]
41/162 DONE. [mean time: 0.3973409175872803 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6096603870391846 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6017239093780518 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.620690107345581 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6116540431976318 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.614685297012329 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6027183532714844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6347501277923584 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6056737899780273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6106932163238525 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 1.6017224788665771 s]
42/162 DONE. [mean time: 1.6114983081817627 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.000997304916381836 s]
43/162 DONE. [mean time: 0.0013962507247924805 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.007978439331054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008976221084594727 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.008975744247436523 s]
44/162 DONE. [mean time: 0.008676743507385254 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.03989267349243164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04288673400878906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04089069366455078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04188799858093262 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04188847541809082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.041887521743774414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04587745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04188799858093262 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04188823699951172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04088950157165527 s]
45/162 DONE. [mean time: 0.0419877290725708 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.18051695823669434 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.1825122833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.18254828453063965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.1795201301574707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.18447160720825195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.17838215827941895 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.17852282524108887 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.18650150299072266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.17552947998046875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.18051767349243164 s]
46/162 DONE. [mean time: 0.18110177516937256 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7490372657775879 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7679080963134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7519934177398682 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7420182228088379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7470414638519287 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7399895191192627 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7530245780944824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7600088119506836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7509565353393555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.7529873847961426 s]
47/162 DONE. [mean time: 0.7514965295791626 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0235133171081543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.037949562072754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0677995681762695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0598251819610596 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0099542140960693 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0319344997406006 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.035853624343872 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0658671855926514 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.086749792098999 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 3.0882112979888916 s]
48/162 DONE. [mean time: 3.0509653091430664 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0019834041595458984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0019919872283935547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029942989349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029931068420410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0019958019256591797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0029561519622802734 s]
49/162 DONE. [mean time: 0.002788996696472168 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.016945600509643555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.016965389251708984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.016954660415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.016954898834228516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.01794147491455078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.01694774627685547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.016974449157714844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0169525146484375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.01795172691345215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.01695108413696289 s]
50/162 DONE. [mean time: 0.01715395450592041 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08478379249572754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08178162574768066 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08177876472473145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08178472518920898 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.07978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08174419403076172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08477497100830078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08081865310668945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.07978701591491699 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.08078551292419434 s]
51/162 DONE. [mean time: 0.08188230991363525 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.354053258895874 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3380603790283203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3461475372314453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3510615825653076 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3510620594024658 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.34807443618774414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3520963191986084 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3500649929046631 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.34607505798339844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.3510599136352539 s]
52/162 DONE. [mean time: 0.3489751577377319 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.432208776473999 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.433211326599121 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.446098804473877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4252259731292725 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4311747550964355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4281833171844482 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4431052207946777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4182450771331787 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4371237754821777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.4251947402954102 s]
53/162 DONE. [mean time: 1.4320765256881713 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.880324363708496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.890297174453735 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.869902610778809 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.828458786010742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.819448232650757 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.884307861328125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.854391574859619 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.917246341705322 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.891441822052002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 5.806521654129028 s]
54/162 DONE. [mean time: 5.864434337615966 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009961128234863281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997304916381836 s]
55/162 DONE. [mean time: 0.000299072265625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019936561584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019943714141845703 s]
56/162 DONE. [mean time: 0.0024933099746704103 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.013998270034790039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.012962579727172852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.012965679168701172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.013965129852294922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.013948917388916016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.013973236083984375 s]
57/162 DONE. [mean time: 0.013867688179016114 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06483030319213867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06283211708068848 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06481528282165527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06678199768066406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06183457374572754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0618743896484375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06282877922058105 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06582427024841309 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06382894515991211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.06379485130310059 s]
58/162 DONE. [mean time: 0.06402571201324463 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.26831626892089844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.26728391647338867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2752537727355957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.27126383781433105 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2692906856536865 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2732696533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2652907371520996 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.27331113815307617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.27226972579956055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2732667922973633 s]
59/162 DONE. [mean time: 0.27118217945098877 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.08306884765625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1260290145874023 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.0950720310211182 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1160569190979004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.118177890777588 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1110150814056396 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.122077226638794 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1099984645843506 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1150949001312256 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.10707688331604 s]
60/162 DONE. [mean time: 1.1104682207107544 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
61/162 DONE. [mean time: 0.0004997491836547851 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003978252410888672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003973722457885742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003986358642578125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003983497619628906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003987550735473633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.003986358642578125 s]
62/162 DONE. [mean time: 0.004285264015197754 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.02691507339477539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.02394890785217285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.024930715560913086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.02494072914123535 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.024936199188232422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.02393651008605957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0258941650390625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0249330997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.024933815002441406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.026929140090942383 s]
63/162 DONE. [mean time: 0.025329852104187013 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11568856239318848 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11569070816040039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11369490623474121 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11170244216918945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.1207118034362793 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11768865585327148 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11672449111938477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.11668705940246582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.12168169021606445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.1166849136352539 s]
64/162 DONE. [mean time: 0.11679494380950928 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.48766422271728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.4857003688812256 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.4987044334411621 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.49767231941223145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.4937572479248047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.49567604064941406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.4976692199707031 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5017004013061523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.48865509033203125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.49072837829589844 s]
65/162 DONE. [mean time: 0.4937927722930908 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.052446126937866 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.041544198989868 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.0516011714935303 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.0485260486602783 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.054509162902832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.0605695247650146 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.0235910415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.048527479171753 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.0565383434295654 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.0515146255493164 s]
66/162 DONE. [mean time: 2.0489367723464964 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.000986337661743164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.001007080078125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009877681732177734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
67/162 DONE. [mean time: 0.0006969928741455078 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.008950948715209961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.008014202117919922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.011930227279663086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.008976221084594727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.00901174545288086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.008970260620117188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.008984088897705078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.007978200912475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.008972406387329102 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 0.007979154586791992 s]
68/162 DONE. [mean time: 0.009076905250549317 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.05018496513366699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.047872304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.04983067512512207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.04886937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.04886937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.04886937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.048905372619628906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.049869537353515625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.05387258529663086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.049851417541503906 s]
69/162 DONE. [mean time: 0.04979894161224365 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.23038554191589355 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.2343730926513672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.2223801612854004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.22643518447875977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.23537254333496094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.2293872833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.23636293411254883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.2283940315246582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.22934889793395996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.2244398593902588 s]
70/162 DONE. [mean time: 0.22978649139404297 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9804153442382812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9874036312103271 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9834201335906982 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9794251918792725 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9694845676422119 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.981450080871582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9794223308563232 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9923429489135742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9864494800567627 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.9793736934661865 s]
71/162 DONE. [mean time: 0.9820184946060181 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 4.0382091999053955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 4.009546756744385 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 4.019284725189209 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 3.9814200401306152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 3.968395948410034 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 3.9704267978668213 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 3.959416389465332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 3.9933319091796875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 3.9574642181396484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 4.003274202346802 s]
72/162 DONE. [mean time: 3.990476870536804 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997304916381836 s]
73/162 DONE. [mean time: 0.0005984306335449219 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.004998683929443359 s]
74/162 DONE. [mean time: 0.0047872066497802734 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.02991962432861328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.02792525291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.026928186416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.026928424835205078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.026928424835205078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.02692723274230957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.026928186416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.02692866325378418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.02792501449584961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.025930166244506836 s]
75/162 DONE. [mean time: 0.027426671981811524 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12466621398925781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1296534538269043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12865686416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1286911964416504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1266636848449707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1306462287902832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12566614151000977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12562847137451172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12267327308654785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12666010856628418 s]
76/162 DONE. [mean time: 0.12706077098846436 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5255951881408691 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5236012935638428 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5236005783081055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5356032848358154 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5285863876342773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5276250839233398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.540557861328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5385234355926514 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5236003398895264 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5316178798675537 s]
77/162 DONE. [mean time: 0.5300866842269898 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.170167922973633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.189148187637329 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.1711997985839844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.1602354049682617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.168205499649048 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.1592323780059814 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.1592283248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.1801724433898926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.1612229347229004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2021453380584717 s]
78/162 DONE. [mean time: 2.172295260429382 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.000986337661743164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0010063648223876953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009951591491699219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009672641754150391 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0010273456573486328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009913444519042969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009968280792236328 s]
79/162 DONE. [mean time: 0.0007967233657836914 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.007988929748535156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.008979320526123047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.007979393005371094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.008972644805908203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.008986473083496094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.008965015411376953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.00797891616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.008975505828857422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.008974790573120117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.007977724075317383 s]
80/162 DONE. [mean time: 0.008674263954162598 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.05484938621520996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.04987335205078125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0489048957824707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.05485057830810547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.048871517181396484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.04986453056335449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.05086398124694824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.04983162879943848 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.05093693733215332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.04883551597595215 s]
81/162 DONE. [mean time: 0.05086441040039062 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.23337817192077637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.23038125038146973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.2343766689300537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.23038148880004883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.2334136962890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.22942090034484863 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.23437762260437012 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.23137974739074707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.25032544136047363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.22938776016235352 s]
82/162 DONE. [mean time: 0.23387856483459474 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.979384183883667 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9883644580841064 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9684193134307861 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9644219875335693 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9644207954406738 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9744663238525391 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9813423156738281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9644219875335693 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.964425802230835 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.9684109687805176 s]
83/162 DONE. [mean time: 0.9719075441360474 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.070209503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.043232202529907 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.055157899856567 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.040196180343628 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 3.9963161945343018 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.012312173843384 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.070158004760742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 4.037172317504883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 3.994325637817383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 3.989339828491211 s]
84/162 DONE. [mean time: 4.030841994285583 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009875297546386719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.000997304916381836 s]
85/162 DONE. [mean time: 0.0013962507247924805 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.016954660415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.015957355499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.015946626663208008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.015957355499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.016954660415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.016954898834228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.01699042320251465 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.017952442169189453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.01791691780090332 s]
86/162 DONE. [mean time: 0.016855072975158692 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0967404842376709 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.10273027420043945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.09773778915405273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.09773755073547363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.09674263000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0967414379119873 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.10172796249389648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.09876632690429688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.09973335266113281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.09570956230163574 s]
87/162 DONE. [mean time: 0.09853692054748535 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.4527890682220459 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45179224014282227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45379090309143066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45179080963134766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45179271697998047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.4497978687286377 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.4458045959472656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45079493522644043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45079541206359863 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.45478272438049316 s]
88/162 DONE. [mean time: 0.45159306526184084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9578380584716797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9757189750671387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9577312469482422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9988915920257568 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.953747034072876 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.972801685333252 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9547443389892578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9477930068969727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.939819097518921 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 1.9418079853057861 s]
89/162 DONE. [mean time: 1.9601884365081788 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.164268732070923 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.172163486480713 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.15824580192566 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.202150583267212 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.140252113342285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.240060091018677 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.172157526016235 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.324730634689331 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.188242435455322 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 8.181116342544556 s]
90/162 DONE. [mean time: 8.194438576698303 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009968280792236328 s]
91/162 DONE. [mean time: 0.0009973287582397462 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.00897526741027832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.009973764419555664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.008975982666015625 s]
92/162 DONE. [mean time: 0.009175372123718262 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.05384421348571777 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.058879852294921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.05581235885620117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.052860260009765625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.05186104774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.054853200912475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.05385637283325195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.05385589599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.05485343933105469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.053855180740356445 s]
93/162 DONE. [mean time: 0.05445318222045899 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.26333165168762207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.25927209854125977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.26130175590515137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.2513265609741211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.24933481216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.24434709548950195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.24933218955993652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.24733877182006836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.2613027095794678 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.2563149929046631 s]
94/162 DONE. [mean time: 0.25441999435424806 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.103093147277832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0511507987976074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.04620361328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0452096462249756 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.049182415008545 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.052232027053833 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.1150226593017578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0831050872802734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0491993427276611 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.048201084136963 s]
95/162 DONE. [mean time: 1.0643614053726196 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.383321762084961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.397252559661865 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.433236837387085 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.3852458000183105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.375250816345215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.39521336555481 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.362207412719727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.360383033752441 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.377264499664307 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 4.444159269332886 s]
96/162 DONE. [mean time: 4.391453838348388 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0019931793212890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009949207305908203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.001992464065551758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009949207305908203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.002003192901611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009887218475341797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0019996166229248047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009920597076416016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.001008749008178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0019981861114501953 s]
97/162 DONE. [mean time: 0.0015956878662109375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.016933441162109375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.01792764663696289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.017977476119995117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.01696610450744629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.017951011657714844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.01795172691345215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.017949342727661133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.016957521438598633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.017977237701416016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.01692938804626465 s]
98/162 DONE. [mean time: 0.01755208969116211 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.10867500305175781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0967414379119873 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.09873580932617188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.09773874282836914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.10072922706604004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.10372376441955566 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.09773683547973633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.09873723983764648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0967414379119873 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.09873628616333008 s]
99/162 DONE. [mean time: 0.10012938976287841 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.45977020263671875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.46379876136779785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.4677438735961914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.460735559463501 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.4577765464782715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.4587721824645996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.45678043365478516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.4587724208831787 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.45877504348754883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.45977091789245605 s]
100/162 DONE. [mean time: 0.4602695941925049 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.9757201671600342 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 2.024623155593872 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.994671106338501 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.9906446933746338 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.9957005977630615 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.9746851921081543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 2.000688314437866 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.9976954460144043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 1.9807090759277344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6430> done in 2.0016493797302246 s]
101/162 DONE. [mean time: 1.993774914741516 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.264114618301392 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.253941059112549 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.199090957641602 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.244971752166748 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.258935928344727 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.30892539024353 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.25394892692566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.358696460723877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.265965461730957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 8.255043745040894 s]
102/162 DONE. [mean time: 8.266463208198548 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029866695404052734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029611587524414062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.003030538558959961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029900074005126953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0020058155059814453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.002991199493408203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0029916763305664062 s]
103/162 DONE. [mean time: 0.0028922319412231444 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.039891958236694336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.04089021682739258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0408933162689209 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.038893938064575195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.04189181327819824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.03988909721374512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.04089069366455078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.04188847541809082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.044876813888549805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.040884971618652344 s]
104/162 DONE. [mean time: 0.04128842353820801 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.2702782154083252 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.2762610912322998 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.27227210998535156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.27323365211486816 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.2752659320831299 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.2812480926513672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.27825498580932617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.28025245666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.29125189781188965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3011646270751953 s]
105/162 DONE. [mean time: 0.28024744987487793 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.4862596988677979 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3674156665802002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3673508167266846 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3673458099365234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3523545265197754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3763234615325928 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.370342493057251 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3723385334014893 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.3753292560577393 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 1.390289068222046 s]
106/162 DONE. [mean time: 1.382733130455017 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.054896593093872 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.078793048858643 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.040899038314819 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.949134826660156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.840431213378906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.792478084564209 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.793558835983276 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.0049498081207275 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 5.986680269241333 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 6.029884338378906 s]
107/162 DONE. [mean time: 5.957270336151123 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.86269783973694 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.698665618896484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.782175302505493 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.710400581359863 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 24.830649614334106 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 24.937511205673218 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 24.667124032974243 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.215800523757935 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.77821135520935 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 25.96086812019348 s]
108/162 DONE. [mean time: 25.444506907463072 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0 s]
109/162 DONE. [mean time: 0.00029921531677246094 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029757022857666016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0029921531677246094 s]
110/162 DONE. [mean time: 0.003091716766357422 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021940946578979492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021941184997558594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021941423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021942615509033203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021940231323242188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.020931720733642578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021941423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.02293872833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021939754486083984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.021941184997558594 s]
111/162 DONE. [mean time: 0.022140765190124513 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11369585990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11672425270080566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11369848251342773 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.1136937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.1136941909790039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.12164020538330078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11070561408996582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11070370674133301 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11170029640197754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.11868429183959961 s]
112/162 DONE. [mean time: 0.11449406147003174 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.48969078063964844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.49171972274780273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.49663639068603516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.490689754486084 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4886934757232666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.49671053886413574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5115983486175537 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.504685640335083 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5016593933105469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.506648063659668 s]
113/162 DONE. [mean time: 0.49787321090698244 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.09041690826416 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.058499574661255 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.0615267753601074 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.0893807411193848 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.051516532897949 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.060490608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.082437515258789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.058497190475464 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.0495645999908447 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.1004233360290527 s]
114/162 DONE. [mean time: 2.0705713987350465 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0010266304016113281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009915828704833984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.001003265380859375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009706020355224609 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009937286376953125 s]
115/162 DONE. [mean time: 0.0004985809326171875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.004996776580810547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.005986928939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.005982637405395508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.00598454475402832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.004985809326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.00499415397644043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.00502467155456543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.005983591079711914 s]
116/162 DONE. [mean time: 0.005686044692993164 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04187488555908203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04190349578857422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04189658164978027 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.042876243591308594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.041887521743774414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04187774658203125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04192399978637695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04188942909240723 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0458681583404541 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.04288482666015625 s]
117/162 DONE. [mean time: 0.042781829833984375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.20844292640686035 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.2062208652496338 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.2144620418548584 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.2124323844909668 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.21741843223571777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.2104024887084961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.2124321460723877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.2064516544342041 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.20844149589538574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.21645760536193848 s]
118/162 DONE. [mean time: 0.2115154266357422 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9474310874938965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9275267124176025 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9235320091247559 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9275243282318115 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9245505332946777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9265198707580566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9300463199615479 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9434778690338135 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9520704746246338 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.9264917373657227 s]
119/162 DONE. [mean time: 0.9331171751022339 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.9183270931243896 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.8876092433929443 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.938547134399414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.9365603923797607 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.9573850631713867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.936464548110962 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 4.01134467124939 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.9454517364501953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.944456100463867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.962415933609009 s]
120/162 DONE. [mean time: 3.94395534992218 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0010030269622802734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009915828704833984 s]
121/162 DONE. [mean time: 0.0007978677749633789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.009973287582397461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.009973287582397461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.010972023010253906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.011005163192749023 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.010970830917358398 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.01097559928894043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.010965824127197266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.011933088302612305 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.010970830917358398 s]
122/162 DONE. [mean time: 0.010871052742004395 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0777900218963623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08277773857116699 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08477330207824707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.07978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0807805061340332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08078408241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08281493186950684 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08274674415588379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08380722999572754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.08277225494384766 s]
123/162 DONE. [mean time: 0.08198344707489014 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.41991090774536133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.4109044075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.40587902069091797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.40592002868652344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.40990424156188965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.4029231071472168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3999295234680176 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.41193556785583496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.4088706970214844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.40491771697998047 s]
124/162 DONE. [mean time: 0.408209228515625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.7942054271697998 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.808166742324829 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.8361287117004395 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.7931723594665527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.835094690322876 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.8271539211273193 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.8269431591033936 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.831144094467163 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.8131961822509766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 1.821136713027954 s]
125/162 DONE. [mean time: 1.8189334630966187 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.748590469360352 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.802186965942383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.898008346557617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.838123321533203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.856572151184082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.845104217529297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.840050935745239 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.762364625930786 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.745297431945801 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 7.791260480880737 s]
126/162 DONE. [mean time: 7.812954616546631 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009987354278564453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009961128234863281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0 s]
127/162 DONE. [mean time: 0.0004986763000488281 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.008976459503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.005974531173706055 s]
128/162 DONE. [mean time: 0.006781959533691406 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04487919807434082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.044879913330078125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.044881343841552734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04288530349731445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04591250419616699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04687213897705078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04587960243225098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.046877384185791016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04587697982788086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.04487490653991699 s]
129/162 DONE. [mean time: 0.045381927490234376 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.23145771026611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22236967086791992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22539925575256348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.21941184997558594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22838950157165527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22140884399414062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22739720344543457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22742605209350586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.22835516929626465 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2284245491027832 s]
130/162 DONE. [mean time: 0.2261040449142456 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.98533034324646 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 1.015291452407837 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 1.0163171291351318 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 1.016322135925293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.995305061340332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.9843671321868896 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.9774229526519775 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.9833753108978271 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.9803838729858398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.9863631725311279 s]
131/162 DONE. [mean time: 0.9941476345062256 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.155892610549927 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.155121564865112 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.171816825866699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.154929161071777 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.155937194824219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.136902809143066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.140016555786133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.143962144851685 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.1459596157073975 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 4.145876169204712 s]
132/162 DONE. [mean time: 4.150742030143737 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0010101795196533203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.00098419189453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.000997304916381836 s]
133/162 DONE. [mean time: 0.0007977962493896484 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.011967658996582031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.010970354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.01095724105834961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.010970354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.0109710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.010970592498779297 s]
134/162 DONE. [mean time: 0.011170101165771485 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.09075450897216797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08078408241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08178091049194336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08178114891052246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08377766609191895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08178019523620605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08776688575744629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.08177995681762695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.09877228736877441 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.0887594223022461 s]
135/162 DONE. [mean time: 0.08587348461151123 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4338798522949219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4328432083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4368319511413574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4338357448577881 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4298534393310547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4338529109954834 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.43686914443969727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4268226623535156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.4218723773956299 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.43192028999328613 s]
136/162 DONE. [mean time: 0.43215646743774416 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.9159166812896729 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.907865285873413 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.9458374977111816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.9139158725738525 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.8988916873931885 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.9053564071655273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.8849616050720215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.8769912719726562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.8830029964447021 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 1.922861099243164 s]
137/162 DONE. [mean time: 1.905560040473938 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.006681203842163 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.17327356338501 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.077430009841919 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.06644320487976 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.021636486053467 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.019568920135498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 7.939852714538574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 7.981635808944702 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 8.01161789894104 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 7.97089409828186 s]
138/162 DONE. [mean time: 8.027003765106201 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009922981262207031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019969940185546875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009953975677490234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019965171813964844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009961128234863281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009860992431640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0020058155059814453 s]
139/162 DONE. [mean time: 0.001495528221130371 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.023934602737426758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.024933815002441406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.02689385414123535 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.025966882705688477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.024930238723754883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.025928974151611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.02393507957458496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.024936437606811523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.02393651008605957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.02692699432373047 s]
140/162 DONE. [mean time: 0.025434374809265137 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.19145441055297852 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.1934828758239746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.1924746036529541 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.1904909610748291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.20548605918884277 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.1954796314239502 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.20243239402770996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.19743633270263672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.1904909610748291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.19447994232177734 s]
141/162 DONE. [mean time: 0.19557383060455322 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.0392231941223145 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.0402541160583496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.0362060070037842 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.0372257232666016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.1070444583892822 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.1110413074493408 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.0481882095336914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.051225185394287 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.068108320236206 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 1.116093635559082 s]
142/162 DONE. [mean time: 1.065659475326538 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 4.956721782684326 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 4.98267936706543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 4.990777969360352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 5.010078191757202 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 5.112451553344727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 4.852034091949463 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 5.041292428970337 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 5.076509475708008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 5.146205425262451 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 5.016594886779785 s]
143/162 DONE. [mean time: 5.018534517288208 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.781024932861328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.65352463722229 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 20.987021684646606 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 20.927157878875732 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.182471990585327 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 20.99173092842102 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.5814049243927 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.669534921646118 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.529656887054443 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 21.544161558151245 s]
144/162 DONE. [mean time: 21.384968400001526 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997304916381836 s]
145/162 DONE. [mean time: 0.0010970354080200196 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011967658996582031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.01296544075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.01296544075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.01296544075012207 s]
146/162 DONE. [mean time: 0.012765836715698243 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09275341033935547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09079217910766602 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09474658966064453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09075760841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09474897384643555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09673905372619629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09075689315795898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09275197982788086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09175515174865723 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.09171891212463379 s]
147/162 DONE. [mean time: 0.0927520751953125 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.4598100185394287 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.44879984855651855 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.447803258895874 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.45581889152526855 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.45474815368652344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.44580841064453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.447803258895874 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.4448096752166748 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.4418189525604248 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.4598045349121094 s]
148/162 DONE. [mean time: 0.45070250034332277 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.0166866779327393 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.0056450366973877 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.017683267593384 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.0235886573791504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.0076334476470947 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.9886860847473145 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.001685380935669 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.0257179737091064 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 2.006601333618164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 1.9797487258911133 s]
149/162 DONE. [mean time: 2.0075636863708497 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.584131240844727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.554255247116089 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.494295358657837 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.512288570404053 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.580126285552979 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.55823802947998 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.525291204452515 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.517268896102905 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.541816234588623 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 8.516283750534058 s]
150/162 DONE. [mean time: 8.538599133491516 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009958744049072266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.001994609832763672 s]
151/162 DONE. [mean time: 0.0015955448150634765 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0249326229095459 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.02593064308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.024933815002441406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.025964736938476562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.02991008758544922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.02692699432373047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.026937246322631836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.024935245513916016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.02593064308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.02593398094177246 s]
152/162 DONE. [mean time: 0.026233601570129394 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.21342849731445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.22140836715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.2154242992401123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.22140812873840332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.21541309356689453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.21542572975158691 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.22240519523620605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.21642184257507324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.22344160079956055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.21246886253356934 s]
153/162 DONE. [mean time: 0.21802077293395997 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.216789960861206 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.1938118934631348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.2157115936279297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.1938464641571045 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.1937675476074219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.2048139572143555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.2017543315887451 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.2039785385131836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.2247648239135742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 1.202859878540039 s]
154/162 DONE. [mean time: 1.2054094076156616 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.7128448486328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.501300096511841 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.505326271057129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.463398456573486 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.6090123653411865 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.448477745056152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.50529146194458 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.469933986663818 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.549214124679565 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 5.457420349121094 s]
155/162 DONE. [mean time: 5.522321724891663 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 23.810431003570557 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 23.683722496032715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.14367651939392 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.250331163406372 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 25.253495454788208 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.467308282852173 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.563093423843384 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.6916663646698 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.72811007499695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 24.620423316955566 s]
156/162 DONE. [mean time: 24.421325635910033 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0019829273223876953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002006053924560547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002991199493408203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002994537353515625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002986907958984375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0029985904693603516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002988576889038086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0029959678649902344 s]
157/162 DONE. [mean time: 0.0028926849365234373 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.058837890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.060842037200927734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.060834646224975586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.05884528160095215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.06681680679321289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.0637960433959961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.06286740303039551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.05980563163757324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.061868906021118164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.061833858489990234 s]
158/162 DONE. [mean time: 0.06173460483551026 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5774519443511963 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5395963191986084 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5475032329559326 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5525269508361816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5445787906646729 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5316207408905029 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5345442295074463 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5525295734405518 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5366384983062744 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.5265917778015137 s]
159/162 DONE. [mean time: 0.5445566415786743 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7336955070495605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7486507892608643 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7407290935516357 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.769594669342041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7148585319519043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.768566608428955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7556724548339844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7406766414642334 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.733729124069214 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 2.7626566886901855 s]
160/162 DONE. [mean time: 2.7470787286758425 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.631234645843506 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.587409257888794 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.621378898620605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.629226922988892 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.59142541885376 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.525609016418457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.523198366165161 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.548517227172852 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.582491636276245 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C40> done in 12.574400663375854 s]
161/162 DONE. [mean time: 12.58158881664276 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 53.102290868759155 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 52.89867281913757 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 52.561543464660645 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 53.00861668586731 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 52.87122654914856 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 53.128540992736816 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 52.93522882461548 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 51.688374280929565 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 51.70204567909241 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 51.71312856674194 s]
162/162 DONE. [mean time: 52.56106662750244 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION numba_jit_direct DONE. [time: 2750.6361083984375 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION numba_jit_gemm...
1/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.019898653030395508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0 s]
1/162 DONE. [mean time: 0.0021892786026000977 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0009989738464355469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0009946823120117188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.0009975433349609375 s]
2/162 DONE. [mean time: 0.0006980657577514649 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.002985239028930664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.001994609832763672 s]
3/162 DONE. [mean time: 0.003091740608215332 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.010971307754516602 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.009974002838134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.009973764419555664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.010980367660522461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.012955427169799805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.00997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.009974002838134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.0109710693359375 s]
4/162 DONE. [mean time: 0.010771369934082032 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.04188847541809082 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.044881343841552734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.045877933502197266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.042882442474365234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.043883562088012695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.053856611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.049866676330566406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.04986882209777832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.05385398864746094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.04488015174865723 s]
5/162 DONE. [mean time: 0.04777224063873291 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.24135541915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.2014613151550293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.21642446517944336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.21542119979858398 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.21143651008605957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.21043729782104492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.2184150218963623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.21043705940246582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.20844578742980957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.19448041915893555 s]
6/162 DONE. [mean time: 0.212831449508667 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0009951591491699219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
7/162 DONE. [mean time: 0.00029888153076171873 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0010001659393310547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0019915103912353516 s]
8/162 DONE. [mean time: 0.0010970592498779296 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.005983591079711914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.004988193511962891 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.003991842269897461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.00399017333984375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.005983114242553711 s]
9/162 DONE. [mean time: 0.004986763000488281 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.017954111099243164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.022936105728149414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.017956256866455078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.021927833557128906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.017955780029296875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.017952442169189453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.017952919006347656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.019944190979003906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.01894855499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.01795029640197754 s]
10/162 DONE. [mean time: 0.01934826374053955 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.07781696319580078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.07976341247558594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.07679319381713867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.07779288291931152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.08477258682250977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0827784538269043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.12067770957946777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0797874927520752 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.08178067207336426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.09491348266601562 s]
11/162 DONE. [mean time: 0.08568768501281739 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.41588830947875977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4228701591491699 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4238924980163574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4517662525177002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.3999314308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.43184566497802734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4537997245788574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4029123783111572 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.42186808586120605 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.423875093460083 s]
12/162 DONE. [mean time: 0.42496562004089355 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009987354278564453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997781753540039 s]
13/162 DONE. [mean time: 0.00039904117584228517 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.001992464065551758 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0019953250885009766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.001993894577026367 s]
14/162 DONE. [mean time: 0.00199434757232666 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.009002447128295898 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.010969877243041992 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.010945796966552734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.008978605270385742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.007976531982421875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.00897669792175293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.008976459503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.008974075317382812 s]
15/162 DONE. [mean time: 0.009175491333007813 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0359044075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.041913509368896484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.04186296463012695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.040889739990234375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.03889751434326172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.042883872985839844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.04188990592956543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.035904645919799805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.0359044075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.034906864166259766 s]
16/162 DONE. [mean time: 0.03929522037506104 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.16156816482543945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.15059900283813477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.14261984825134277 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.14361357688903809 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.16455936431884766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.15558433532714844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.1515944004058838 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.1625661849975586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.15758013725280762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.15658044815063477 s]
17/162 DONE. [mean time: 0.15498566627502441 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.794903039932251 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.8078405857086182 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.7938809394836426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.8238232135772705 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.7868988513946533 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.7769308090209961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.862715482711792 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.8078165054321289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.7998764514923096 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.7679455280303955 s]
18/162 DONE. [mean time: 0.8024621725082397 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0010001659393310547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0 s]
19/162 DONE. [mean time: 0.00019969940185546876 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0009996891021728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0009942054748535156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.0009996891021728516 s]
20/162 DONE. [mean time: 0.0006981372833251953 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0019958019256591797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.002990245819091797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.002992391586303711 s]
21/162 DONE. [mean time: 0.0028922557830810547 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011966705322265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.01197052001953125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011966466903686523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.01196742057800293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.013964653015136719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011967182159423828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.01097249984741211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.01296544075012207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.015954256057739258 s]
22/162 DONE. [mean time: 0.01276566982269287 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.05285978317260742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.056849002838134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0578465461730957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.05684709548950195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.04687333106994629 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.05884289741516113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.05485272407531738 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0578465461730957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.04587721824645996 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.06283068656921387 s]
23/162 DONE. [mean time: 0.05515258312225342 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.24634194374084473 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.26130151748657227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.2373669147491455 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.22440099716186523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.2742640972137451 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.25232577323913574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.22140860557556152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.2672867774963379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.22240424156188965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.2752659320831299 s]
24/162 DONE. [mean time: 0.24833641052246094 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
25/162 DONE. [mean time: 0.00030114650726318357 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.00197601318359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.000997304916381836 s]
26/162 DONE. [mean time: 0.0010951995849609376 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.004988670349121094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.003988742828369141 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.006979942321777344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.007007598876953125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.0059833526611328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.0059604644775390625 s]
27/162 DONE. [mean time: 0.005785417556762695 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.018951892852783203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.02094125747680664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.01994466781616211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.021961450576782227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.023941993713378906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.01992321014404297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.019944190979003906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.021941661834716797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.02094435691833496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.02094721794128418 s]
28/162 DONE. [mean time: 0.02094419002532959 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08876323699951172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08576846122741699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08377742767333984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08876156806945801 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08976030349731445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08876395225524902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08776521682739258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.08178353309631348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.09175372123718262 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.09275031089782715 s]
29/162 DONE. [mean time: 0.0883636474609375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.4867243766784668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.4757051467895508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.4697442054748535 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.47871828079223633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.47273826599121094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.476729154586792 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.4648709297180176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.4826934337615967 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.4887239933013916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.500659704208374 s]
30/162 DONE. [mean time: 0.48003134727478025 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009963512420654297 s]
31/162 DONE. [mean time: 0.0004986047744750977 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.001995563507080078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.001995086669921875 s]
32/162 DONE. [mean time: 0.0020944356918334963 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.008977413177490234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.007979154586791992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.008975505828857422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.010969400405883789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.00997471809387207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.008976459503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.008976459503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.009972095489501953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.008975744247436523 s]
33/162 DONE. [mean time: 0.00937497615814209 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.03789997100830078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.03989291191101074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.04488229751586914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.040888309478759766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.041887521743774414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.043883562088012695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.04089045524597168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.03889608383178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.04188728332519531 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.03789973258972168 s]
34/162 DONE. [mean time: 0.040990567207336424 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.14860224723815918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.16556048393249512 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.16164565086364746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.16348528861999512 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.1655571460723877 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.16954588890075684 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15857839584350586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.1575772762298584 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.16755151748657227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15858078002929688 s]
35/162 DONE. [mean time: 0.16166846752166747 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8636922836303711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8856596946716309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8801593780517578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8507251739501953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.887709379196167 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8852176666259766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8856613636016846 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.872666597366333 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8726952075958252 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.8716700077056885 s]
36/162 DONE. [mean time: 0.875785231590271 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.000997781753540039 s]
37/162 DONE. [mean time: 0.00029926300048828126 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0009925365447998047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.0009970664978027344 s]
38/162 DONE. [mean time: 0.0007978200912475586 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0049860477447509766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0039899349212646484 s]
39/162 DONE. [mean time: 0.003989553451538086 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.014958381652832031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.013962984085083008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.01495981216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.015957355499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.01795220375061035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.015958070755004883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.012964248657226562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.012964963912963867 s]
40/162 DONE. [mean time: 0.014760494232177734 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06382942199707031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.059839487075805664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0658259391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06881523132324219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05983996391296387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06383132934570312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06781721115112305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05784893035888672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06781482696533203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06881594657897949 s]
41/162 DONE. [mean time: 0.06452744007110596 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.31615495681762695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.30419468879699707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.2991974353790283 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.2992289066314697 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.32413458824157715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.29421377182006836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.31815052032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.29919886589050293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.2952103614807129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.3041872978210449 s]
42/162 DONE. [mean time: 0.30558664798736573 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0 s]
43/162 DONE. [mean time: 0.0003989696502685547 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009982585906982422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.0009980201721191406 s]
44/162 DONE. [mean time: 0.0011967658996582032 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0059854984283447266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.005982875823974609 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.005984783172607422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.00598454475402832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.007018089294433594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.006941795349121094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.005983591079711914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.004990100860595703 s]
45/162 DONE. [mean time: 0.005984187126159668 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.024933576583862305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.028920650482177734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.02393651008605957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.022936582565307617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.0219419002532959 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.025933265686035156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.020943164825439453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.024930715560913086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.021941423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.02393507957458496 s]
46/162 DONE. [mean time: 0.024235010147094727 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10671496391296387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.14162206649780273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10372185707092285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.1037290096282959 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10172891616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10970425605773926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.09674239158630371 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10471916198730469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10073232650756836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.10172677040100098 s]
47/162 DONE. [mean time: 0.10711417198181153 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5664856433868408 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5475404262542725 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5784542560577393 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5345981121063232 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5275881290435791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5674846172332764 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5614979267120361 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5415520668029785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.550560712814331 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.5684802532196045 s]
48/162 DONE. [mean time: 0.5544242143630982 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.0 s]
49/162 DONE. [mean time: 0.0005983352661132812 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0029909610748291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0019953250885009766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0030007362365722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0029838085174560547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.0029921531677246094 s]
50/162 DONE. [mean time: 0.002792549133300781 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.009974241256713867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.011968374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.0109710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.011967658996582031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.00896596908569336 s]
51/162 DONE. [mean time: 0.011369705200195312 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.04388308525085449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.04388308525085449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.045877695083618164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.042883872985839844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.04587817192077637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.04587674140930176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.046874284744262695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.04787397384643555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.04886770248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.0498659610748291 s]
52/162 DONE. [mean time: 0.04637598991394043 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.17553472518920898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1765146255493164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.18051528930664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.17752528190612793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.17453408241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.17852210998535156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.18350934982299805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.17154455184936523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.17453432083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.191483736038208 s]
53/162 DONE. [mean time: 0.17862253189086913 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9973657131195068 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 1.004288911819458 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9973759651184082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9903600215911865 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.980388879776001 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9963395595550537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9813926219940186 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9763932228088379 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9803745746612549 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9704086780548096 s]
54/162 DONE. [mean time: 0.9876685380935669 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.0 s]
55/162 DONE. [mean time: 0.00019936561584472657 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.0009984970092773438 s]
56/162 DONE. [mean time: 0.0010972023010253906 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.005983591079711914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.007977485656738281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.007977962493896484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.007978200912475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.007979154586791992 s]
57/162 DONE. [mean time: 0.007380080223083496 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.025931119918823242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.02593064308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.03091740608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.02792525291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.023935556411743164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.029920578002929688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.026928186416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.0249330997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.028928756713867188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.023936986923217773 s]
58/162 DONE. [mean time: 0.02692875862121582 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.11968111991882324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.11668729782104492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.11070418357849121 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.13563752174377441 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.1077125072479248 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.11369585990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.11369585990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.1077117919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.09873604774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6400> done in 0.10970664024353027 s]
59/162 DONE. [mean time: 0.11349666118621826 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5814740657806396 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.556513786315918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5495362281799316 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5664854049682617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5505287647247314 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5804505348205566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5635216236114502 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5774862766265869 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5854349136352539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.5465559959411621 s]
60/162 DONE. [mean time: 0.5659977674484253 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009992122650146484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009961128234863281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.0009963512420654297 s]
61/162 DONE. [mean time: 0.0005983829498291016 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0029964447021484375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0019903182983398438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0029897689819335938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.0029926300048828125 s]
62/162 DONE. [mean time: 0.0028921127319335937 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011968612670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014959573745727539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.01495981216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.014960765838623047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.012968063354492188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.01196742057800293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.011968374252319336 s]
63/162 DONE. [mean time: 0.013663744926452637 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05485224723815918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05186152458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.048870086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.051860809326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05285906791687012 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.06283187866210938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05286002159118652 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.05884075164794922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.04787278175354004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.047872066497802734 s]
64/162 DONE. [mean time: 0.05305812358856201 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.20545005798339844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.20644879341125488 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.20844244956970215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2027297019958496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2044517993927002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.19148683547973633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.20345616340637207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2742931842803955 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.19345593452453613 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.21043777465820312 s]
65/162 DONE. [mean time: 0.21006526947021484 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1020846366882324 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1080186367034912 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0980689525604248 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0960986614227295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0472064018249512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0521903038024902 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0860965251922607 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.1090879440307617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0861258506774902 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 1.0741355419158936 s]
66/162 DONE. [mean time: 1.0861106395721436 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0020041465759277344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009851455688476562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.0009968280792236328 s]
67/162 DONE. [mean time: 0.001196575164794922 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004987239837646484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.0049860477447509766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004987239837646484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005983591079711914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.004988193511962891 s]
68/162 DONE. [mean time: 0.005385780334472656 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.024919986724853516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.030917644500732422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.030916452407836914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.03590226173400879 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.03191494941711426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.03191423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.026929378509521484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.026926755905151367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.03091740608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.028925418853759766 s]
69/162 DONE. [mean time: 0.03001844882965088 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.13065052032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.14261865615844727 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.13463902473449707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.13563871383666992 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.1216738224029541 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.13164830207824707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.1296529769897461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.13364267349243164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.12367010116577148 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.12267160415649414 s]
70/162 DONE. [mean time: 0.13065063953399658 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5555169582366943 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4877002239227295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5136275291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5066452026367188 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4996645450592041 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5056483745574951 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5196120738983154 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5794548988342285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5086662769317627 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5076467990875244 s]
71/162 DONE. [mean time: 0.5186176776885987 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.200122594833374 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.2450289726257324 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.259958267211914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.3058393001556396 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.276914119720459 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.2948787212371826 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.256964921951294 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.274948835372925 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.2350285053253174 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 2.3068900108337402 s]
72/162 DONE. [mean time: 2.265956401824951 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.0 s]
73/162 DONE. [mean time: 0.000498652458190918 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0019936561584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.001995563507080078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0009856224060058594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.0009980201721191406 s]
74/162 DONE. [mean time: 0.0013962745666503905 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.006009578704833984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.005960702896118164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.0059833526611328125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.005980730056762695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.005984306335449219 s]
75/162 DONE. [mean time: 0.006382942199707031 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.026928186416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.029922008514404297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.02991795539855957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.02991962432861328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.02992105484008789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.03490591049194336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.029921293258666992 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.025928974151611328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.02892327308654785 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.02593064308166504 s]
76/162 DONE. [mean time: 0.02932159900665283 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.11668801307678223 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.10571789741516113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.11668658256530762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.10172867774963379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.12267208099365234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.12765908241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.11671328544616699 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.10768675804138184 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.16256475448608398 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.151594877243042 s]
77/162 DONE. [mean time: 0.12307093143463135 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6422853469848633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6043832302093506 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6602370738983154 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6153526306152344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6851692199707031 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6462714672088623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6502640247344971 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6343016624450684 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6622834205627441 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.6243057250976562 s]
78/162 DONE. [mean time: 0.6424853801727295 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.0009970664978027344 s]
79/162 DONE. [mean time: 0.0006980657577514649 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0019936561584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0019922256469726562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.0019943714141845703 s]
80/162 DONE. [mean time: 0.002692556381225586 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.011968612670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.011968612670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.012964248657226562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.011970996856689453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.011965513229370117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.012964725494384766 s]
81/162 DONE. [mean time: 0.012566423416137696 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.054852962493896484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.059839725494384766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.059839725494384766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.05585169792175293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0578460693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.05285763740539551 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.05585169792175293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.05186057090759277 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.04986739158630371 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.05485272407531738 s]
82/162 DONE. [mean time: 0.05545179843902588 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.21442842483520508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.20943903923034668 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.21442675590515137 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2044532299041748 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.3101835250854492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.20744681358337402 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.21442556381225586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.21941351890563965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.20046377182006836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2154240608215332 s]
83/162 DONE. [mean time: 0.22120974063873292 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1658852100372314 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.161897897720337 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1898486614227295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1688783168792725 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.2157776355743408 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.186835765838623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1618931293487549 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1579089164733887 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1638884544372559 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.1758613586425781 s]
84/162 DONE. [mean time: 1.174867534637451 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009908676147460938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019953250885009766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0009975433349609375 s]
85/162 DONE. [mean time: 0.0013962507247924805 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0069828033447265625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.006979942321777344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.00598454475402832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0059850215911865234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.0069866180419921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63A0> done in 0.006978273391723633 s]
86/162 DONE. [mean time: 0.006483054161071778 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.035904884338378906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.027924060821533203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.035904645919799805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.029920339584350586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.03789854049682617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.03490757942199707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.03690004348754883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.026928186416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.03490734100341797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.03390932083129883 s]
87/162 DONE. [mean time: 0.03370990753173828 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.13164806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.12865543365478516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.12865686416625977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.14561057090759277 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.1296532154083252 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.13065266609191895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.12566256523132324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.12366986274719238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.1326444149017334 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.118682861328125 s]
88/162 DONE. [mean time: 0.1295536518096924 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5266232490539551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.519585132598877 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5425505638122559 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.550527811050415 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5216054916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5166463851928711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5236001014709473 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5046513080596924 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5525238513946533 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.5245985984802246 s]
89/162 DONE. [mean time: 0.5282912492752075 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.3238141536712646 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.333759069442749 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.4195621013641357 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.3028433322906494 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.364734649658203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.3227899074554443 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.2903354167938232 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.3327596187591553 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.32578444480896 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 2.3497188091278076 s]
90/162 DONE. [mean time: 2.336810898780823 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.0 s]
91/162 DONE. [mean time: 0.0003989458084106445 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.001993894577026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.001994609832763672 s]
92/162 DONE. [mean time: 0.0017951726913452148 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.007979631423950195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.007977962493896484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.00797891616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.008976459503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.006979703903198242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.0069806575775146484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.0069768428802490234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.006982326507568359 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.008975028991699219 s]
93/162 DONE. [mean time: 0.007978582382202148 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.030920028686523438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.032909393310546875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.03291201591491699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.035904884338378906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.030917644500732422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.034905433654785156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.033911705017089844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.030914306640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.03889894485473633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.030914783477783203 s]
94/162 DONE. [mean time: 0.03341064453125 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.1436166763305664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14760541915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.17453360557556152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12865591049194336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12267470359802246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.1386268138885498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.13164734840393066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.13564181327819824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.1326460838317871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.13164877891540527 s]
95/162 DONE. [mean time: 0.13882944583892823 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7280559539794922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.698122501373291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7131030559539795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7619626522064209 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7509925365447998 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7340400218963623 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7071108818054199 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7180805206298828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.7061161994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.743013858795166 s]
96/162 DONE. [mean time: 0.726260495185852 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0010101795196533203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009870529174804688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0009965896606445312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0 s]
97/162 DONE. [mean time: 0.000797891616821289 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.003988742828369141 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.001994609832763672 s]
98/162 DONE. [mean time: 0.0034905672073364258 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.013963460922241211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.013962268829345703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.013964176177978516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.0139617919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.01695394515991211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.01795220375061035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.012965917587280273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.015956640243530273 s]
99/162 DONE. [mean time: 0.015159511566162109 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0578455924987793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0608367919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.05585050582885742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0688164234161377 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.061835527420043945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.061834096908569336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06283259391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.059839487075805664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.059839487075805664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.061835289001464844 s]
100/162 DONE. [mean time: 0.061336088180541995 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.22440123558044434 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.23238086700439453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.23237967491149902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.22240495681762695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.2174205780029297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.23337531089782715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.23038148880004883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.2543199062347412 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.22365093231201172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68E0> done in 0.22539830207824707 s]
101/162 DONE. [mean time: 0.2298107147216797 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.330444097518921 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.344433069229126 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3693792819976807 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3214735984802246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3623979091644287 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3200228214263916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3424108028411865 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3294851779937744 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.3015246391296387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 1.347426176071167 s]
102/162 DONE. [mean time: 1.3369995832443238 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0009982585906982422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.00098419189453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.000997781753540039 s]
103/162 DONE. [mean time: 0.0017952203750610351 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005983829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0059833526611328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.007979631423950195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0069806575775146484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006982326507568359 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.007978200912475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.007977485656738281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006982564926147461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006981611251831055 s]
104/162 DONE. [mean time: 0.007081127166748047 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.03390932083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.03789877891540527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.03490734100341797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.0329134464263916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.03989243507385254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.028920888900756836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.031916141510009766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.04089236259460449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.03291058540344238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.03789830207824707 s]
105/162 DONE. [mean time: 0.035505151748657225 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.14561033248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.14659786224365234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.1356363296508789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.1406235694885254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.14361834526062012 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.1515977382659912 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15358877182006836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.13065075874328613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.1346447467803955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.1296532154083252 s]
106/162 DONE. [mean time: 0.14142284393310547 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5624978542327881 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5485334396362305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.56648850440979 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5295846462249756 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5465443134307861 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5764555931091309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5335745811462402 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.526599645614624 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5605049133300781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.5405550003051758 s]
107/162 DONE. [mean time: 0.5493331909179687 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.348782539367676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.3955938816070557 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.3726577758789062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.4195375442504883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.4185357093811035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.4644129276275635 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.400585412979126 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.427520513534546 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.432497978210449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 2.4245216846466064 s]
108/162 DONE. [mean time: 2.410863256454468 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009987354278564453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009963512420654297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.0 s]
109/162 DONE. [mean time: 0.0004987478256225586 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0029909610748291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.001995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.002999544143676758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0019876956939697266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.0029892921447753906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.002991914749145508 s]
110/162 DONE. [mean time: 0.0027925252914428713 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.013962984085083008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.010971784591674805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.010970830917358398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.01098012924194336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.011965036392211914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.011968135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.010971784591674805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.011966466903686523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.011968374252319336 s]
111/162 DONE. [mean time: 0.011968040466308593 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.04886817932128906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.049867868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.06283164024353027 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.04886937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.05186104774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.050864458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.05485391616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.04886817932128906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.04587721824645996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.04587888717651367 s]
112/162 DONE. [mean time: 0.05116326808929443 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.2014622688293457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.19747066497802734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.20545125007629395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.20744705200195312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.20345759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.20644497871398926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.20344781875610352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.18949365615844727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.19547724723815918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.19647693634033203 s]
113/162 DONE. [mean time: 0.20096299648284913 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.062161922454834 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.04819655418396 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0900886058807373 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0950703620910645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0541942119598389 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0651531219482422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0611937046051025 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.054208755493164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0930750370025635 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.0631616115570068 s]
114/162 DONE. [mean time: 1.0688496828079224 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.002102375030517578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0008878707885742188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0019953250885009766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.0009968280792236328 s]
115/162 DONE. [mean time: 0.0014957189559936523 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.006983757019042969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.004985809326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.004987478256225586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.004984855651855469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.005982637405395508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.005980253219604492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.005985736846923828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.00498652458190918 s]
116/162 DONE. [mean time: 0.005684900283813477 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.024934053421020508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.02692699432373047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.025931119918823242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.02792525291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.0299222469329834 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.029918670654296875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.026927947998046875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.030916690826416016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.03790092468261719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.03490638732910156 s]
117/162 DONE. [mean time: 0.029920077323913573 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.12566328048706055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.13364315032958984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.11369585990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.12765908241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.13164830207824707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.12765955924987793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.1356370449066162 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.1186830997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.12765836715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.10970711708068848 s]
118/162 DONE. [mean time: 0.1254646062850952 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.4637598991394043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.4657554626464844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.46075963973999023 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.47373270988464355 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.46276307106018066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.4478297233581543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.45079469680786133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.4886956214904785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.45578503608703613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F63D0> done in 0.4298520088195801 s]
119/162 DONE. [mean time: 0.460273003578186 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.131291389465332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1413321495056152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1722562313079834 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1422805786132812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1063997745513916 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1292834281921387 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1113600730895996 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1592273712158203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1293396949768066 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 2.1233229637145996 s]
120/162 DONE. [mean time: 2.1348084688186644 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019960403442382812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0029892921447753906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.00299072265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.0029926300048828125 s]
121/162 DONE. [mean time: 0.0027923107147216795 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.011969566345214844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.01396632194519043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.013960838317871094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.012978553771972656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.011954307556152344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.011967182159423828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.012964963912963867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.012964725494384766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.012967109680175781 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.01196742057800293 s]
122/162 DONE. [mean time: 0.013065242767333984 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.0937497615814209 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.08478069305419922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.07779169082641602 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.08676743507385254 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.08277726173400879 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.09474635124206543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.08178114891052246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.08377838134765625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.07978487014770508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.07978701591491699 s]
123/162 DONE. [mean time: 0.08467423915863037 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.31815600395202637 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.31415843963623047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.32811999320983887 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.315157413482666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.33211255073547363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.32712507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.33011817932128906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.32114124298095703 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3142075538635254 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3400909900665283 s]
124/162 DONE. [mean time: 0.3244379997253418 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.2656238079071045 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.3314471244812012 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.3394207954406738 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.360367774963379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.3753249645233154 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.3094992637634277 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.3513970375061035 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.370363712310791 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.3155138492584229 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.363065481185913 s]
125/162 DONE. [mean time: 1.338401770591736 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.137830495834351 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.12080454826355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.1661906242370605 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.217088937759399 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.207638740539551 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.207139015197754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.177205801010132 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.327822208404541 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.191129446029663 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 5.181157112121582 s]
126/162 DONE. [mean time: 5.193699526786804 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.0 s]
127/162 DONE. [mean time: 0.0005983591079711914 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0019948482513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.002987384796142578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.003989219665527344 s]
128/162 DONE. [mean time: 0.003191423416137695 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.011967658996582031 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.012966394424438477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.012966156005859375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.0109710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.011968851089477539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.012965917587280273 s]
129/162 DONE. [mean time: 0.012566733360290527 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05185961723327637 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05585193634033203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.061835527420043945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05385541915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.055876970291137695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.07380270957946777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05984139442443848 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05285787582397461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05485272407531738 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.05585217475891113 s]
130/162 DONE. [mean time: 0.05794501304626465 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.21642231941223145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.21043968200683594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.207442045211792 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.20345616340637207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.1934828758239746 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.20345687866210938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.2822444438934326 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.21143770217895508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.2154231071472168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.20744705200195312 s]
131/162 DONE. [mean time: 0.21532468795776366 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.1349678039550781 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.2107901573181152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.187851905822754 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.1539149284362793 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.1519207954406738 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.1948065757751465 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.1648874282836914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.2247271537780762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.2616548538208008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 1.148927927017212 s]
132/162 DONE. [mean time: 1.1834449529647828 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0019936561584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997781753540039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.000997304916381836 s]
133/162 DONE. [mean time: 0.0011966705322265625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.00598454475402832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.0069806575775146484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.00698089599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.005984067916870117 s]
134/162 DONE. [mean time: 0.006083774566650391 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03391218185424805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03191232681274414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.02792525291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.028922557830810547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.02593231201171875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.029918432235717773 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03391003608703613 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.02992081642150879 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.032912254333496094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.03690171241760254 s]
135/162 DONE. [mean time: 0.03121678829193115 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.11967849731445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.11569023132324219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.14162158966064453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.13164806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.13763189315795898 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.14162111282348633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.11070585250854492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.13164639472961426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.12067842483520508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.1296522617340088 s]
136/162 DONE. [mean time: 0.1282569408416748 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4857010841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4657554626464844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.48470354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4507944583892822 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4627721309661865 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4587712287902832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.45880842208862305 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4747304916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.44880056381225586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.4378318786621094 s]
137/162 DONE. [mean time: 0.4629665851593018 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.2440085411071777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.1991262435913086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.17319917678833 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.2430574893951416 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.133321762084961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.168234348297119 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.1508302688598633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.132298231124878 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.189152717590332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 2.177180051803589 s]
138/162 DONE. [mean time: 2.18104088306427 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0019960403442382812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.002990245819091797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.0019960403442382812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.001995563507080078 s]
139/162 DONE. [mean time: 0.002892470359802246 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.009973764419555664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.00997471809387207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.010967731475830078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.010972976684570312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.012961387634277344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.011968612670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.010970354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.010970830917358398 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.011969327926635742 s]
140/162 DONE. [mean time: 0.01156911849975586 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.08577084541320801 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.07879018783569336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.07579755783081055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0747990608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.08976078033447266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.0827779769897461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.08676862716674805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.07878923416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.08976054191589355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.08078336715698242 s]
141/162 DONE. [mean time: 0.08247954845428467 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3341073989868164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3540530204772949 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3371005058288574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3251326084136963 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3251307010650635 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3241312503814697 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.3181488513946533 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.33211493492126465 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.32213640213012695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.32413434982299805 s]
142/162 DONE. [mean time: 0.32961900234222413 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3933050632476807 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3813059329986572 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3783159255981445 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.4022533893585205 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3573822975158691 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.385301113128662 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3923087120056152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3663716316223145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.374305248260498 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.3942875862121582 s]
143/162 DONE. [mean time: 1.382513689994812 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.358867168426514 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.227296590805054 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.304810285568237 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.282978296279907 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.311814069747925 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.313795804977417 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.147779941558838 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.2469751834869385 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.342799425125122 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 5.252965688705444 s]
144/162 DONE. [mean time: 5.279209017753601 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009970664978027344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009987354278564453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.0009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.000997304916381836 s]
145/162 DONE. [mean time: 0.0009973287582397462 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.0029935836791992188 s]
146/162 DONE. [mean time: 0.0038897514343261717 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.01795220375061035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.012965679168701172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.01495981216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.015959501266479492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.016953229904174805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.015958309173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.01695394515991211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.014944791793823242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.016954660415649414 s]
147/162 DONE. [mean time: 0.015957403182983398 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.06183481216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.058843135833740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.05884265899658203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.06183433532714844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.06881594657897949 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.06682157516479492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.057847023010253906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.054851531982421875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.06582450866699219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.06283259391784668 s]
148/162 DONE. [mean time: 0.0620342493057251 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.2403583526611328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.21343064308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.22140836715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.23038482666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.22440052032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.24533510208129883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.2234053611755371 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.337099552154541 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.20545053482055664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.2463390827178955 s]
149/162 DONE. [mean time: 0.238861608505249 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.3873193264007568 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.3464374542236328 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.2985284328460693 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.3334369659423828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.3154826164245605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.2735941410064697 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.2835948467254639 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.2965092658996582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.303516149520874 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 1.296534538269043 s]
150/162 DONE. [mean time: 1.3135951280593872 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0019943714141845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0020072460174560547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009856224060058594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0019931793212890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.001993417739868164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.0009980201721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.000997781753540039 s]
151/162 DONE. [mean time: 0.0014960289001464844 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.006979703903198242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.006980419158935547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0059833526611328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.004987478256225586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0069811344146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.006981849670410156 s]
152/162 DONE. [mean time: 0.006781649589538574 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.043883323669433594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.03091740608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.041887760162353516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.03690338134765625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.029920339584350586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.027926921844482422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.039893150329589844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.03989362716674805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.02892470359802246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.03590226173400879 s]
153/162 DONE. [mean time: 0.035904097557067874 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.12267303466796875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.11568951606750488 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.14461302757263184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1346423625946045 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1266624927520752 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.14361333847045898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.13065123558044434 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1266617774963379 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.1296529769897461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.13862872123718262 s]
154/162 DONE. [mean time: 0.1313488483428955 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.5076448917388916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.45977020263671875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.4897034168243408 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.46874141693115234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.48371124267578125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.46575355529785156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.4797203540802002 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.4697592258453369 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.4857017993927002 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.4886949062347412 s]
155/162 DONE. [mean time: 0.4799201011657715 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2639753818511963 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.293867826461792 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2469940185546875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2978553771972656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.3108229637145996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2779109477996826 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2819011211395264 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2959141731262207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.3029658794403076 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 2.2559728622436523 s]
156/162 DONE. [mean time: 2.283017563819885 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0039882659912109375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.0029904842376708984 s]
157/162 DONE. [mean time: 0.003391122817993164 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.012965917587280273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.012964487075805664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.011968851089477539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.012949943542480469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.011968374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.011968851089477539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.011967658996582031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.01299428939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.013965606689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.012934446334838867 s]
158/162 DONE. [mean time: 0.012765979766845703 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.08477067947387695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.09175682067871094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.08780384063720703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.07974839210510254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.08403372764587402 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.11070442199707031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0857696533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.08876276016235352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0967411994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.0827791690826416 s]
159/162 DONE. [mean time: 0.08938672542572021 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.3510596752166748 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.3151581287384033 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.3291194438934326 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.31815218925476074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.3261282444000244 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.3201446533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.32213664054870605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.33809733390808105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.34108734130859375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.326127290725708 s]
160/162 DONE. [mean time: 0.3289205551147461 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.4072661399841309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.4121997356414795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.40328049659729 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3982625007629395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.4032979011535645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.412203311920166 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.4022514820098877 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3813369274139404 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.4241645336151123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.4102325439453125 s]
161/162 DONE. [mean time: 1.4055490970611573 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.385634660720825 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.380645513534546 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.441482782363892 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.4035539627075195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.392592191696167 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.375712633132935 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.4913554191589355 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.381648540496826 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.455512046813965 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 5.373632192611694 s]
162/162 DONE. [mean time: 5.40817699432373 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION numba_jit_gemm DONE. [time: 566.6117389202118 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION cv2...
1/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06781888008117676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06781983375549316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06781888008117676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06682109832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06981348991394043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.071807861328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06682085990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06582331657409668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.06385397911071777 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.0677950382232666 s]
1/162 DONE. [mean time: 0.06771910190582275 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06981348991394043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06881570816040039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.07380294799804688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.0688178539276123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.07080984115600586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06981253623962402 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06781864166259766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06682133674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.06781864166259766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.07380294799804688 s]
2/162 DONE. [mean time: 0.06981339454650878 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.07183027267456055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.06781983375549316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.06879210472106934 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.07081055641174316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.0718083381652832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.07280540466308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.07779574394226074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.07080531120300293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.06582427024841309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.07180953025817871 s]
3/162 DONE. [mean time: 0.07101013660430908 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0827789306640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.08477306365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.08377718925476074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.08679008483886719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0797872543334961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.08579397201538086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07979106903076172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0807793140411377 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.08175778388977051 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.08976006507873535 s]
4/162 DONE. [mean time: 0.08367633819580078 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.12067651748657227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.12067794799804688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.11967945098876953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.1266615390777588 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.12267184257507324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.11968040466308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.12067699432373047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.12170696258544922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.11568164825439453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.12065482139587402 s]
5/162 DONE. [mean time: 0.12097654342651368 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26827049255371094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26130056381225586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26628828048706055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26130104064941406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.2652895450592041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.2593085765838623 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26628828048706055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26030397415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.26628684997558594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.2623004913330078 s]
6/162 DONE. [mean time: 0.2637935161590576 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12665987014770508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12067723274230957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.1256701946258545 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12466549873352051 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12566542625427246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.13067388534545898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.11868906021118164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12166810035705566 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12067747116088867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.12467312812805176 s]
7/162 DONE. [mean time: 0.12407169342041016 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.12466764450073242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.12463712692260742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.13065028190612793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.13364672660827637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.12267136573791504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.12565374374389648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.1186821460723877 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.12566399574279785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.13164949417114258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.12865638732910156 s]
8/162 DONE. [mean time: 0.12685849666595458 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.13364052772521973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.1306753158569336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.126662015914917 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.12865591049194336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.12968158721923828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.1366102695465088 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.13463830947875977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.1376335620880127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.13862967491149902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.1356370449066162 s]
9/162 DONE. [mean time: 0.13324642181396484 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1575772762298584 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.16057229042053223 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1655573844909668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.15858197212219238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1625654697418213 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1575772762298584 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.16057205200195312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.16155195236206055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.16954660415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.16356277465820312 s]
10/162 DONE. [mean time: 0.1619675874710083 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.2483377456665039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.24439454078674316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.24133038520812988 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.2463979721069336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.24033474922180176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.24536776542663574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.24532604217529297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.25531721115112305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.2483365535736084 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.25232529640197754 s]
11/162 DONE. [mean time: 0.24684650897979737 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5814507007598877 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5794515609741211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5714704990386963 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5844430923461914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5784769058227539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5764858722686768 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5784542560577393 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5794787406921387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5724468231201172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.5784556865692139 s]
12/162 DONE. [mean time: 0.5782607078552247 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.24734258651733398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.24933362007141113 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2513284683227539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.24135351181030273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2373957633972168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.23933076858520508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2543489933013916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2393348217010498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.24337434768676758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2373650074005127 s]
13/162 DONE. [mean time: 0.24415051937103271 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.23836708068847656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2503371238708496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.24835872650146484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.23636841773986816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.23936080932617188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.24036073684692383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2473747730255127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2373816967010498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2403578758239746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.235396146774292 s]
14/162 DONE. [mean time: 0.24166014194488525 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.25432872772216797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2542879581451416 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2682812213897705 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2513282299041748 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2623295783996582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2493281364440918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.25831079483032227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.24833464622497559 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2602853775024414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.2543203830718994 s]
15/162 DONE. [mean time: 0.2563129425048828 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.32314062118530273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3151569366455078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3082277774810791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.31016993522644043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.30918383598327637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.30914902687072754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.30820226669311523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.30820202827453613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3111696243286133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.32213854789733887 s]
16/162 DONE. [mean time: 0.3126700401306152 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5345752239227295 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5166175365447998 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5255966186523438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5305905342102051 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5315814018249512 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5186376571655273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5156524181365967 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5166201591491699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5226075649261475 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F62E0> done in 0.5285868644714355 s]
17/162 DONE. [mean time: 0.5244029760360718 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2726249694824219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2526519298553467 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2586426734924316 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2556498050689697 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.255648136138916 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2546558380126953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2626311779022217 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2526750564575195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2666172981262207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.2596604824066162 s]
18/162 DONE. [mean time: 1.2592455387115478 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.12167572975158691 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.12865662574768066 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.12170076370239258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.12364530563354492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.1326465606689453 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.13663506507873535 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.13164806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.13464021682739258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.12666010856628418 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.12765955924987793 s]
19/162 DONE. [mean time: 0.12865655422210692 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.1386265754699707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.13364267349243164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.1346442699432373 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.13763213157653809 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.13663482666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.13463997840881348 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.13663554191589355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.13862895965576172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.1326444149017334 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.12469077110290527 s]
20/162 DONE. [mean time: 0.13484201431274415 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.13764548301696777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.13760828971862793 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.1396331787109375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.1436166763305664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.16356205940246582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.13862967491149902 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.14062261581420898 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.13464140892028809 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.14261937141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.12965154647827148 s]
21/162 DONE. [mean time: 0.14082303047180175 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.16159701347351074 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.17254328727722168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.1615908145904541 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.157578706741333 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.15857744216918945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.15957307815551758 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.15658068656921387 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.1625680923461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.15857696533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.15761137008666992 s]
22/162 DONE. [mean time: 0.16077947616577148 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.23740482330322266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2263638973236084 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.24035882949829102 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2403578758239746 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.23536896705627441 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2304093837738037 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.23440909385681152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.2323756217956543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.22536683082580566 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.23535990715026855 s]
23/162 DONE. [mean time: 0.23407795429229736 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5266194343566895 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5226035118103027 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5186412334442139 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5256052017211914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5255963802337646 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.52162766456604 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5236279964447021 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5206410884857178 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5255692005157471 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5276196002960205 s]
24/162 DONE. [mean time: 0.5239123582839966 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.250324010848999 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.23936033248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2403860092163086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.23839044570922852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.24138879776000977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2353677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.24132657051086426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2413780689239502 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2414093017578125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.23636794090270996 s]
25/162 DONE. [mean time: 0.24066705703735353 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.24836134910583496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.24532055854797363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2652909755706787 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2583136558532715 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2593069076538086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.24537324905395508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.25029969215393066 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2563145160675049 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.25531744956970215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.24340200424194336 s]
26/162 DONE. [mean time: 0.25282998085021974 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.274242639541626 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.2712745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.2722954750061035 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.2600715160369873 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.26329469680786133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.26030588150024414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.26927995681762695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.2593061923980713 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.2563469409942627 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.2593088150024414 s]
27/162 DONE. [mean time: 0.2645726680755615 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3231360912322998 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.33011746406555176 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3121657371520996 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3281269073486328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3211357593536377 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.32114171981811523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3281228542327881 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.32712554931640625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.317183256149292 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3151588439941406 s]
28/162 DONE. [mean time: 0.3224417448043823 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.48473620414733887 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.49767422676086426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.48572397232055664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.49465513229370117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.48772454261779785 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4996647834777832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4867217540740967 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4867286682128906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.48268556594848633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.4957005977630615 s]
29/162 DONE. [mean time: 0.4902015447616577 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1499238014221191 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1496684551239014 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1539382934570312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1439502239227295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1509273052215576 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1579408645629883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1519198417663574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1449661254882812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.1499149799346924 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.153947114944458 s]
30/162 DONE. [mean time: 1.1507097005844116 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4966716766357422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5016634464263916 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4996645450592041 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4757270812988281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.46276283264160156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4787333011627197 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4747185707092285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.48680710792541504 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.4935767650604248 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.48670339584350586 s]
31/162 DONE. [mean time: 0.4858025789260864 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.504650354385376 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.4767496585845947 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.49066853523254395 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.4947011470794678 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.48866891860961914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5006630420684814 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.4837346076965332 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.4757511615753174 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.4926598072052002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5006635189056396 s]
32/162 DONE. [mean time: 0.4908910751342773 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5147848129272461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5026543140411377 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5255720615386963 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5325808525085449 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5206084251403809 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5285868644714355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5096619129180908 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5096750259399414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5664880275726318 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.5445723533630371 s]
33/162 DONE. [mean time: 0.5256189107894897 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6263480186462402 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6372785568237305 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6343426704406738 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6472735404968262 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6163759231567383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6402692794799805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6382937431335449 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6392951011657715 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6343042850494385 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.6323142051696777 s]
34/162 DONE. [mean time: 0.6348091840744019 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0501587390899658 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0811548233032227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0582008361816406 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0611443519592285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0587728023529053 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.061164140701294 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.053192377090454 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0432350635528564 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0651335716247559 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.0531847476959229 s]
35/162 DONE. [mean time: 1.0585341453552246 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.5242631435394287 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.5468356609344482 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.5162830352783203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.5168192386627197 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.5212931632995605 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.515298366546631 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.516284704208374 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.524259567260742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.5163304805755615 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.513258457183838 s]
36/162 DONE. [mean time: 2.5212917566299438 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.2652912139892578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.25633788108825684 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.24434614181518555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.261303186416626 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.26628804206848145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.2672896385192871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.2613246440887451 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.26526641845703125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.24736356735229492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 0.2562899589538574 s]
37/162 DONE. [mean time: 0.2593071460723877 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.2553439140319824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.25332212448120117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.2552931308746338 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.257312536239624 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.2663121223449707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.2513284683227539 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.2563135623931885 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.24933433532714844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.25731897354125977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.2512962818145752 s]
38/162 DONE. [mean time: 0.25531754493713377 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.28324270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.2702789306640625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.28024935722351074 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.26329755783081055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.28324317932128906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.2732694149017334 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.28623485565185547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.2822456359863281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.28326988220214844 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.27330613136291504 s]
39/162 DONE. [mean time: 0.27806270122528076 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3211197853088379 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3261265754699707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3331143856048584 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.33610081672668457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3370990753173828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.328122615814209 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3291158676147461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3311147689819336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.3171520233154297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.32712554931640625 s]
40/162 DONE. [mean time: 0.3288194894790649 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.4817173480987549 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.4587712287902832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.4797186851501465 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.47277235984802246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.4857020378112793 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.479717493057251 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.4818894863128662 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.48171234130859375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.48171210289001465 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.47573137283325195 s]
41/162 DONE. [mean time: 0.47814438343048093 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0504217147827148 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0561821460723877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0556061267852783 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0561809539794922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0522372722625732 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0501933097839355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0551838874816895 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0611679553985596 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0891258716583252 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 1.0602245330810547 s]
42/162 DONE. [mean time: 1.0588519334793092 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.469754695892334 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.4797182083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.4787471294403076 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.48867082595825195 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.48926210403442383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.4966769218444824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.47475504875183105 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.4747316837310791 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.4877316951751709 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.4916841983795166 s]
43/162 DONE. [mean time: 0.4834700107574463 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.5156230926513672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.49072837829589844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.48566293716430664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.4936864376068115 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.5116322040557861 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.5156216621398926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.5136313438415527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.494675874710083 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.503655195236206 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.5086443424224854 s]
44/162 DONE. [mean time: 0.5034561872482299 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5136518478393555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5066211223602295 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5096375942230225 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5176200866699219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5405623912811279 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5365660190582275 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.539557695388794 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5295870304107666 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.5296101570129395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.539564847946167 s]
45/162 DONE. [mean time: 0.5264957427978516 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.628342866897583 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.627328634262085 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6223392486572266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6253528594970703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6143903732299805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6163454055786133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6283800601959229 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6412625312805176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6462860107421875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.6223349571228027 s]
46/162 DONE. [mean time: 0.6273360013961792 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.979438066482544 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9903571605682373 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9793820381164551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9774160385131836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9684154987335205 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9667253494262695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9663927555084229 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9893832206726074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9923515319824219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.9803793430328369 s]
47/162 DONE. [mean time: 0.9791238069534302 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.335768699645996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.3377506732940674 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.3357560634613037 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.3397459983825684 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.341752052307129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.337750196456909 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.3799855709075928 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.341721296310425 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.3437860012054443 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 2.3377270698547363 s]
48/162 DONE. [mean time: 2.3432740688323976 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9903559684753418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9614300727844238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9345247745513916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.931511402130127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.962425947189331 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9414842128753662 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9434430599212646 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9973325729370117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.978386402130127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.9734060764312744 s]
49/162 DONE. [mean time: 0.9614300489425659 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 1.0003252029418945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 1.0711376667022705 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 1.025261640548706 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 1.0432422161102295 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9843451976776123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9953417778015137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9674155712127686 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.967414140701294 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9893555641174316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.9963409900665283 s]
50/162 DONE. [mean time: 1.0042174339294434 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.011322259902954 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0163135528564453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0402207374572754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.02927565574646 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.003345251083374 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0003528594970703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0292654037475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0452098846435547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0591728687286377 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 1.0651569366455078 s]
51/162 DONE. [mean time: 1.0301629781723023 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2666215896606445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.288559913635254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2576382160186768 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2456729412078857 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2227602005004883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2097954750061035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2307155132293701 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2307360172271729 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.2088582515716553 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 1.251661777496338 s]
52/162 DONE. [mean time: 1.241301989555359 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.0824501514434814 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.091496467590332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.0864903926849365 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.0874197483062744 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.1063621044158936 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.093402862548828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.076481819152832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.0674779415130615 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.0724639892578125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 2.0814366340637207 s]
53/162 DONE. [mean time: 2.084748864173889 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.046512603759766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.061503887176514 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.030658483505249 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.060500144958496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.044365882873535 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.068405866622925 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.055514097213745 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.060508966445923 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.076612949371338 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 5.0294718742370605 s]
54/162 DONE. [mean time: 5.053505086898804 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06381845474243164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06482672691345215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06582427024841309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06980776786804199 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06382131576538086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06482696533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06482672691345215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06582427024841309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06582355499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 0.06582450866699219 s]
55/162 DONE. [mean time: 0.06562352180480957 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0747990608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.06981420516967773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0718083381652832 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0718080997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.06582236289978027 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0688161849975586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.06682133674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.0718080997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.06482648849487305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.06581330299377441 s]
56/162 DONE. [mean time: 0.06951401233673096 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07081103324890137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.06981348991394043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07081103324890137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07280516624450684 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07380270957946777 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07280540466308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.071807861328125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0718080997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.07280540466308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.0718080997467041 s]
57/162 DONE. [mean time: 0.07200756072998046 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08779025077819824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.09871149063110352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08577108383178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08676838874816895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08577084541320801 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08779644966125488 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08676338195800781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.09275364875793457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08776164054870605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.08776998519897461 s]
58/162 DONE. [mean time: 0.08886537551879883 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.13162446022033691 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.1296520233154297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.12566423416137695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.12765908241271973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.12868690490722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.13364291191101074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.1296529769897461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.13263940811157227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.12766122817993164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.13464665412902832 s]
59/162 DONE. [mean time: 0.13025269508361817 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2942063808441162 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2931849956512451 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.28523755073547363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.29122161865234375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2902255058288574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.29124879837036133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2962310314178467 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.29122185707092285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.29620790481567383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.29621076583862305 s]
60/162 DONE. [mean time: 0.2925196409225464 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.13463950157165527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.1286609172821045 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.12767744064331055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.13561248779296875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.12466692924499512 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.12566399574279785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.12466669082641602 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.13663482666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.13065052032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.12668633460998535 s]
61/162 DONE. [mean time: 0.12955596446990966 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13364100456237793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1296532154083252 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.12765884399414062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.12865614891052246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13164997100830078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.14261841773986816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13164639472961426 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1266617774963379 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.12466144561767578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1356372833251953 s]
62/162 DONE. [mean time: 0.13134870529174805 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.14261841773986816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.13962817192077637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.15558290481567383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.16059565544128418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.14159631729125977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.14461350440979004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.14261889457702637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.13763189315795898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.13663482666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.14863109588623047 s]
63/162 DONE. [mean time: 0.14501516819000243 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17852282524108887 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.16956639289855957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17849206924438477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17154288291931152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17752552032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.18151473999023438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17752552032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17362713813781738 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17852258682250977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.17353606224060059 s]
64/162 DONE. [mean time: 0.1762357234954834 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.27329230308532715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.27028441429138184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.27030014991760254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.27130722999572754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.2762575149536133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.266263484954834 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.2642934322357178 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.2653157711029053 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.27030420303344727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.2662968635559082 s]
65/162 DONE. [mean time: 0.26948838233947753 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6373105049133301 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6395859718322754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.639296293258667 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6422889232635498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6333365440368652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6312963962554932 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6243312358856201 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.631312370300293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6313121318817139 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.6333322525024414 s]
66/162 DONE. [mean time: 0.634440016746521 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.2523527145385742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.24733829498291016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.2543210983276367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.24634075164794922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.251328706741333 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.24734783172607422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.2483375072479248 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.2563045024871826 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.24736332893371582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.24233055114746094 s]
67/162 DONE. [mean time: 0.2495365858078003 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.2523186206817627 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.2483360767364502 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.26132678985595703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.25234413146972656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.26232266426086426 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.2563130855560303 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.25728797912597656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.24634122848510742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.25232577323913574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.24733877182006836 s]
68/162 DONE. [mean time: 0.25372393131256105 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.27528929710388184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.2632715702056885 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.2722964286804199 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.27426743507385254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.2862582206726074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.276261568069458 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.27529072761535645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.2742421627044678 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.26927995681762695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.2682828903198242 s]
69/162 DONE. [mean time: 0.27357146739959715 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.33011722564697266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.34812164306640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.343059778213501 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.3480696678161621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.3400895595550537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.3361012935638428 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.33510422706604004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.336101770401001 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.3400909900665283 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.3311147689819336 s]
70/162 DONE. [mean time: 0.33879709243774414 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.5644910335540771 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.5804727077484131 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.5694811344146729 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.5654885768890381 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.5614988803863525 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.5675392150878906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.6083734035491943 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.6293208599090576 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.6253809928894043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.6024115085601807 s]
71/162 DONE. [mean time: 0.5875432968139649 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.381298542022705 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3823325634002686 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3733811378479004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3833563327789307 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3853013515472412 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3783519268035889 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.376321792602539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3972690105438232 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3820836544036865 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 1.3833303451538086 s]
72/162 DONE. [mean time: 1.3824024200439453 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13164877891540527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13068461418151855 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13360929489135742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13666129112243652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.12964129447937012 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13166046142578125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.14361572265625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13164806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13266777992248535 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 0.13065147399902344 s]
73/162 DONE. [mean time: 0.1333463430404663 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.1406383514404297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.13265228271484375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.13660335540771484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.13364291191101074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.13463997840881348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.1326453685760498 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.13962841033935547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.1396164894104004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.14461612701416016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 0.14261746406555176 s]
74/162 DONE. [mean time: 0.13793041706085205 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.14959979057312012 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.157578706741333 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.14162135124206543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.15458941459655762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.14563608169555664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.14461946487426758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.14757418632507324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.1406240463256836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.14561080932617188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 0.15059733390808105 s]
75/162 DONE. [mean time: 0.14800457954406737 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17154335975646973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.1805417537689209 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17356300354003906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17051935195922852 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17752552032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17154169082641602 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17054510116577148 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.181535005569458 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.17553114891052246 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 0.16954517364501953 s]
76/162 DONE. [mean time: 0.17463600635528564 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.2622990608215332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.24933338165283203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.25531792640686035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.2533226013183594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.256314754486084 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.2513282299041748 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.25531744956970215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.24933362007141113 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.256314754486084 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6370> done in 0.25532007217407227 s]
77/162 DONE. [mean time: 0.25452170372009275 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5914115905761719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.586484432220459 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5873820781707764 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5854089260101318 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5844404697418213 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5844378471374512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5794751644134521 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5874111652374268 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.582444429397583 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.5874326229095459 s]
78/162 DONE. [mean time: 0.5856328725814819 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.2543187141418457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.25531911849975586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.2543201446533203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.2573122978210449 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.2513265609741211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.24135494232177734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.25531744956970215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.24135470390319824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.2603294849395752 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 0.26128292083740234 s]
79/162 DONE. [mean time: 0.2533233642578125 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.28324127197265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.25331830978393555 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.26628971099853516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2672858238220215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2603025436401367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.25334811210632324 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.26130151748657227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.26526618003845215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.2543208599090576 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 0.26130175590515137 s]
80/162 DONE. [mean time: 0.26299681663513186 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.27728700637817383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.283219575881958 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.29322028160095215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.27725744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.2703075408935547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.2812464237213135 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.26628851890563965 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.2792506217956543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.2672727108001709 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 0.27127528190612793 s]
81/162 DONE. [mean time: 0.27696325778961184 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.34111905097961426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.33908724784851074 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3540306091308594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3441741466522217 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.33809471130371094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3361015319824219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3341069221496582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3291201591491699 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3411128520965576 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 0.3470492362976074 s]
82/162 DONE. [mean time: 0.3403996467590332 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5385613441467285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5395863056182861 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5425257682800293 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5355725288391113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.526592493057251 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5305817127227783 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5346066951751709 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5435473918914795 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.5466113090515137 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 0.531543493270874 s]
83/162 DONE. [mean time: 0.5371723651885987 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2906064987182617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2886335849761963 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2795848846435547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.287564992904663 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.26963472366333 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2725741863250732 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2706117630004883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2815730571746826 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2785837650299072 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.2855620384216309 s]
84/162 DONE. [mean time: 1.2805904626846314 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.5126299858093262 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.49968934059143066 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.49271559715270996 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.49166107177734375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.4837069511413574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.48675084114074707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.491687536239624 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.5026311874389648 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.5246002674102783 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 0.4827096462249756 s]
85/162 DONE. [mean time: 0.49687824249267576 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.4966721534729004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5046510696411133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.4966723918914795 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5046510696411133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.4976942539215088 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5026569366455078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5106627941131592 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5076184272766113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5006201267242432 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 0.5126340389251709 s]
86/162 DONE. [mean time: 0.5035544872283936 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.563469409942627 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5455942153930664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5485332012176514 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5534958839416504 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5485391616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5445690155029297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5714519023895264 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5704751014709473 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5704746246337891 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.5545251369476318 s]
87/162 DONE. [mean time: 0.5571127653121948 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.701124906539917 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.7071101665496826 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.7001283168792725 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6991362571716309 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6861851215362549 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6871905326843262 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6901693344116211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6931240558624268 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.7021231651306152 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.7001323699951172 s]
88/162 DONE. [mean time: 0.6969434261322022 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1489334106445312 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1399505138397217 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1549632549285889 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.120959758758545 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.141948938369751 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1499781608581543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1480116844177246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1519207954406738 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.1419289112091064 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 1.173889398574829 s]
89/162 DONE. [mean time: 1.1474501371383667 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.8025307655334473 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.7875092029571533 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.7536919116973877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.776587724685669 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.75166916847229 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.778566360473633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.7603683471679688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.7616751194000244 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.735748291015625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 2.7675700187683105 s]
90/162 DONE. [mean time: 2.7679947137832643 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.27227330207824707 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.28025078773498535 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.2663118839263916 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.2652900218963623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.2613027095794678 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.27324533462524414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.26928019523620605 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.2822449207305908 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.2812483310699463 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 0.2753150463104248 s]
91/162 DONE. [mean time: 0.2727760553359985 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.27028417587280273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.26827168464660645 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.2752401828765869 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.27428364753723145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.2742633819580078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.26927709579467773 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.2752394676208496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.26731061935424805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.2732686996459961 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.27127504348754883 s]
92/162 DONE. [mean time: 0.2721724271774292 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2971818447113037 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2932393550872803 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2961850166320801 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.30817627906799316 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.28426289558410645 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3101770877838135 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.31316184997558594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.30416393280029297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2972073554992676 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.2882528305053711 s]
93/162 DONE. [mean time: 0.2992008447647095 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3609929084777832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.36602091789245605 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.36602163314819336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.35006284713745117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3490915298461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3530566692352295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.35402989387512207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3650243282318115 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.35804152488708496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3561065196990967 s]
94/162 DONE. [mean time: 0.3579447031021118 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5225965976715088 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5206081867218018 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5186400413513184 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5176224708557129 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5225741863250732 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5206081867218018 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5275869369506836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5265953540802002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.5216059684753418 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.526592493057251 s]
95/162 DONE. [mean time: 0.5226030349731445 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1698768138885498 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1828393936157227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1998190879821777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1948602199554443 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1798219680786133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1589107513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1598994731903076 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1928389072418213 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1748623847961426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 1.1789093017578125 s]
96/162 DONE. [mean time: 1.1794639110565186 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5076479911804199 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5106565952301025 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5066461563110352 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.531590461730957 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5425412654876709 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.526592493057251 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.508643627166748 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5066707134246826 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5096142292022705 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 0.5156493186950684 s]
97/162 DONE. [mean time: 0.5166252851486206 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5255935192108154 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5475180149078369 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5415513515472412 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5465400218963623 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5455441474914551 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5265941619873047 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5445482730865479 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5495312213897705 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5395805835723877 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 0.5266199111938477 s]
98/162 DONE. [mean time: 0.5395621299743653 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5664620399475098 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5674865245819092 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5565359592437744 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5634703636169434 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5714728832244873 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5724737644195557 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.580446720123291 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.565488338470459 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5595030784606934 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.5684819221496582 s]
99/162 DONE. [mean time: 0.5672824621200562 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6931459903717041 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6901566982269287 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.7081112861633301 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.7031199932098389 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6911509037017822 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6981356143951416 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.7200796604156494 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.7061123847961426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6971404552459717 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6831727027893066 s]
100/162 DONE. [mean time: 0.6990325689315796 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.0841870307922363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.1010427474975586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.0841526985168457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.0910587310791016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.0941290855407715 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.1000452041625977 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.08412504196167 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.0960516929626465 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.0870940685272217 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 1.1030664443969727 s]
101/162 DONE. [mean time: 1.0927946090698242 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.5930774211883545 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.5781068801879883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.609057664871216 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.614060401916504 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.6239867210388184 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.617013454437256 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.6050593852996826 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.5940518379211426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.6110434532165527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 2.583125114440918 s]
102/162 DONE. [mean time: 2.6031574249267577 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.025259256362915 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.0322411060333252 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.9933445453643799 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.022268533706665 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.0501971244812012 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.0091426372528076 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.0003256797790527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.9963643550872803 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.9953417778015137 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 0.9814028739929199 s]
103/162 DONE. [mean time: 1.0107883930206298 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0272448062896729 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.025285243988037 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0173068046569824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0212750434875488 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0193262100219727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0193028450012207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0172805786132812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0212976932525635 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0202727317810059 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F61C0> done in 1.0213229656219482 s]
104/162 DONE. [mean time: 1.021091365814209 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.090113639831543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.1020708084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.090148687362671 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.097071647644043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.0991075038909912 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.0960969924926758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.095099925994873 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.087120771408081 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.088118553161621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6C70> done in 1.1020822525024414 s]
105/162 DONE. [mean time: 1.0948039531707763 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3544015884399414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3543860912322998 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.369394302368164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3603699207305908 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3514399528503418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3624131679534912 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3514559268951416 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.377345323562622 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3693933486938477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BE0> done in 1.3603756427764893 s]
106/162 DONE. [mean time: 1.3611986637115479 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.8075506687164307 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.8025407791137695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.827439546585083 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.8215749263763428 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.8045101165771484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.7975728511810303 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.790540933609009 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.805500030517578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.8135080337524414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6BB0> done in 2.817478895187378 s]
107/162 DONE. [mean time: 2.80892128944397 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.599113702774048 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.566119432449341 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.609086036682129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.654095888137817 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.606002330780029 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.595630168914795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.597067356109619 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.611039638519287 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.5960352420806885 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B80> done in 5.592076063156128 s]
108/162 DONE. [mean time: 5.603026032447815 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07280468940734863 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.08078336715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07380342483520508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07381176948547363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07379961013793945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07480025291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07381129264831543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07676863670349121 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07390046119689941 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B50> done in 0.07471609115600586 s]
109/162 DONE. [mean time: 0.07500002384185792 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07679486274719238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07479977607727051 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07679510116577148 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.0747992992401123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.08179640769958496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.08083009719848633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07379031181335449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07482218742370605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07380247116088867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6B20> done in 0.07579779624938965 s]
110/162 DONE. [mean time: 0.07669880390167236 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08077740669250488 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08579540252685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08178043365478516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08178830146789551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08177399635314941 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08078360557556152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08180356025695801 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08373188972473145 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.08180427551269531 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AF0> done in 0.0827791690826416 s]
111/162 DONE. [mean time: 0.08258106708526611 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10172820091247559 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10073089599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10571789741516113 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10073018074035645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.09873604774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.09973382949829102 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10073041915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10671520233154297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10073018074035645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6AC0> done in 0.10073113441467285 s]
112/162 DONE. [mean time: 0.10172810554504394 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15555906295776367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15660619735717773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.1486034393310547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15259122848510742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15259242057800293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15059733390808105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.1466076374053955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15059781074523926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.15358805656433105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A90> done in 0.14860320091247559 s]
113/162 DONE. [mean time: 0.15169434547424315 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.3500645160675049 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.34206271171569824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.34211015701293945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.34709715843200684 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.34707188606262207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.33809709548950195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.342085599899292 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.3461019992828369 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.3450775146484375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A60> done in 0.3450775146484375 s]
114/162 DONE. [mean time: 0.3445843458175659 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.1396470069885254 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.14060163497924805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.1446375846862793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.1436629295349121 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.14062285423278809 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.1466081142425537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.14162230491638184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.13959097862243652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.13963532447814941 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A30> done in 0.14859390258789062 s]
115/162 DONE. [mean time: 0.14272527694702147 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.1466071605682373 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.1436169147491455 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.14957594871520996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.14466404914855957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.14461255073547363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.14559507369995117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.14959955215454102 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.14663481712341309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.1436159610748291 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6A00> done in 0.1504364013671875 s]
116/162 DONE. [mean time: 0.14666123390197755 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.16060352325439453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15555286407470703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.16560721397399902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15658259391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15655851364135742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.16057038307189941 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15660357475280762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15358972549438477 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.15755414962768555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69D0> done in 0.1605679988861084 s]
117/162 DONE. [mean time: 0.15847926139831542 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19652414321899414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19746017456054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19747257232666016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.1934821605682373 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.20144963264465332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19046592712402344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19946694374084473 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19552993774414062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19345974922180176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F69A0> done in 0.19547724723815918 s]
118/162 DONE. [mean time: 0.19638197422027587 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.30718255043029785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.3072021007537842 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.3062312602996826 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.31214356422424316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.3101992607116699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.3061637878417969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.31316280364990234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.3112001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.3071784973144531 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.31316304206848145 s]
119/162 DONE. [mean time: 0.3094841957092285 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.737018346786499 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7519898414611816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7410180568695068 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7549593448638916 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7490546703338623 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.751990556716919 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7510192394256592 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7560265064239502 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7430131435394287 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6940> done in 0.7500255107879639 s]
120/162 DONE. [mean time: 0.7488134622573852 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.27724790573120117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2792534828186035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.28324246406555176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.27529215812683105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.27828502655029297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.27526402473449707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2792534828186035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.27526402473449707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2792544364929199 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6910> done in 0.2742764949798584 s]
121/162 DONE. [mean time: 0.27776508331298827 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2842397689819336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2842738628387451 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.28223705291748047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2872593402862549 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.281247615814209 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2872331142425537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2812483310699463 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2842397689819336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2812769412994385 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F68B0> done in 0.2892270088195801 s]
122/162 DONE. [mean time: 0.28454790115356443 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.31214046478271484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.3151829242706299 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.3131685256958008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.3072044849395752 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.30716919898986816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.3121654987335205 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.3071556091308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.30922460556030273 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.31113362312316895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6880> done in 0.30318760871887207 s]
123/162 DONE. [mean time: 0.3100740909576416 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.3829920291900635 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.3869798183441162 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.391920804977417 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.38698244094848633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.3939478397369385 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.38898706436157227 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.3859682083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.3829765319824219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.38700366020202637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6850> done in 0.38895654678344727 s]
124/162 DONE. [mean time: 0.38777177333831786 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6482324600219727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6523230075836182 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6572415828704834 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6522583961486816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6472702026367188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6622843742370605 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6503560543060303 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6553030014038086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.6602351665496826 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6820> done in 0.643308162689209 s]
125/162 DONE. [mean time: 0.6530808448791504 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.586808681488037 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.5828232765197754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.5897324085235596 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.593794584274292 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.5987591743469238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.610689640045166 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.570694923400879 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.576848030090332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.5628197193145752 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67F0> done in 1.5758392810821533 s]
126/162 DONE. [mean time: 1.5849784374237061 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14361333847045898 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.1436161994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14663267135620117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14960074424743652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14761066436767578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.1426680088043213 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14860296249389648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.15259194374084473 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.14363765716552734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F67C0> done in 0.15159964561462402 s]
127/162 DONE. [mean time: 0.1472118616104126 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.1486518383026123 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.14960074424743652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.1535656452178955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.16057109832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.15657997131347656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.14261841773986816 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.15162014961242676 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.15456318855285645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.14860153198242188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6790> done in 0.15760469436645508 s]
128/162 DONE. [mean time: 0.1525975465774536 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.15658140182495117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.1575784683227539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.16356420516967773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.16455864906311035 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.15957355499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.15857625007629395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.16159272193908691 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.16057085990905762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.16855478286743164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6760> done in 0.16357898712158203 s]
129/162 DONE. [mean time: 0.16177337169647216 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.19547033309936523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.20248198509216309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.193495512008667 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1934807300567627 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.19448041915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.1934823989868164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.19647502899169922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.19248557090759277 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.19148802757263184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6730> done in 0.19647502899169922 s]
130/162 DONE. [mean time: 0.1952749013900757 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.2902257442474365 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.3021965026855469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.30219054222106934 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.28822994232177734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.2922189235687256 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.28623485565185547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.29372310638427734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.289226770401001 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.29920029640197754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6700> done in 0.2922205924987793 s]
131/162 DONE. [mean time: 0.2936664342880249 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6831991672515869 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6822035312652588 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.686171293258667 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6791837215423584 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.680232048034668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6851441860198975 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6781909465789795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6751949787139893 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6782116889953613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F66D0> done in 0.6811819076538086 s]
132/162 DONE. [mean time: 0.6809888362884522 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2942171096801758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2822690010070801 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.28623437881469727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.27725958824157715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2802259922027588 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2762613296508789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2892284393310547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.29720425605773926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2712745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F64F0> done in 0.2812495231628418 s]
133/162 DONE. [mean time: 0.2837418794631958 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.29920411109924316 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.3031880855560303 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2862362861633301 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.28024959564208984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2892341613769531 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.2892313003540039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.30219244956970215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.3011953830718994 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.29122114181518555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6490> done in 0.3031940460205078 s]
134/162 DONE. [mean time: 0.294714093208313 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.32114100456237793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3271486759185791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3141746520996094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3091871738433838 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.31812572479248047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3122241497039795 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3181440830230713 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3061814308166504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3052022457122803 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6460> done in 0.3081514835357666 s]
135/162 DONE. [mean time: 0.31406846046447756 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.388960599899292 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3804895877838135 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3899574279785156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3840019702911377 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.38793492317199707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.38996267318725586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.3809802532196045 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.38796305656433105 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.38197875022888184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6340> done in 0.38097262382507324 s]
136/162 DONE. [mean time: 0.38552055358886717 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.5944108963012695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6093997955322266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6004531383514404 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6083428859710693 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.593414306640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6074013710021973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6173543930053711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6073994636535645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6143856048583984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6220> done in 0.6073532104492188 s]
137/162 DONE. [mean time: 0.6060911893844605 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4531216621398926 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4422342777252197 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4381639957427979 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.446134328842163 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4576234817504883 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4601218700408936 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4741184711456299 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4441475868225098 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4321718215942383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDF8BE0> done in 1.4421494007110596 s]
138/162 DONE. [mean time: 1.449197816848755 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5435781478881836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5385310649871826 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5724735260009766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5565352439880371 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5515289306640625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5365655422210693 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5335736274719238 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5305819511413574 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.563518762588501 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDED460> done in 0.5443406105041504 s]
139/162 DONE. [mean time: 0.5471227407455445 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5585105419158936 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5515201091766357 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.545541524887085 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5625019073486328 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5794515609741211 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5535187721252441 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5495307445526123 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5505285263061523 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5515825748443604 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF58B0> done in 0.5594995021820068 s]
140/162 DONE. [mean time: 0.5562185764312744 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5993833541870117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6223418712615967 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.628342866897583 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.605358362197876 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6123626232147217 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.600421667098999 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.5964057445526123 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.613365650177002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6153595447540283 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF59A0> done in 0.6053814888000488 s]
141/162 DONE. [mean time: 0.6099721431732178 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7540092468261719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7519948482513428 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7539796829223633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7589943408966064 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7570009231567383 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7559549808502197 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7689456939697266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7699449062347412 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.758995771408081 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5970> done in 0.7520236968994141 s]
142/162 DONE. [mean time: 0.7581844091415405 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2716283798217773 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2796382904052734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.256640911102295 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2875940799713135 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2905464172363281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2775850296020508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2825758457183838 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2875618934631348 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2885799407958984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FBF5850> done in 1.2726011276245117 s]
143/162 DONE. [mean time: 1.2797945737838745 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.144646167755127 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.13574481010437 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.129643440246582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.1336510181427 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.1126511096954346 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.0937283039093018 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.1416263580322266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.1426587104797363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.1426026821136475 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FDCD280> done in 3.132720947265625 s]
144/162 DONE. [mean time: 3.130967354774475 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.28421568870544434 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.28725695610046387 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2872316837310791 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.29122257232666016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.29319262504577637 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.3041865825653076 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.304185152053833 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2872641086578369 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.2982292175292969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE379D0> done in 0.28623509407043457 s]
145/162 DONE. [mean time: 0.29232196807861327 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.3011910915374756 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2941884994506836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.30718040466308594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.302215576171875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2952098846435547 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.3001997470855713 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.2972087860107422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.30817651748657227 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.3111917972564697 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656EE375E0> done in 0.29817891120910645 s]
146/162 DONE. [mean time: 0.3017934083938599 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3291435241699219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3251378536224365 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.32013726234436035 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3251314163208008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.329103946685791 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.336101770401001 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.33211350440979004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3271472454071045 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3251028060913086 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D00> done in 0.3251304626464844 s]
147/162 DONE. [mean time: 0.3275275468826294 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3959496021270752 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3949613571166992 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.39893388748168945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.39893317222595215 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.39998292922973633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3939363956451416 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3969380855560303 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.3999440670013428 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.40192580223083496 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3CA0> done in 0.39893436431884766 s]
148/162 DONE. [mean time: 0.39824485778808594 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5964334011077881 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5973794460296631 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5974032878875732 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5914192199707031 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5964062213897705 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5974068641662598 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5974271297454834 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5984070301055908 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5784521102905273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D30> done in 0.5914709568023682 s]
149/162 DONE. [mean time: 0.5944201231002808 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.3663418292999268 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.3583734035491943 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.3599157333374023 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.3503968715667725 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.372331142425537 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.356379508972168 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.3513927459716797 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.374634027481079 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.378342628479004 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D60> done in 1.383357048034668 s]
150/162 DONE. [mean time: 1.365247416496277 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.566486120223999 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5585064888000488 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5605566501617432 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.564486026763916 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5625007152557373 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5784883499145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5634932518005371 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5615096092224121 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.5544660091400146 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3D90> done in 0.560553789138794 s]
151/162 DONE. [mean time: 0.5634097576141357 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5734655857086182 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5754895210266113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5714716911315918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5824205875396729 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5774838924407959 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5754857063293457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5784811973571777 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5804750919342041 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5734672546386719 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DC0> done in 0.5725226402282715 s]
152/162 DONE. [mean time: 0.5760763168334961 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6283199787139893 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6263384819030762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6173484325408936 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6234138011932373 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6273231506347656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.623375415802002 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6203022003173828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.615408182144165 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.6253046989440918 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3DF0> done in 0.621361494064331 s]
153/162 DONE. [mean time: 0.6228495836257935 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7759490013122559 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7789452075958252 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7779462337493896 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7829358577728271 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7948803901672363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7719311714172363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.777946949005127 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7739520072937012 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7799758911132812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E20> done in 0.7729630470275879 s]
154/162 DONE. [mean time: 0.779042387008667 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.230736494064331 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.217555046081543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2367322444915771 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2317359447479248 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2377445697784424 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2217607498168945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2267482280731201 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2177724838256836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2257537841796875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E50> done in 1.2367229461669922 s]
155/162 DONE. [mean time: 1.228427529335022 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.967090368270874 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.9442362785339355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.9500956535339355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 3.1745641231536865 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.959120750427246 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.9441583156585693 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.957125186920166 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.973102331161499 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.9620819091796875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3E80> done in 2.9711127281188965 s]
156/162 DONE. [mean time: 2.9803696393966677 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0930776596069336 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0836913585662842 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0940771102905273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0920791625976562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0841271877288818 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0841023921966553 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.109062910079956 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.1319537162780762 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.1229970455169678 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EB0> done in 1.0951018333435059 s]
157/162 DONE. [mean time: 1.0991281270980835 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.1140506267547607 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.1519289016723633 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.1339688301086426 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.1100313663482666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.1000595092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.1120312213897705 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.0920805931091309 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.0960702896118164 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.0900859832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3EE0> done in 1.2168004512786865 s]
158/162 DONE. [mean time: 1.121810507774353 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.3055148124694824 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.285616397857666 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2287039756774902 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2187647819519043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2247018814086914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2337284088134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2067480087280273 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.1958286762237549 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2377042770385742 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F10> done in 1.2386889457702637 s]
159/162 DONE. [mean time: 1.2378985166549683 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5598809719085693 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.554847240447998 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.564857006072998 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5518848896026611 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5728232860565186 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5548434257507324 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5408895015716553 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5668346881866455 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5590524673461914 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F40> done in 1.5568382740020752 s]
160/162 DONE. [mean time: 1.5583749055862426 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.60300874710083 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.5910873413085938 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.5910799503326416 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.5900802612304688 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.5970630645751953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.6020445823669434 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.5980539321899414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.60841703414917 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.6199982166290283 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3F70> done in 2.6249618530273438 s]
161/162 DONE. [mean time: 2.602781343460083 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.521627902984619 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.413116693496704 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.275288343429565 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.395918846130371 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.244336128234863 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.28229832649231 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.294304847717285 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.374382734298706 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.319168329238892 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FA0> done in 6.287247657775879 s]
162/162 DONE. [mean time: 6.340969252586365 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION cv2 DONE. [time: 1138.7312655448914 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION numba_cuda_direct...
1/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.029276609420776367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.006272554397583008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.005205392837524414 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.005631685256958008 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0050852298736572266 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.005875349044799805 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.005182504653930664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.0045855045318603516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.005918741226196289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001656FEB3FD0> done in 0.005377292633056641 s]
1/162 DONE. [mean time: 0.007841086387634278 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0065801143646240234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0059816837310791016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005036830902099609 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0050585269927978516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006411075592041016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005480289459228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.004769325256347656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005810737609863281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006033658981323242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0058307647705078125 s]
2/162 DONE. [mean time: 0.005699300765991211 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.008288860321044922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.007922887802124023 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.007976055145263672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0079803466796875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.008111238479614258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.006731510162353516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010303020477294922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.006985902786254883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.007169246673583984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.007276058197021484 s]
3/162 DONE. [mean time: 0.007874512672424316 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.013930797576904297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.012965202331542969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.014960527420043945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.013961553573608398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.013963699340820312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.013854265213012695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.013237953186035156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.013964414596557617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.015957355499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305D90> done in 0.01339864730834961 s]
4/162 DONE. [mean time: 0.014019441604614259 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.038867950439453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.01207280158996582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.009434938430786133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010973691940307617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010970115661621094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.009974241256713867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010889053344726562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.009119272232055664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.009073734283447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010643959045410156 s]
5/162 DONE. [mean time: 0.01320197582244873 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0302121639251709 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.030094146728515625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.029241085052490234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.028924226760864258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02693963050842285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.03146862983703613 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.029667139053344727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.029924869537353516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.025930166244506836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02892899513244629 s]
6/162 DONE. [mean time: 0.029133105278015138 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.003974199295043945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0033826828002929688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.003916263580322266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0031037330627441406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0028557777404785156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0030541419982910156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0031354427337646484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0029931068420410156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0037763118743896484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.002846240997314453 s]
7/162 DONE. [mean time: 0.003303790092468262 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0038890838623046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0030286312103271484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0029959678649902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0029876232147216797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.003894329071044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.003170013427734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0033881664276123047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0034623146057128906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FD0C70> done in 0.0032553672790527344 s]
8/162 DONE. [mean time: 0.00330655574798584 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.004266977310180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003746509552001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0034055709838867188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0036041736602783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003530740737915039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0034379959106445312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003991365432739258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003989219665527344 s]
9/162 DONE. [mean time: 0.0036953449249267577 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.007997274398803711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.006867885589599609 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.006980180740356445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.006982564926147461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.00698089599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.005194425582885742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.005987644195556641 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.005982398986816406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBE80> done in 0.00586390495300293 s]
10/162 DONE. [mean time: 0.006482124328613281 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.013931035995483398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.012974023818969727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.015058279037475586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.012967586517333984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.01196908950805664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.013077974319458008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.011986255645751953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.01285409927368164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.014916658401489258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FC0B80> done in 0.012137889862060547 s]
11/162 DONE. [mean time: 0.01338658332824707 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04790520668029785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.045954227447509766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.0459141731262207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04839277267456055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04489016532897949 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04577136039733887 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.046906232833862305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04423117637634277 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04590892791748047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.04788088798522949 s]
12/162 DONE. [mean time: 0.04637551307678223 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.005823373794555664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003945827484130859 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0035619735717773438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.002869129180908203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0028405189514160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.002969980239868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003147125244140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.002969026565551758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0033338069915771484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003205537796020508 s]
13/162 DONE. [mean time: 0.003466629981994629 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.003242969512939453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0032300949096679688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.003121614456176758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0032927989959716797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.004542827606201172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.003613710403442383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.003589630126953125 s]
14/162 DONE. [mean time: 0.0034610986709594726 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004651546478271484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004019737243652344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0048046112060546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0038216114044189453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004245281219482422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003991127014160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004095554351806641 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003991603851318359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004997968673706055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004974842071533203 s]
15/162 DONE. [mean time: 0.004359388351440429 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.010819196701049805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.007978439331054688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.008979082107543945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.007974863052368164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.008816719055175781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.00881505012512207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.0079803466796875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.007979393005371094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.008562803268432617 s]
16/162 DONE. [mean time: 0.008588457107543945 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.021909475326538086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.0239107608795166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.023848295211791992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.023939132690429688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.024932146072387695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.021958351135253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.025732040405273438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.021778345108032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.02474045753479004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.02194380760192871 s]
17/162 DONE. [mean time: 0.023572778701782225 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08483767509460449 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08179259300231934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08184409141540527 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08175992965698242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0840463638305664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08099055290222168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08179688453674316 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08128952980041504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08444452285766602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.08269047737121582 s]
18/162 DONE. [mean time: 0.08265032768249511 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.004971981048583984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.003880023956298828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.0030515193939208984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.002765178680419922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.003525257110595703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.003004789352416992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.002801656723022461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.002897977828979492 s]
19/162 DONE. [mean time: 0.0032886505126953126 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.002911806106567383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.0030303001403808594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.0030012130737304688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.002984285354614258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.003599405288696289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.004468202590942383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.0029633045196533203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE76A0> done in 0.003030538558959961 s]
20/162 DONE. [mean time: 0.00329737663269043 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.004319190979003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.0029942989349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.003993034362792969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.003342866897583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.003747701644897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.003395557403564453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.0036208629608154297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.003478527069091797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.004004240036010742 s]
21/162 DONE. [mean time: 0.0036886930465698242 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.0058441162109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.0064847469329833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.0067403316497802734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.004988670349121094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.006001949310302734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.005568742752075195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.005713701248168945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.006983757019042969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.005984067916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E20> done in 0.007989883422851562 s]
22/162 DONE. [mean time: 0.006229996681213379 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.014351129531860352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.012859821319580078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.014972686767578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.013952970504760742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.01394200325012207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.014451026916503906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.012901782989501953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.012967824935913086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.014999628067016602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7040> done in 0.013965129852294922 s]
23/162 DONE. [mean time: 0.014036321640014648 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.05124950408935547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.049449920654296875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.050922393798828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.04975318908691406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.047968387603759766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.04998779296875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.049976348876953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.04686737060546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.04886960983276367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7340> done in 0.048870086669921875 s]
24/162 DONE. [mean time: 0.049492597579956055 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.005136013031005859 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0030303001403808594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.003989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.002955913543701172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.003020048141479492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.004006862640380859 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.003559589385986328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0028214454650878906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0031201839447021484 s]
25/162 DONE. [mean time: 0.0034632205963134764 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0035071372985839844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.003991127014160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.00293731689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.002888202667236328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0031096935272216797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0034627914428710938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0031232833862304688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC0D0> done in 0.0029938220977783203 s]
26/162 DONE. [mean time: 0.0032001018524169924 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003988742828369141 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.00513148307800293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.0041561126708984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004566669464111328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.0040433406829833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004048347473144531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004083156585693359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003878355026245117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004060983657836914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004015922546386719 s]
27/162 DONE. [mean time: 0.004197311401367187 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.008976221084594727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.009982109069824219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00896453857421875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.008980989456176758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.008139371871948242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00798177719116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.009972810745239258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00897669792175293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.008437156677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00861668586730957 s]
28/162 DONE. [mean time: 0.009002757072448731 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.027893781661987305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.025232553482055664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.021945953369140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.0238955020904541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.0239408016204834 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.022756338119506836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.02593374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.02294301986694336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.02410125732421875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE77C0> done in 0.02289724349975586 s]
29/162 DONE. [mean time: 0.024154019355773926 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08300614356994629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08508586883544922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08397436141967773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08138489723205566 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08133459091186523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08271145820617676 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08229422569274902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08175802230834961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08176040649414062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.08162832260131836 s]
30/162 DONE. [mean time: 0.08259174823760987 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0052835941314697266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0030274391174316406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0029556751251220703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003027677536010742 s]
31/162 DONE. [mean time: 0.003224968910217285 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.0029823780059814453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.003964662551879883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.003016948699951172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.003988027572631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.0034084320068359375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.003109455108642578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.003801584243774414 s]
32/162 DONE. [mean time: 0.00332489013671875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005983114242553711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006743431091308594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007209062576293945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005025148391723633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005639791488647461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005972146987915039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005128145217895508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.004721641540527344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005069732666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.004992485046386719 s]
33/162 DONE. [mean time: 0.005748462677001953 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011725664138793945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.01279449462890625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011741876602172852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012994527816772461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011942625045776367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011974096298217773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.01381683349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.010971784591674805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012176513671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013068675994873047 s]
34/162 DONE. [mean time: 0.012520241737365722 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.0398712158203125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.04026675224304199 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.036911964416503906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.03989124298095703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.037698984146118164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.03950786590576172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.04089236259460449 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.03843331336975098 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.039412736892700195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.03834795951843262 s]
35/162 DONE. [mean time: 0.03932311534881592 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.15256834030151367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14918279647827148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14953112602233887 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14760851860046387 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.1464390754699707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.1497054100036621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14768648147583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.1495513916015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14672374725341797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.1494426727294922 s]
36/162 DONE. [mean time: 0.14894647598266603 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0033774375915527344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0029273033142089844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.004011631011962891 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0030040740966796875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.003136157989501953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.00397801399230957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0029897689819335938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0029480457305908203 s]
37/162 DONE. [mean time: 0.0032359838485717775 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0029282569885253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.00299835205078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0039861202239990234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.003901243209838867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.003176450729370117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.003270387649536133 s]
38/162 DONE. [mean time: 0.003322935104370117 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.004506349563598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.0048677921295166016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.004011392593383789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.004141092300415039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.003991127014160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.004985809326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.005000591278076172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D00> done in 0.004973411560058594 s]
39/162 DONE. [mean time: 0.00454556941986084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.009942770004272461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.007986783981323242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.008684873580932617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.007994890213012695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.008962392807006836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.00937342643737793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.007941246032714844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.010921001434326172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.00798487663269043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.00897216796875 s]
40/162 DONE. [mean time: 0.008876442909240723 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.027204513549804688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.023938655853271484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.02681136131286621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.024982213973999023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.02591395378112793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.02593851089477539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.024954557418823242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.02698802947998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.023939132690429688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.025930404663085938 s]
41/162 DONE. [mean time: 0.025660133361816405 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09481072425842285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09172558784484863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09398603439331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09008407592773438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09630012512207031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.08960556983947754 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.0943441390991211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09147095680236816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09195065498352051 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.09133243560791016 s]
42/162 DONE. [mean time: 0.09256103038787841 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.005822420120239258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0039017200469970703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0030257701873779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003163576126098633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0027382373809814453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0019965171813964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003741025924682617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0029010772705078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.002997875213623047 s]
43/162 DONE. [mean time: 0.0033281564712524412 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003947257995605469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003018617630004883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003194570541381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0033903121948242188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003991603851318359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003585338592529297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0031976699829101562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004987478256225586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0039882659912109375 s]
44/162 DONE. [mean time: 0.003726696968078613 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005425930023193359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0050623416900634766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.00529789924621582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.004931211471557617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005465030670166016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005068302154541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.004989147186279297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006086111068725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005105018615722656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005062103271484375 s]
45/162 DONE. [mean time: 0.005249309539794922 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.012763738632202148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.01196908950805664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.011971712112426758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.012982845306396484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.013962030410766602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.01336526870727539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.01198887825012207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.012815475463867188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.014662742614746094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.011540412902832031 s]
46/162 DONE. [mean time: 0.01300194263458252 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.041979074478149414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.03989577293395996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.040781259536743164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.04004693031311035 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.040718793869018555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.038903236389160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.04091644287109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.03847098350524902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.04288959503173828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.038912057876586914 s]
47/162 DONE. [mean time: 0.04045069217681885 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.16070270538330078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.15315842628479004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.15569114685058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.15401840209960938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.156325101852417 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.15159392356872559 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.15624737739562988 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.1548609733581543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.15371131896972656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.1532890796661377 s]
48/162 DONE. [mean time: 0.15505876541137695 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.003981828689575195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.003870725631713867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.004000186920166016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0029838085174560547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.004094839096069336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0032112598419189453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.002829313278198242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0028111934661865234 s]
49/162 DONE. [mean time: 0.0034766197204589844 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.0036199092864990234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.0038836002349853516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.003706693649291992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.003992557525634766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.004996538162231445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.005330085754394531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.004485130310058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.004211902618408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.003758668899536133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC1F0> done in 0.0037271976470947266 s]
50/162 DONE. [mean time: 0.004171228408813477 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008419275283813477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008207082748413086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.006990671157836914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008966445922851562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.007976770401000977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.006987810134887695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.007982015609741211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.007294178009033203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.007981538772583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.006981372833251953 s]
51/162 DONE. [mean time: 0.007778716087341308 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01891922950744629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.020313501358032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.019951820373535156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01894688606262207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.021945714950561523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.020938396453857422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.019952774047851562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.02197551727294922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.019954681396484375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.021938800811767578 s]
52/162 DONE. [mean time: 0.020583367347717284 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.0727691650390625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07280468940734863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.0733175277709961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07044053077697754 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07273554801940918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07281684875488281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07428932189941406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07259225845336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07508301734924316 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECA60> done in 0.07365822792053223 s]
53/162 DONE. [mean time: 0.07305071353912354 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.2836778163909912 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.27816081047058105 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.28111934661865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.28100085258483887 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.2831685543060303 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.27901577949523926 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.28011512756347656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.27501749992370605 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.2800021171569824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC730> done in 0.2798449993133545 s]
54/162 DONE. [mean time: 0.28021328449249266 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.003979682922363281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.004635810852050781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.003100872039794922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.002836465835571289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.002955198287963867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.0028166770935058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.0030062198638916016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECFA0> done in 0.01497340202331543 s]
55/162 DONE. [mean time: 0.004429221153259277 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0036993026733398438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.004007101058959961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0038094520568847656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0030317306518554688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0027971267700195312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0032448768615722656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.0029947757720947266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEADF0> done in 0.002990245819091797 s]
56/162 DONE. [mean time: 0.0032561302185058595 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.003984928131103516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.004954814910888672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.0036056041717529297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.003826618194580078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.004990100860595703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.0039861202239990234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.004006147384643555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.0036878585815429688 s]
57/162 DONE. [mean time: 0.004002523422241211 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007255077362060547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007335662841796875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006844282150268555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006587505340576172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006735563278198242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006204843521118164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.005985260009765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007470130920410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.005547285079956055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0074689388275146484 s]
58/162 DONE. [mean time: 0.0067434549331665036 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.015926361083984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.015969038009643555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.016953706741333008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.015959978103637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01694321632385254 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.015909671783447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.016931533813476562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.016947031021118164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01598072052001953 s]
59/162 DONE. [mean time: 0.016347885131835938 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.05796504020690918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.05883955955505371 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.056186676025390625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.057997703552246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.057779550552368164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.05717658996582031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.055889129638671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.057996273040771484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.05930685997009277 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8FA0> done in 0.055857181549072266 s]
60/162 DONE. [mean time: 0.05759813785552979 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.005980014801025391 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0039882659912109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003373861312866211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0025300979614257812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0040111541748046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0029790401458740234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0029993057250976562 s]
61/162 DONE. [mean time: 0.003583836555480957 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.003041505813598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.0029942989349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.005007266998291016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.0029942989349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.002991199493408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.0031838417053222656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.003068208694458008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECB80> done in 0.0029938220977783203 s]
62/162 DONE. [mean time: 0.0034254789352416992 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003988742828369141 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004986763000488281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004988908767700195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.00498509407043457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004987239837646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.005980730056762695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004461765289306641 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.004380226135253906 s]
63/162 DONE. [mean time: 0.004773473739624024 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.011001348495483398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009354829788208008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.008978843688964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009815454483032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.00966954231262207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.010607719421386719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.00888371467590332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009284257888793945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.010654211044311523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.008980989456176758 s]
64/162 DONE. [mean time: 0.009874796867370606 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.025786638259887695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.027661800384521484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.02593255043029785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.02692890167236328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.026926755905151367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.027090787887573242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.02792835235595703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.026929855346679688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.026053905487060547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.027936458587646484 s]
65/162 DONE. [mean time: 0.02691760063171387 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10468292236328125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.09873771667480469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10228633880615234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10091185569763184 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10273981094360352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10182547569274902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10080981254577637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10271906852722168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10196495056152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.10227394104003906 s]
66/162 DONE. [mean time: 0.10199403762817383 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.003976106643676758 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.001994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.004001617431640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0035638809204101562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.00289154052734375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0031003952026367188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0027670860290527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.002862215042114258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0029921531677246094 s]
67/162 DONE. [mean time: 0.003358769416809082 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.004021167755126953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0036301612854003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0036895275115966797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.004986286163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0041086673736572266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.002994537353515625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003935575485229492 s]
68/162 DONE. [mean time: 0.003834056854248047 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0065419673919677734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.007052898406982422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006806612014770508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006993770599365234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006102561950683594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006741523742675781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.007825136184692383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006617069244384766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006943941116333008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006487607955932617 s]
69/162 DONE. [mean time: 0.006811308860778809 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01392984390258789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0164492130279541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014940500259399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01464700698852539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.015891551971435547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014115333557128906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014975309371948242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.015083074569702148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.013964176177978516 s]
70/162 DONE. [mean time: 0.01489572525024414 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.050832271575927734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.048163652420043945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.05286216735839844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.048876047134399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.05086183547973633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.05170750617980957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.04887199401855469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.051711082458496094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.04888176918029785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8AF0> done in 0.05158424377441406 s]
71/162 DONE. [mean time: 0.05043525695800781 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.19222402572631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.18952250480651855 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.19206833839416504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.18886852264404297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.18944239616394043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.19249415397644043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.1932368278503418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.19036245346069336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.19098949432373047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.19008874893188477 s]
72/162 DONE. [mean time: 0.19092974662780762 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0062601566314697266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003086090087890625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0030667781829833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0028450489044189453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0026998519897460938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0029909610748291016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.001995563507080078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.003559589385986328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0029337406158447266 s]
73/162 DONE. [mean time: 0.003243160247802734 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.003831624984741211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0032253265380859375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0032377243041992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.002996206283569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.003368377685546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0032639503479003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0030677318572998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0030663013458251953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7400> done in 0.0030672550201416016 s]
74/162 DONE. [mean time: 0.003211832046508789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.004033088684082031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.004334449768066406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.004996776580810547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.004540920257568359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0047643184661865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.004277706146240234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.003991127014160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0050051212310791016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.00504612922668457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.004381418228149414 s]
75/162 DONE. [mean time: 0.004537105560302734 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009458065032958984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009929180145263672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.008978843688964844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009971857070922852 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010981559753417969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010961294174194336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009063720703125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.008799314498901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009978055953979492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010408878326416016 s]
76/162 DONE. [mean time: 0.009853076934814454 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.02854156494140625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.028738975524902344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.028070449829101562 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.027928590774536133 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.028920888900756836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.026927471160888672 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.028923749923706055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.027924060821533203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.027942180633544922 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.02968740463256836 s]
77/162 DONE. [mean time: 0.028560066223144533 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.11198878288269043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10372543334960938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10609555244445801 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10630393028259277 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.1055290699005127 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10772228240966797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10966730117797852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10535836219787598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10771775245666504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10652709007263184 s]
78/162 DONE. [mean time: 0.10747473239898682 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.004974365234375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.004380941390991211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.0031042098999023438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.003999948501586914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.00298309326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.0029909610748291016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.0034584999084472656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.0031762123107910156 s]
79/162 DONE. [mean time: 0.0035053491592407227 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004368305206298828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003039121627807617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003927707672119141 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.004991292953491211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003358125686645508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003798246383666992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.0029954910278320312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.005986690521240234 s]
80/162 DONE. [mean time: 0.004144096374511718 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.005982875823974609 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.0069921016693115234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.006922006607055664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.0060002803802490234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.00597834587097168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.006390810012817383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.0067555904388427734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.006361246109008789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.005986690521240234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.005557537078857422 s]
81/162 DONE. [mean time: 0.0064914941787719725 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.015726804733276367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.013851165771484375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.015880584716796875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.013964414596557617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.01496577262878418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.015743732452392578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.01444387435913086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.01596546173095703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.01547694206237793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.013969659805297852 s]
82/162 DONE. [mean time: 0.014998841285705566 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.05141782760620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0498814582824707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.05162405967712402 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.04888033866882324 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.05196547508239746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.05254340171813965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.04986691474914551 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.05086350440979004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.04886603355407715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.05273151397705078 s]
83/162 DONE. [mean time: 0.05086405277252197 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19226884841918945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19121384620666504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19158434867858887 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.1906266212463379 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19124507904052734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.1901702880859375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19106292724609375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19126319885253906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.19301080703735352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.1941215991973877 s]
84/162 DONE. [mean time: 0.19175682067871094 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0039882659912109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.004006147384643555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0029740333557128906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0035703182220458984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.003479480743408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0029952526092529297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.002996206283569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00366973876953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0029959678649902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0029900074005126953 s]
85/162 DONE. [mean time: 0.0036658048629760742 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.004049777984619141 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003939628601074219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0039899349212646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003988504409790039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.004843235015869141 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.004000425338745117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.004030942916870117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.003960847854614258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.004681110382080078 s]
86/162 DONE. [mean time: 0.004147529602050781 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008762836456298828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009710073471069336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009696006774902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008870840072631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008160591125488281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008978605270385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008530855178833008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008760213851928711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.007981300354003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.010289430618286133 s]
87/162 DONE. [mean time: 0.008974075317382812 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.02490997314453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.023934364318847656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0249326229095459 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.023934364318847656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.024359941482543945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.024947166442871094 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.02371382713317871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.024637699127197266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.025887489318847656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.02414536476135254 s]
88/162 DONE. [mean time: 0.024640226364135744 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09384655952453613 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09008479118347168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09175872802734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0900721549987793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09185481071472168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09031367301940918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09236383438110352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09123754501342773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0904855728149414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.09273076057434082 s]
89/162 DONE. [mean time: 0.09157330989837646 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.36255884170532227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3616347312927246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3604090213775635 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.36026954650878906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3620314598083496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3603975772857666 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3654458522796631 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3592674732208252 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.36464571952819824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3606679439544678 s]
90/162 DONE. [mean time: 0.3618311405181885 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.006309986114501953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.004290580749511719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.0033266544342041016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.002717256546020508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.0037505626678466797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.0029973983764648438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.003320455551147461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.003991842269897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.009809017181396484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8760> done in 0.0038862228393554688 s]
91/162 DONE. [mean time: 0.004439997673034668 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.00423884391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003450632095336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003180265426635742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0031397342681884766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003599882125854492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0035889148712158203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0034830570220947266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003380298614501953 s]
92/162 DONE. [mean time: 0.0034047365188598633 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0058383941650390625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006476163864135742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006594657897949219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005997896194458008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0065653324127197266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0065233707427978516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005120754241943359 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005924224853515625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005511760711669922 s]
93/162 DONE. [mean time: 0.006153392791748047 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.014922142028808594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.01399850845336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015766620635986328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.014946937561035156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.014478683471679688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.01595449447631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013791561126708984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.014925003051757812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015973329544067383 s]
94/162 DONE. [mean time: 0.015169048309326172 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.05380058288574219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.052965402603149414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.05086374282836914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.053923606872558594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.05088233947753906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.05450105667114258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.05416584014892578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.050818443298339844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.05286121368408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.053856611251831055 s]
95/162 DONE. [mean time: 0.05286388397216797 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20747947692871094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20508480072021484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20307278633117676 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.2037351131439209 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20539379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20357298851013184 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20133233070373535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20409512519836426 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.2055222988128662 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.20282697677612305 s]
96/162 DONE. [mean time: 0.20421156883239747 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.002992868423461914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0031113624572753906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0028100013732910156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0029234886169433594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.002832174301147461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.002965211868286133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0033164024353027344 s]
97/162 DONE. [mean time: 0.0032922506332397463 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.004785060882568359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0042378902435302734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0043637752532958984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.003990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.003998279571533203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0049211978912353516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0036225318908691406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0035867691040039062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.00412440299987793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0039980411529541016 s]
98/162 DONE. [mean time: 0.0041628599166870115 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.009793996810913086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007982969284057617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007913351058959961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.008656740188598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007898807525634766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007981538772583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.00849604606628418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006984233856201172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.008988618850708008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.008963823318481445 s]
99/162 DONE. [mean time: 0.008366012573242187 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.0244753360748291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.025933265686035156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.024507761001586914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.024934768676757812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.026188373565673828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.023946046829223633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.024925947189331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.026927947998046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.023891687393188477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D60> done in 0.02393507957458496 s]
100/162 DONE. [mean time: 0.02506716251373291 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09574127197265625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09302496910095215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09088540077209473 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09360480308532715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09077596664428711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09372735023498535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09175729751586914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09374403953552246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.09079551696777344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F70> done in 0.0935359001159668 s]
101/162 DONE. [mean time: 0.09275925159454346 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.37134623527526855 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3710343837738037 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3682732582092285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3703012466430664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.36919450759887695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.37099123001098633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3670375347137451 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.371474027633667 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.36853933334350586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.3680446147918701 s]
102/162 DONE. [mean time: 0.3697237968444824 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.006138324737548828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.003985166549682617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0029027462005615234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.00322723388671875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.00287628173828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0031681060791015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0028448104858398438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0027608871459960938 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.003990888595581055 s]
103/162 DONE. [mean time: 0.0034888029098510743 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.006093263626098633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.006718635559082031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005003213882446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005970001220703125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0053441524505615234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005300045013427734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0053768157958984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.004476785659790039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.004988193511962891 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.004997968673706055 s]
104/162 DONE. [mean time: 0.0054269075393676754 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.01348733901977539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.013245105743408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.014569997787475586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.011953115463256836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012986421585083008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012981176376342773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.011970996856689453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.013913869857788086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.013167858123779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012808084487915039 s]
105/162 DONE. [mean time: 0.013108396530151367 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.04465603828430176 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.04288887977600098 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.043639183044433594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.046521902084350586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.04262948036193848 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.046064138412475586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.042909860610961914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.043642520904541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.045265913009643555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.04329538345336914 s]
106/162 DONE. [mean time: 0.044251203536987305 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.18347382545471191 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.1715400218963623 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.17517733573913574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.17444944381713867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.17400646209716797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.1724529266357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.1749563217163086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.17440557479858398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.17479443550109863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.17330718040466309 s]
107/162 DONE. [mean time: 0.1748563528060913 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7035505771636963 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7008967399597168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7007954120635986 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7020430564880371 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.6970064640045166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.701662540435791 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7038600444793701 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7021288871765137 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.6989614963531494 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.7000439167022705 s]
108/162 DONE. [mean time: 0.7011970281600952 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0051670074462890625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0030727386474609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0029702186584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.001996755599975586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0032510757446289062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.001996278762817383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.003598928451538086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.003954410552978516 s]
109/162 DONE. [mean time: 0.003199315071105957 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0036172866821289062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0031499862670898438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.003030061721801758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0030298233032226562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0029935836791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0027348995208740234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0030465126037597656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.003202676773071289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0030944347381591797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.003025054931640625 s]
110/162 DONE. [mean time: 0.0030924320220947266 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.005988359451293945 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.005889177322387695 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.004909515380859375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.005426168441772461 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.0043752193450927734 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.003991365432739258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.004683017730712891 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.0051648616790771484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.004547119140625 s]
111/162 DONE. [mean time: 0.004896402359008789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008901119232177734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009341001510620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008847951889038086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.00897836685180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.010777473449707031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008603096008300781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008978605270385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.00949239730834961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008772134780883789 s]
112/162 DONE. [mean time: 0.009366273880004883 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.025900602340698242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.027924060821533203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.026836872100830078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.027605056762695312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02694392204284668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0269315242767334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.028920412063598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02593088150024414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.026485681533813477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02709054946899414 s]
113/162 DONE. [mean time: 0.027256274223327638 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09931445121765137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09981799125671387 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09976339340209961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09964299201965332 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09743189811706543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10084772109985352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10038423538208008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09696102142333984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.1017305850982666 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.09973335266113281 s]
114/162 DONE. [mean time: 0.09956276416778564 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.0039708614349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.004973411560058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.005200386047363281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.0029947757720947266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.003070354461669922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.0029952526092529297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.003988027572631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.003941774368286133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.003591775894165039 s]
115/162 DONE. [mean time: 0.003871583938598633 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003895998001098633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003991842269897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.0029599666595458984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.008472919464111328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.003671407699584961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.0033941268920898438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.0032329559326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.0039904117584228516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC4C0> done in 0.002991914749145508 s]
116/162 DONE. [mean time: 0.003959488868713379 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006992340087890625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.00610661506652832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.005986928939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0069828033447265625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006682634353637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006573915481567383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.005896568298339844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0059871673583984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006314754486083984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006487131118774414 s]
117/162 DONE. [mean time: 0.00640108585357666 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.013942480087280273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.015732288360595703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.014963388442993164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.014961957931518555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.014957189559936523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.013961553573608398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.014961481094360352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.015958547592163086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.014961481094360352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.013971328735351562 s]
118/162 DONE. [mean time: 0.015134787559509278 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04687333106994629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04587841033935547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04687380790710449 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04588007926940918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.045874595642089844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04691886901855469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04686927795410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04587745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.04786992073059082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.0468745231628418 s]
119/162 DONE. [mean time: 0.046678996086120604 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18712496757507324 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18152499198913574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18151497840881348 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18251323699951172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.1825251579284668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18249940872192383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18186402320861816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.18269991874694824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.1826486587524414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.1814885139465332 s]
120/162 DONE. [mean time: 0.18284144401550292 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.005986690521240234 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.003996610641479492 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.003979682922363281 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.003009796142578125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.002991914749145508 s]
121/162 DONE. [mean time: 0.0035904407501220702 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003971576690673828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003009796142578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003992319107055664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003968715667724609 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003989458084106445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.004994630813598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003981113433837891 s]
122/162 DONE. [mean time: 0.0038878202438354494 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009974002838134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009971380233764648 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009974479675292969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009972572326660156 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009974479675292969 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.010970115661621094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.008975028991699219 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.009974241256713867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.00997161865234375 s]
123/162 DONE. [mean time: 0.00997333526611328 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02390432357788086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.025962352752685547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.023911476135253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02592921257019043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.023929834365844727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02495098114013672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02492499351501465 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02492547035217285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.023939847946166992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02693462371826172 s]
124/162 DONE. [mean time: 0.02493131160736084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08776640892028809 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08877038955688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08775758743286133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08975863456726074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08776569366455078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08776664733886719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08876705169677734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08676266670227051 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0877680778503418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0887610912322998 s]
125/162 DONE. [mean time: 0.0882641315460205 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.34908199310302734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.3500516414642334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.3500981330871582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.34903526306152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.3510587215423584 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.34906554222106934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.35008907318115234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.3480546474456787 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.35350990295410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7700> done in 0.34906649589538574 s]
126/162 DONE. [mean time: 0.3500108480453491 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.0035648345947265625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.00481414794921875 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.003983974456787109 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.003990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.002992391586303711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.0029985904693603516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.002985239028930664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.008984088897705078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.0049800872802734375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.0029914379119873047 s]
127/162 DONE. [mean time: 0.004228544235229492 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0039026737213134766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0030057430267333984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029811859130859375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003710031509399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0037767887115478516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.002993345260620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.002991914749145508 s]
128/162 DONE. [mean time: 0.0033336877822875977 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.00498652458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005986928939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.016957521438598633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0059909820556640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.007019758224487305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005986928939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0049860477447509766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.005992412567138672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.004979372024536133 s]
129/162 DONE. [mean time: 0.00698697566986084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.012975931167602539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.014824390411376953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013979673385620117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.012951135635375977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013964176177978516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.014958620071411133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013968944549560547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013966798782348633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013954401016235352 s]
130/162 DONE. [mean time: 0.01405029296875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.04884648323059082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.046880483627319336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.04990959167480469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.04788374900817871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.046864986419677734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.04903006553649902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.047579050064086914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.046877384185791016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.048519134521484375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.04788637161254883 s]
131/162 DONE. [mean time: 0.048227477073669436 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.19248700141906738 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.19052553176879883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.19045615196228027 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.18895578384399414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.1891343593597412 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.18950867652893066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.18808984756469727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.18949317932128906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.19148707389831543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.18900036811828613 s]
132/162 DONE. [mean time: 0.18991379737854003 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.005950212478637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0029897689819335938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0040035247802734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.002977609634399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0039937496185302734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.003972053527832031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.003988981246948242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.002991914749145508 s]
133/162 DONE. [mean time: 0.0037862300872802735 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.004654407501220703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.003991127014160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.003804445266723633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0030252933502197266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.00400996208190918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.003983259201049805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.002979278564453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0039980411529541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.003872394561767578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0036499500274658203 s]
134/162 DONE. [mean time: 0.003796815872192383 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008112668991088867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007548332214355469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009119033813476562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007981061935424805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007997512817382812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007975339889526367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0071642398834228516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007517337799072266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008978843688964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008976459503173828 s]
135/162 DONE. [mean time: 0.008235287666320801 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.022958040237426758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02391648292541504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.022940397262573242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.024935007095336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.022937297821044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.023936033248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.024939298629760742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.022948503494262695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.023919105529785156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.02426457405090332 s]
136/162 DONE. [mean time: 0.023769474029541014 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08876419067382812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.0867769718170166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08975100517272949 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08777141571044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08905959129333496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09075760841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08676838874816895 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08975911140441895 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08777666091918945 s]
137/162 DONE. [mean time: 0.08879287242889404 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.35318875312805176 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3511085510253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3506290912628174 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.35407590866088867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3510608673095703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3507378101348877 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.35207390785217285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3491332530975342 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3509957790374756 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9F70> done in 0.3510723114013672 s]
138/162 DONE. [mean time: 0.3517049551010132 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.004061222076416016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.005002021789550781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.0034973621368408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.003687143325805664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.0028591156005859375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.0027418136596679688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.0029938220977783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.002991914749145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.00397491455078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.0040950775146484375 s]
139/162 DONE. [mean time: 0.0035904407501220702 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.004896640777587891 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.003991603851318359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.00392460823059082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.003996849060058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.005082368850708008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.0039980411529541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.0040547847747802734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.00442194938659668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.0039713382720947266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.003966331481933594 s]
140/162 DONE. [mean time: 0.004330182075500488 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013962030410766602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012966394424438477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012979984283447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013955831527709961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011960506439208984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012965679168701172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012963533401489258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011968374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013974905014038086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.011956214904785156 s]
141/162 DONE. [mean time: 0.01296534538269043 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.040602684020996094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.04238271713256836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0408937931060791 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.039911746978759766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.04387688636779785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.04187750816345215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.04283905029296875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0408930778503418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.04089522361755371 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0441434383392334 s]
142/162 DONE. [mean time: 0.0418316125869751 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.17055463790893555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16654467582702637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16356420516967773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16756391525268555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16373014450073242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16638565063476562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16547489166259766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.1667783260345459 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.16655683517456055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.1645679473876953 s]
143/162 DONE. [mean time: 0.16617212295532227 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6788179874420166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6741573810577393 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6760759353637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6753196716308594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6720967292785645 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6746082305908203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6727418899536133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6756505966186523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6740210056304932 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.6762971878051758 s]
144/162 DONE. [mean time: 0.6750784158706665 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.004987239837646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.002840757369995117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.004297733306884766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0029926300048828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0029914379119873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0029916763305664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.003989219665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0029947757720947266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.002991199493408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.002991914749145508 s]
145/162 DONE. [mean time: 0.0035065412521362305 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0033156871795654297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.003956794738769531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.002994060516357422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.004040241241455078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.003723621368408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0038330554962158203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.003991603851318359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.003190755844116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.003545045852661133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0033385753631591797 s]
146/162 DONE. [mean time: 0.0036931514739990236 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.00799250602722168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.007965326309204102 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.007676362991333008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.007981538772583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.007977724075317383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.0069620609283447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.007972002029418945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.00897836685180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.007098674774169922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008977413177490234 s]
147/162 DONE. [mean time: 0.008060646057128907 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.023871898651123047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.025608062744140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.025040864944458008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.024936437606811523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.023934364318847656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.025723934173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.022942304611206055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.02393937110900879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.024921894073486328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.02388906478881836 s]
148/162 DONE. [mean time: 0.024480819702148438 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09197664260864258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09170222282409668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09309506416320801 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09075927734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09404659271240234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09095954895019531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09180688858032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09275388717651367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.08973479270935059 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.09297037124633789 s]
149/162 DONE. [mean time: 0.09198052883148193 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.3735644817352295 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.3666980266571045 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.36848926544189453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.3698849678039551 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.36813783645629883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.3669402599334717 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.36951398849487305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.36779356002807617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.3675386905670166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.36788010597229004 s]
150/162 DONE. [mean time: 0.3688462257385254 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006544828414916992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029931068420410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003381967544555664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003031492233276367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029511451721191406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003439664840698242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003925800323486328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.002901315689086914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.003047943115234375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0029935836791992188 s]
151/162 DONE. [mean time: 0.0036209821701049805 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.005178689956665039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.005785465240478516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.00409388542175293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.004944324493408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.003990888595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.00394129753112793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.005072355270385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.003924369812011719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.0038993358612060547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.004053354263305664 s]
152/162 DONE. [mean time: 0.004588198661804199 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.01196742057800293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.011655092239379883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.011967182159423828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.011200904846191406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.011970996856689453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.012964010238647461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.011550426483154297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.012611627578735352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.011388301849365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8D00> done in 0.01097416877746582 s]
153/162 DONE. [mean time: 0.011825013160705566 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.042855024337768555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.04186415672302246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.040892601013183594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.04385995864868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.0408940315246582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.04139566421508789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.042519330978393555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.04090523719787598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.04295778274536133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8EB0> done in 0.04107809066772461 s]
154/162 DONE. [mean time: 0.042021965980529784 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.1679668426513672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16753268241882324 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.1679246425628662 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16556358337402344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16974735260009766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16498684883117676 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16756558418273926 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16554617881774902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16767525672912598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.16557860374450684 s]
155/162 DONE. [mean time: 0.16700875759124756 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6909961700439453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6936159133911133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.688406229019165 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6843976974487305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6861205101013184 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6849396228790283 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6878104209899902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6848611831665039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6858832836151123 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.6889908313751221 s]
156/162 DONE. [mean time: 0.6877024412155152 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.005153179168701172 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.005613803863525391 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.003802061080932617 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.003970623016357422 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.0039598941802978516 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.003994941711425781 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.0029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.003992557525634766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.003011465072631836 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.0029685497283935547 s]
157/162 DONE. [mean time: 0.0039459228515625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005987882614135742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008816003799438477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0059833526611328125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005991220474243164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005800962448120117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.006494760513305664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.00599217414855957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.005888223648071289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.006983757019042969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0059854984283447266 s]
158/162 DONE. [mean time: 0.006392383575439453 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.020943880081176758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.019947052001953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.019946813583374023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.020943641662597656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.018962383270263672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.019934654235839844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.01994609832763672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.01994633674621582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE89D0> done in 0.022946596145629883 s]
159/162 DONE. [mean time: 0.020246672630310058 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07679510116577148 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07679605484008789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07581067085266113 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07674145698547363 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07789993286132812 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.0756998062133789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07580161094665527 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07878351211547852 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07683372497558594 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 0.07579922676086426 s]
160/162 DONE. [mean time: 0.07669610977172851 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.32111692428588867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.32113170623779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.3196420669555664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.31868505477905273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.31973695755004883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.3189356327056885 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.3200414180755615 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.31816864013671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.3213996887207031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.320833683013916 s]
161/162 DONE. [mean time: 0.3201687097549438 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3249711990356445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3191843032836914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3235621452331543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3211064338684082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.320373296737671 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3198566436767578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.318713903427124 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3207590579986572 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.3228132724761963 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.322746753692627 s]
162/162 DONE. [mean time: 1.3214087009429931 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION numba_cuda_direct DONE. [time: 105.0823905467987 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION numba_cuda_tiles...
1/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.008271932601928711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.008097410202026367 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.006987094879150391 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.006983280181884766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.008997440338134766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.006969928741455078 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.006130695343017578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.006692171096801758 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.005987644195556641 s]
1/162 DONE. [mean time: 0.007310700416564941 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006038665771484375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006970643997192383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006865501403808594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.00598597526550293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007505655288696289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006983757019042969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006000518798828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006507396697998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006997585296630859 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006006717681884766 s]
2/162 DONE. [mean time: 0.006586241722106934 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006890535354614258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005997180938720703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006984233856201172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006957054138183594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005902528762817383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006687641143798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007915496826171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0063669681549072266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006863117218017578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005990266799926758 s]
3/162 DONE. [mean time: 0.006655502319335938 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.007143497467041016 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.008006095886230469 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.0059871673583984375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.00699615478515625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.0077283382415771484 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.00644683837890625 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.006983280181884766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.007993221282958984 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.006966590881347656 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.0067729949951171875 s]
4/162 DONE. [mean time: 0.007102417945861817 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.0199735164642334 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.01995849609375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.017847537994384766 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.018951892852783203 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.016964435577392578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.0199429988861084 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.01795339584350586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.020104646682739258 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.017969846725463867 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E430> done in 0.0219573974609375 s]
5/162 DONE. [mean time: 0.019361209869384766 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06541728973388672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06335330009460449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0628514289855957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06202983856201172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06382036209106445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06261897087097168 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0651862621307373 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06270718574523926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.06283426284790039 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.063201904296875 s]
6/162 DONE. [mean time: 0.06350021362304688 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010462522506713867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010980367660522461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009970426559448242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010709047317504883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.00997471809387207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009003877639770508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009976387023925781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.008980035781860352 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.008985042572021484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009976387023925781 s]
7/162 DONE. [mean time: 0.010001063346862793 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009990692138671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009956836700439453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009972810745239258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010573148727416992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010222196578979492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.00997614860534668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009544610977172852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009976387023925781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008974552154541016 s]
8/162 DONE. [mean time: 0.009916090965270996 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.008952140808105469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.009644508361816406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.008995532989501953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01052093505859375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.009984970092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.009564876556396484 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.010522127151489258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.008849620819091797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.010092496871948242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.009977340698242188 s]
9/162 DONE. [mean time: 0.009710454940795898 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009974479675292969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.010970354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.011187553405761719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01007986068725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.011097192764282227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009989500045776367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.010492324829101562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.010972023010253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01196742057800293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.010981559753417969 s]
10/162 DONE. [mean time: 0.010871195793151855 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.031842708587646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.029901981353759766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.03207206726074219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.033083200454711914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.029862642288208008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.03405356407165527 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.030921220779418945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.03296661376953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.030722379684448242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9C10> done in 0.03236746788024902 s]
11/162 DONE. [mean time: 0.031879091262817384 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11565494537353516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11712861061096191 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11436080932617188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11640143394470215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11423778533935547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11667418479919434 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11470270156860352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.1159207820892334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11879348754882812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.11399459838867188 s]
12/162 DONE. [mean time: 0.1159902811050415 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0174863338470459 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015962600708007812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01548457145690918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015969276428222656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015955448150634766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01595020294189453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01597309112548828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01591801643371582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015960216522216797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01596546173095703 s]
13/162 DONE. [mean time: 0.01606252193450928 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015966176986694336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.01564645767211914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015964984893798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015805959701538086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015988588333129883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015351295471191406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.016135454177856445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015969514846801758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.015429019927978516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.01496124267578125 s]
14/162 DONE. [mean time: 0.016025543212890625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.016942977905273438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.015951871871948242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.016416311264038086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.015819311141967773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.015960693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.016088485717773438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.01496124267578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.015956401824951172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.018948793411254883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9A90> done in 0.015958547592163086 s]
15/162 DONE. [mean time: 0.016400361061096193 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.017480850219726562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.01696610450744629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.01694464683532715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.019766807556152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016990184783935547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.015962600708007812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.018419981002807617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.01638054847717285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.01795673370361328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016952991485595703 s]
16/162 DONE. [mean time: 0.017382144927978516 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.06792974472045898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.056613922119140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.058908939361572266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05886697769165039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05684971809387207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05685162544250488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05986189842224121 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05993509292602539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05585360527038574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9340> done in 0.05973243713378906 s]
17/162 DONE. [mean time: 0.05914039611816406 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22061610221862793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22124671936035156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22028851509094238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22065401077270508 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22011399269104004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.2209477424621582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22191452980041504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.2238144874572754 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.21930980682373047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.22004246711730957 s]
18/162 DONE. [mean time: 0.22089483737945556 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010879755020141602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010801315307617188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010385751724243164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010100364685058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009985923767089844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009968280792236328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.01065683364868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009989261627197266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009021520614624023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009976387023925781 s]
19/162 DONE. [mean time: 0.010176539421081543 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009972095489501953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009423971176147461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.00997614860534668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009971857070922852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.00999140739440918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009981632232666016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008950471878051758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.00999307632446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009998798370361328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009633064270019531 s]
20/162 DONE. [mean time: 0.009888982772827149 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.00894474983215332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010039806365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009974956512451172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010126590728759766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009976387023925781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008976936340332031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010092020034790039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009625911712646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010549068450927734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009470462799072266 s]
21/162 DONE. [mean time: 0.009877991676330567 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009940147399902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.011439085006713867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.010263204574584961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.010331392288208008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.011013269424438477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009975194931030273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.010692596435546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.011330366134643555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009975910186767578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.011966466903686523 s]
22/162 DONE. [mean time: 0.01079258918762207 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0318446159362793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0335536003112793 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.03059697151184082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.03287768363952637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.03162240982055664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.03277420997619629 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.030797719955444336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.03382062911987305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.030933141708374023 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.033992767333984375 s]
23/162 DONE. [mean time: 0.03228137493133545 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11869120597839355 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11966753005981445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11508846282958984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11798501014709473 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.1148831844329834 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11744260787963867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.1185457706451416 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11920595169067383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11704778671264648 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.11655640602111816 s]
24/162 DONE. [mean time: 0.11771442890167236 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016954421997070312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016964197158813477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.01696157455444336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016951322555541992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016970157623291016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.015928983688354492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.01696038246154785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.014953851699829102 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.016955852508544922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.015957355499267578 s]
25/162 DONE. [mean time: 0.01655580997467041 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.016397953033447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.016976594924926758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.015938758850097656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.017595291137695312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.016431093215942383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.015970230102539062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.016037940979003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01596689224243164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.015902280807495117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.015974760055541992 s]
26/162 DONE. [mean time: 0.01631917953491211 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.016466617584228516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.01614212989807129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.014980554580688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.016954660415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.014965534210205078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.01595139503479004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.016953706741333008 s]
27/162 DONE. [mean time: 0.016028690338134765 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01795339584350586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.018067598342895508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01897740364074707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01717853546142578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01696610450744629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.018131256103515625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01596546173095703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.017951488494873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.018853425979614258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01695728302001953 s]
28/162 DONE. [mean time: 0.0177001953125 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05960488319396973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05766725540161133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05580949783325195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.06058073043823242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05784797668457031 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05636143684387207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.059118032455444336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05985403060913086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05905413627624512 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05582594871520996 s]
29/162 DONE. [mean time: 0.05817239284515381 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21952533721923828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21822142601013184 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21757268905639648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.22030901908874512 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21624541282653809 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21901273727416992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21999001502990723 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21882057189941406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21823978424072266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.21583271026611328 s]
30/162 DONE. [mean time: 0.2184764862060547 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.027793169021606445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.028934478759765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.026926040649414062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02793145179748535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02846050262451172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02803969383239746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.028084993362426758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.027929306030273438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.027695655822753906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.027928590774536133 s]
31/162 DONE. [mean time: 0.02797238826751709 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.027948856353759766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.027924299240112305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.026976585388183594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.02836918830871582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.026942729949951172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.02791762351989746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.02793121337890625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.027908802032470703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.027933835983276367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.027860641479492188 s]
32/162 DONE. [mean time: 0.027871370315551758 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027904510498046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.02804422378540039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027936697006225586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027791738510131836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027927875518798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027925491333007812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027925491333007812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.0279238224029541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.02773737907409668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.027469873428344727 s]
33/162 DONE. [mean time: 0.027858710289001463 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.030198097229003906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.029665231704711914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.031000137329101562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.029157638549804688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.028925180435180664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03292226791381836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.029705286026000977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.028918027877807617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03144240379333496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.028925418853759766 s]
34/162 DONE. [mean time: 0.03008596897125244 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.11055922508239746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.10963225364685059 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.10871291160583496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.10929155349731445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.10802650451660156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.10871052742004395 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.1067197322845459 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.11090350151062012 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.10977005958557129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.1110227108001709 s]
35/162 DONE. [mean time: 0.10943338871002198 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.421703577041626 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.4194977283477783 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.4224221706390381 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.41606903076171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.4208831787109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.41829514503479004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.4228212833404541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.42186903953552246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.41764402389526367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.41964244842529297 s]
36/162 DONE. [mean time: 0.4200847625732422 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.015569210052490234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.015958309173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.01595902442932129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.015960216522216797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.016007423400878906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.015975236892700195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.016582012176513672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.016969919204711914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.01595926284790039 s]
37/162 DONE. [mean time: 0.016189765930175782 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.016814231872558594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01596355438232422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.015959978103637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.015863418579101562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01596856117248535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0160825252532959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.016843557357788086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01596999168395996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.016382217407226562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0159604549407959 s]
38/162 DONE. [mean time: 0.01618084907531738 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.016953706741333008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.015957117080688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.016971588134765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.01594066619873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.01688861846923828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.016559123992919922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.016036033630371094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.016271114349365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.015035152435302734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.017991065979003906 s]
39/162 DONE. [mean time: 0.016460418701171875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.018948078155517578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.017095088958740234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.017511844635009766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.016945362091064453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.016953229904174805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.017954349517822266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.016759634017944336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.01596808433532715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.017946958541870117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.0169527530670166 s]
40/162 DONE. [mean time: 0.017403578758239745 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.06080198287963867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05835080146789551 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05854225158691406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.06212592124938965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05872154235839844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05883979797363281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05684781074523926 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.06186985969543457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05877280235290527 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.05702519416809082 s]
41/162 DONE. [mean time: 0.059189796447753906 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22961997985839844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22346162796020508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22391724586486816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22197580337524414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.2230052947998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22493863105773926 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22163987159729004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22394347190856934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22285699844360352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.22496604919433594 s]
42/162 DONE. [mean time: 0.22413103580474852 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.029567480087280273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.02750539779663086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.02698826789855957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.02792835235595703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.02842569351196289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.027936220169067383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.027920007705688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.028779029846191406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.027949094772338867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.028930187225341797 s]
43/162 DONE. [mean time: 0.028192973136901854 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.026928424835205078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02692699432373047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02697467803955078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.027927875518798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.027925729751586914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.027856826782226562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02792811393737793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.029029369354248047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0279386043548584 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.028347015380859375 s]
44/162 DONE. [mean time: 0.027977848052978517 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.027901172637939453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.027916908264160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.028443574905395508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.026930809020996094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02760767936706543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.027926921844482422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.028462648391723633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.026967287063598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02830982208251953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.026946067810058594 s]
45/162 DONE. [mean time: 0.02783956527709961 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.03189277648925781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.029930830001831055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.028918027877807617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.029920578002929688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.029919862747192383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.029918670654296875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.030922651290893555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.02998065948486328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.029938459396362305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.030963659286499023 s]
46/162 DONE. [mean time: 0.0303295373916626 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.12233257293701172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.1077117919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.10870981216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.1087336540222168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.1111290454864502 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.1102597713470459 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.11068892478942871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.11069202423095703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.11091399192810059 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.11082863807678223 s]
47/162 DONE. [mean time: 0.11139998435974122 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.427656888961792 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.4261326789855957 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.42311596870422363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.42088842391967773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.4232194423675537 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.4213278293609619 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.4231224060058594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.4224972724914551 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.428480863571167 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.4193532466888428 s]
48/162 DONE. [mean time: 0.4236799955368042 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.05410933494567871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.05086541175842285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.051714420318603516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.051871299743652344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.051873207092285156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.05184292793273926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.051866769790649414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0508570671081543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.05236411094665527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.051856279373168945 s]
49/162 DONE. [mean time: 0.05202193260192871 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.051859140396118164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05286812782287598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.051853179931640625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05186152458190918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05186295509338379 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05086326599121094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05186176300048828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.050862789154052734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05186963081359863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05186128616333008 s]
50/162 DONE. [mean time: 0.051961755752563475 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.050992727279663086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05086684226989746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05186009407043457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05086541175842285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05087709426879883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.051865577697753906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.04986119270324707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05278491973876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05086684226989746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.05085945129394531 s]
51/162 DONE. [mean time: 0.05117001533508301 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.05839037895202637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.054857730865478516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.05946159362792969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.05657958984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.057595014572143555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0571141242980957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0548551082611084 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.056848764419555664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.05486655235290527 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.05743288993835449 s]
52/162 DONE. [mean time: 0.05680017471313477 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20841026306152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20748519897460938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20839190483093262 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.2097620964050293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20872879028320312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20958352088928223 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.2073521614074707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20952272415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.21144986152648926 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.20833969116210938 s]
53/162 DONE. [mean time: 0.20900473594665528 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8242907524108887 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8198540210723877 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8192987442016602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8197200298309326 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8146955966949463 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8160538673400879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.819159746170044 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8160932064056396 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.818185567855835 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.8178274631500244 s]
54/162 DONE. [mean time: 0.8187213659286499 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.010147571563720703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00865626335144043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007320404052734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.008992671966552734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007963180541992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007980108261108398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00844264030456543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007555961608886719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007803916931152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007760524749755859 s]
55/162 DONE. [mean time: 0.008262324333190917 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008511543273925781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007745265960693359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007147073745727539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007729291915893555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008008241653442383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006849765777587891 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007981538772583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007420539855957031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006997346878051758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0069811344146728516 s]
56/162 DONE. [mean time: 0.007635498046875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.008278846740722656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007076263427734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.006985187530517578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007995843887329102 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.006964206695556641 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007976055145263672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0070841312408447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.008980512619018555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007977008819580078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0070307254791259766 s]
57/162 DONE. [mean time: 0.007634878158569336 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.008988380432128906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.00798177719116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.006982326507568359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.008829116821289062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.007983684539794922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.007984638214111328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.007837772369384766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.006983757019042969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.009044170379638672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.00868535041809082 s]
58/162 DONE. [mean time: 0.008130097389221191 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.021909236907958984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023871183395385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023094654083251953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.020946741104125977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02365851402282715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.020564556121826172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023939132690429688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02094268798828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02294921875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023392438888549805 s]
59/162 DONE. [mean time: 0.02273256778717041 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07700061798095703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07874345779418945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07679629325866699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07797479629516602 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07653474807739258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07680082321166992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.0782310962677002 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07840180397033691 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07820940017700195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.07688045501708984 s]
60/162 DONE. [mean time: 0.07755734920501708 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.01264047622680664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.011956453323364258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.01097416877746582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.010966062545776367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.01196908950805664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.010970830917358398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.010969161987304688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.010714530944824219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.011970758438110352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.011970281600952148 s]
61/162 DONE. [mean time: 0.011510181427001952 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010968923568725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.01102447509765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010973930358886719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010971307754516602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010975122451782227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.011966943740844727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.011963605880737305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010971784591674805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.01096963882446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.012030601501464844 s]
62/162 DONE. [mean time: 0.011281633377075195 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.011966228485107422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.010974645614624023 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.011965513229370117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.010972976684570312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.011966943740844727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.011973142623901367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01093912124633789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0109710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01098489761352539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.011956214904785156 s]
63/162 DONE. [mean time: 0.011569452285766602 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013182640075683594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.01094961166381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.011993169784545898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.012292623519897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.011953592300415039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.011452436447143555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013965368270874023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.011997461318969727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.012012481689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.012814760208129883 s]
64/162 DONE. [mean time: 0.012361407279968262 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03790163993835449 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03896927833557129 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03691434860229492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03987479209899902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.038897037506103516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.041889190673828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03963923454284668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03784346580505371 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03893637657165527 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.037899017333984375 s]
65/162 DONE. [mean time: 0.0390763521194458 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.15317344665527344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14062070846557617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14481401443481445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.1425917148590088 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14331984519958496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14059019088745117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14251327514648438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14642119407653809 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.14063143730163574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3DC0> done in 0.1435699462890625 s]
66/162 DONE. [mean time: 0.14382457733154297 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.018985986709594727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01902914047241211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.019869089126586914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.019051790237426758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.018950223922729492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.019768238067626953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.019336938858032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.019353628158569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01925802230834961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.019849777221679688 s]
67/162 DONE. [mean time: 0.01954479217529297 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.019805192947387695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.01907038688659668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.01947808265686035 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.018950939178466797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.018950700759887695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.018949031829833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.017954349517822266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.019053936004638672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.01895284652709961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.018924713134765625 s]
68/162 DONE. [mean time: 0.01900901794433594 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.01891779899597168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.019945859909057617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.01953411102294922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.019570112228393555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0199587345123291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.018937349319458008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.019954204559326172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.019121885299682617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.018952131271362305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.018964767456054688 s]
69/162 DONE. [mean time: 0.019583725929260255 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.020908117294311523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02081465721130371 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.020962238311767578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019937515258789062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.021214962005615234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.01994943618774414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.020782470703125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.020929813385009766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019945859909057617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02097177505493164 s]
70/162 DONE. [mean time: 0.020839619636535644 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07099008560180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0718083381652832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07176065444946289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06971383094787598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0734248161315918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07168865203857422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06988286972045898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07245922088623047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07239937782287598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07126617431640625 s]
71/162 DONE. [mean time: 0.07153940200805664 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2731208801269531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2754223346710205 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2732095718383789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.27269601821899414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.27624082565307617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2738661766052246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.271028995513916 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2730581760406494 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2738070487976074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2731599807739258 s]
72/162 DONE. [mean time: 0.27386233806610105 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.014477252960205078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.011766672134399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.012067794799804688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.010971784591674805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.011454343795776367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.011980533599853516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.01192617416381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.011175394058227539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.011741876602172852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F10> done in 0.012283086776733398 s]
73/162 DONE. [mean time: 0.012182998657226562 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012086153030395508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.010982513427734375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.011856555938720703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012344598770141602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.01097416877746582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012964963912963867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.011797189712524414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.010432720184326172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.01125335693359375 s]
74/162 DONE. [mean time: 0.011665964126586914 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011546611785888672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011861324310302734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010972023010253906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010988473892211914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011690616607666016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010973453521728516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011968374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011989593505859375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011949539184570312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010972261428833008 s]
75/162 DONE. [mean time: 0.011591172218322754 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011944770812988281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011966466903686523 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.01172637939453125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012985944747924805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011507749557495117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.013109922409057617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.010980367660522461 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.011974334716796875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012277364730834961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012199640274047852 s]
76/162 DONE. [mean time: 0.012268805503845214 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.03986215591430664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.037900686264038086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.03989696502685547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.03789997100830078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.03993487358093262 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0378727912902832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.03984355926513672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.037435293197631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0408933162689209 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.03789782524108887 s]
77/162 DONE. [mean time: 0.03904266357421875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.15050911903381348 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14356160163879395 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14599967002868652 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.1436161994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14561080932617188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14376187324523926 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14671564102172852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14290928840637207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.1475663185119629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.14396381378173828 s]
78/162 DONE. [mean time: 0.1455214023590088 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.019139528274536133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.020479202270507812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.019526958465576172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.019351720809936523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.018950462341308594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.018950223922729492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.019948959350585938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.018558502197265625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.017951488494873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.018950223922729492 s]
79/162 DONE. [mean time: 0.01928074359893799 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.018958568572998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.018955707550048828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01894068717956543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.017959117889404297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01795196533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01895904541015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.018863677978515625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.018951892852783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01795220375061035 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.017968177795410156 s]
80/162 DONE. [mean time: 0.01884467601776123 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01991105079650879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01894831657409668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.019951581954956055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01989603042602539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.018833160400390625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.018960237503051758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.019980430603027344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01891613006591797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.020975589752197266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0189363956451416 s]
81/162 DONE. [mean time: 0.019530892372131348 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.020290374755859375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.020830631256103516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.020029306411743164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.020489215850830078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02094554901123047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.020945310592651367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02095627784729004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.020948171615600586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.019928932189941406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02210712432861328 s]
82/162 DONE. [mean time: 0.02074708938598633 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.07077193260192871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0737905502319336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.07181072235107422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06971359252929688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.07279396057128906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.07181525230407715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.07180213928222656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06982755661010742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0728902816772461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.07215094566345215 s]
83/162 DONE. [mean time: 0.07183670997619629 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.2753438949584961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.26990389823913574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.2732527256011963 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.2723827362060547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.2751882076263428 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.271953821182251 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.275554895401001 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.26785922050476074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.2712137699127197 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.2723555564880371 s]
84/162 DONE. [mean time: 0.2725998878479004 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.03343701362609863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.034659624099731445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.03391385078430176 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.033901214599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.033910512924194336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.03384280204772949 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.03391075134277344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.03460836410522461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.033794403076171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.033499717712402344 s]
85/162 DONE. [mean time: 0.03394782543182373 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0337824821472168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.03276801109313965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.03391313552856445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.033921241760253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.032851457595825195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.03383517265319824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.033911943435668945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.03291606903076172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.03291153907775879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.03391098976135254 s]
86/162 DONE. [mean time: 0.03357143402099609 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03387594223022461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03390860557556152 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.033910274505615234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03480839729309082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03391265869140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03399229049682617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.035040855407714844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03391242027282715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03590869903564453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.03331136703491211 s]
87/162 DONE. [mean time: 0.034559202194213864 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03579115867614746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0369260311126709 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03491067886352539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.036273956298828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03592061996459961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.035507917404174805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03591442108154297 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.036827802658081055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.035915374755859375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03788924217224121 s]
88/162 DONE. [mean time: 0.03628835678100586 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.133772611618042 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13641786575317383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.1352217197418213 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13590550422668457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13582539558410645 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13552284240722656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13607144355773926 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13441753387451172 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.13514971733093262 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.1356518268585205 s]
89/162 DONE. [mean time: 0.13539564609527588 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5282895565032959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5278689861297607 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5251162052154541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5286352634429932 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5266659259796143 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5300521850585938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5259501934051514 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5285263061523438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.5258285999298096 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.524968147277832 s]
90/162 DONE. [mean time: 0.5272958517074585 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.020015478134155273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.019772768020629883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.018804073333740234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.018965721130371094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.01987743377685547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.01940131187438965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.018587589263916016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.018985271453857422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.01815485954284668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.01853799819946289 s]
91/162 DONE. [mean time: 0.01931033134460449 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.018918991088867188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.018949031829833984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.019949674606323242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.018962383270263672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.019941091537475586 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01894402503967285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.018955230712890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.019647598266601562 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01894855499267578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01894974708557129 s]
92/162 DONE. [mean time: 0.019216632843017577 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.019263029098510742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.019041776657104492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.019953489303588867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.0195767879486084 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.018988609313964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.019678831100463867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.019948959350585938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.018950700759887695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.019171714782714844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3E80> done in 0.020946264266967773 s]
93/162 DONE. [mean time: 0.019852590560913087 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.02091503143310547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.02126026153564453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.019953250885009766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.019952058792114258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.021501541137695312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.01995110511779785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.020943164825439453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.020929813385009766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.019946575164794922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.02065563201904297 s]
94/162 DONE. [mean time: 0.02060084342956543 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07178282737731934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07380247116088867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07420063018798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07249784469604492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07088232040405273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07477021217346191 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07282471656799316 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07082962989807129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.0747838020324707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.07555294036865234 s]
95/162 DONE. [mean time: 0.07319273948669433 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.3036613464355469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.278977632522583 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.27875185012817383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.2824058532714844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.2780482769012451 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.27722787857055664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.27649593353271484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.2769358158111572 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.2816758155822754 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1FA0> done in 0.279508113861084 s]
96/162 DONE. [mean time: 0.281569766998291 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03474307060241699 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03392338752746582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03558707237243652 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.034226417541503906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.034781694412231445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.033913373947143555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03390836715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.033908843994140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03493046760559082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03388571739196777 s]
97/162 DONE. [mean time: 0.0344806432723999 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03391885757446289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03397345542907715 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.034116268157958984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.034255266189575195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03357505798339844 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03391528129577637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03391695022583008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03390622138977051 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03478646278381348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.03361701965332031 s]
98/162 DONE. [mean time: 0.03409762382507324 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03586840629577637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03393697738647461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03292584419250488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03390932083129883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03491663932800293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.0337069034576416 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03475689888000488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03490781784057617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03389692306518555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03512239456176758 s]
99/162 DONE. [mean time: 0.034693026542663576 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03686809539794922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03549480438232422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03699660301208496 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.035115718841552734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03571009635925293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03820085525512695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.03590726852416992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0369107723236084 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.035897254943847656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.035901546478271484 s]
100/162 DONE. [mean time: 0.036400341987609865 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13659191131591797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1381988525390625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13811016082763672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13622212409973145 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13443279266357422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13674163818359375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1378622055053711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13562965393066406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13267040252685547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.13688063621520996 s]
101/162 DONE. [mean time: 0.13653719425201416 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5359899997711182 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5291759967803955 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5325212478637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5325098037719727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5321848392486572 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.536440372467041 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5278663635253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.531463623046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5272867679595947 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.5324869155883789 s]
102/162 DONE. [mean time: 0.5317925930023193 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06245088577270508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06464028358459473 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06383228302001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06296563148498535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06383180618286133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06283164024353027 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06280350685119629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06304931640625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06283354759216309 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.06383037567138672 s]
103/162 DONE. [mean time: 0.06340668201446534 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0638277530670166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06284713745117188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06381583213806152 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06303286552429199 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0628199577331543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06384062767028809 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06282472610473633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06336855888366699 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.06302547454833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.062467336654663086 s]
104/162 DONE. [mean time: 0.06338746547698974 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06380319595336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06581854820251465 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06420326232910156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06483173370361328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0638277530670166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06383419036865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06489777565002441 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06383109092712402 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06383728981018066 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06447458267211914 s]
105/162 DONE. [mean time: 0.06453421115875244 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06781554222106934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0695352554321289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06626677513122559 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06983470916748047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06721949577331543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.07000970840454102 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06940865516662598 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06752657890319824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0688176155090332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.06682586669921875 s]
106/162 DONE. [mean time: 0.06842541694641113 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.2622983455657959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.2603030204772949 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.26053833961486816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.2635459899902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.261960506439209 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.2593080997467041 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.26059603691101074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.261141300201416 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.2619490623474121 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.2617478370666504 s]
107/162 DONE. [mean time: 0.2613388538360596 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0378458499908447 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0310842990875244 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0312283039093018 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0318777561187744 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.028825044631958 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0298864841461182 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.030757188796997 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0304722785949707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.0329866409301758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 1.029658555984497 s]
108/162 DONE. [mean time: 1.0315660238265991 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.010379314422607422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.00998830795288086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008974552154541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008973836898803711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008976936340332031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009772300720214844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008985519409179688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009841203689575195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008826494216918945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.00895237922668457 s]
109/162 DONE. [mean time: 0.009465861320495605 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009975433349609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009311199188232422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009430885314941406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009345531463623047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009725570678710938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.008176565170288086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009976863861083984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009114265441894531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.00900578498840332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.008808135986328125 s]
110/162 DONE. [mean time: 0.009287023544311523 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.009863615036010742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008955240249633789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.00897836685180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008921384811401367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008980274200439453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.00902867317199707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008977413177490234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008516311645507812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008691787719726562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008976221084594727 s]
111/162 DONE. [mean time: 0.00898892879486084 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008957862854003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008971452713012695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008970499038696289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.00998997688293457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010700464248657227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008978605270385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.009565591812133789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.00928187370300293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008252859115600586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008983135223388672 s]
112/162 DONE. [mean time: 0.009364604949951172 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.028145313262939453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.026921510696411133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.029078960418701172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.029073238372802734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.026929616928100586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.03020453453063965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.025932788848876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.028930187225341797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.027033090591430664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.028925657272338867 s]
113/162 DONE. [mean time: 0.028220224380493163 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.10809183120727539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09856939315795898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09717655181884766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09736967086791992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09766840934753418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09791326522827148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09730911254882812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.10002970695495605 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09574174880981445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4D30> done in 0.09514188766479492 s]
114/162 DONE. [mean time: 0.09850115776062011 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.014301061630249023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013965606689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013978004455566406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.014945030212402344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012978076934814453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012965679168701172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.013962030410766602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.012965679168701172 s]
115/162 DONE. [mean time: 0.014096498489379883 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.013962745666503906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.013973236083984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01395106315612793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01298069953918457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.013946533203125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.014961004257202148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.013962984085083008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.013962268829345703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.014960050582885742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.013196468353271484 s]
116/162 DONE. [mean time: 0.014085531234741211 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013932228088378906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.015269994735717773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013981342315673828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013945341110229492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.01595902442932129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.014309167861938477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013969898223876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.013977766036987305 s]
117/162 DONE. [mean time: 0.014526033401489257 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.014924287796020508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.01397252082824707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.014960289001464844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.013969898223876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.014961481094360352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.015387535095214844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.014962434768676758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.016887187957763672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.013965606689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.014971256256103516 s]
118/162 DONE. [mean time: 0.014994931221008301 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.0494997501373291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.04775547981262207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.05069851875305176 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.048302650451660156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.04986929893493652 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.04993867874145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.04838824272155762 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.050306081771850586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.04833531379699707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7850> done in 0.04979705810546875 s]
119/162 DONE. [mean time: 0.04928910732269287 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18369817733764648 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18332409858703613 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18355536460876465 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18378424644470215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18251633644104004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.1828298568725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18482017517089844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18157052993774414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.1857903003692627 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.18178081512451172 s]
120/162 DONE. [mean time: 0.18356807231903077 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.026427745819091797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.02405548095703125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.023938894271850586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.023935794830322266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.024148941040039062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0249483585357666 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.023928403854370117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.026086091995239258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.024626493453979492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.024935245513916016 s]
121/162 DONE. [mean time: 0.024703145027160645 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.02392435073852539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0257265567779541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.024634361267089844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.024970531463623047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.02493739128112793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.02479100227355957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.02397632598876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.025279521942138672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.02393960952758789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.025963544845581055 s]
122/162 DONE. [mean time: 0.024814319610595704 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.024912118911743164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.024923086166381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.025937557220458984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02394700050354004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.024915695190429688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.026035070419311523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.023992061614990234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.024934768676757812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.025824546813964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02388763427734375 s]
123/162 DONE. [mean time: 0.024930953979492188 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.026671886444091797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.025739192962646484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.025614023208618164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.025940895080566406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.02492046356201172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.02543044090270996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.025933265686035156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.025933027267456055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.02493119239807129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.02702784538269043 s]
124/162 DONE. [mean time: 0.02601447105407715 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.09343481063842773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.0897524356842041 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.09321999549865723 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.09195113182067871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.08976316452026367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.09275150299072266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.0936594009399414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.09185004234313965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.08976364135742188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.09275102615356445 s]
125/162 DONE. [mean time: 0.09209356307983399 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.35719847679138184 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.35742759704589844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.3595898151397705 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.3559746742248535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.35578298568725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.35724449157714844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.3575301170349121 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.3596324920654297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.356292724609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.355496883392334 s]
126/162 DONE. [mean time: 0.35721702575683595 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.015215396881103516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.01396632194519043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.013901472091674805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.012984037399291992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.013949155807495117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.014538764953613281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.013978958129882812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.013948202133178711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.013689756393432617 s]
127/162 DONE. [mean time: 0.014113545417785645 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013973236083984375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013963460922241211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.012983560562133789 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.01418757438659668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.012967586517333984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013961553573608398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013978958129882812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013963937759399414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013956069946289062 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.013965845108032227 s]
128/162 DONE. [mean time: 0.013988757133483886 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.014082670211791992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.012979269027709961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.013962030410766602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01496124267578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01497197151184082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.013950824737548828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.015090227127075195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.013962984085083008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.013966083526611328 s]
129/162 DONE. [mean time: 0.014387297630310058 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01494455337524414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.016083240509033203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.013969182968139648 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.014955997467041016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.014670133590698242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.013965129852294922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.015781402587890625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.013944625854492188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.014881610870361328 s]
130/162 DONE. [mean time: 0.0149153470993042 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04984426498413086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.048799991607666016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04793906211853027 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.05003690719604492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04795479774475098 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04986929893493652 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04820561408996582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04954361915588379 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.04715442657470703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.05086851119995117 s]
131/162 DONE. [mean time: 0.049492692947387694 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18732833862304688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18761444091796875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18535375595092773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18592333793640137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1840531826019287 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1884005069732666 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18564701080322266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1871497631072998 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18483877182006836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.18351149559020996 s]
132/162 DONE. [mean time: 0.18618648052215575 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02614617347717285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02393960952758789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.024893760681152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02411031723022461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02393937110900879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.023935556411743164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02448725700378418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.023937463760375977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.023946523666381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.023937463760375977 s]
133/162 DONE. [mean time: 0.024327349662780762 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023682594299316406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023937463760375977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023761749267578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023936748504638672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.02451324462890625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023938417434692383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.02437138557434082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.02394700050354004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023936748504638672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.023944854736328125 s]
134/162 DONE. [mean time: 0.024196887016296388 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.02475714683532715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.02392864227294922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.025089502334594727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.02460646629333496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.024451255798339844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.024942874908447266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.024925947189331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.025930166244506836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.023935794830322266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.0249330997467041 s]
135/162 DONE. [mean time: 0.02475008964538574 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025913476943969727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024933338165283203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024933338165283203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025949716567993164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024952173233032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.027907133102416992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025928974151611328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025943756103515625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.026666879653930664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025934934616088867 s]
136/162 DONE. [mean time: 0.02610325813293457 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09338021278381348 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.08977365493774414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09373807907104492 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09370565414428711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09175539016723633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09075784683227539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09408354759216309 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09273624420166016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09142923355102539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0907750129699707 s]
137/162 DONE. [mean time: 0.09221348762512208 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.3564119338989258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.35318756103515625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.35543298721313477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.35423755645751953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.3550300598144531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.3561997413635254 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.35651206970214844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.3534994125366211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.35385775566101074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7B50> done in 0.352766752243042 s]
138/162 DONE. [mean time: 0.35481307506561277 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04577898979187012 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04390883445739746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04388546943664551 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04491615295410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04391074180603027 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04488396644592285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04392504692077637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04398298263549805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04488253593444824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.04388260841369629 s]
139/162 DONE. [mean time: 0.044395732879638675 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04384779930114746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.043122291564941406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.043897390365600586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04372382164001465 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.043886423110961914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0438997745513916 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.044957637786865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04352116584777832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0449373722076416 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.043894290924072266 s]
140/162 DONE. [mean time: 0.04416682720184326 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04484391212463379 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04588031768798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.046463727951049805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04461812973022461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04651308059692383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04488825798034668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04541754722595215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.045030832290649414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04450798034667969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04522228240966797 s]
141/162 DONE. [mean time: 0.04533860683441162 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.04802536964416504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.045885562896728516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.04655575752258301 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.04760885238647461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.045481204986572266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.047678470611572266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.04488420486450195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.04614567756652832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0474095344543457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.0455784797668457 s]
142/162 DONE. [mean time: 0.046626162528991696 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17742252349853516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.1866610050201416 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17508935928344727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17652583122253418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17550134658813477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.1745598316192627 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17650389671325684 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17730450630187988 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17737555503845215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7A90> done in 0.17982983589172363 s]
143/162 DONE. [mean time: 0.17767736911773682 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6971290111541748 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6933720111846924 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6943235397338867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6909704208374023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6960000991821289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6901547908782959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6962463855743408 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6917452812194824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6953945159912109 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.6946213245391846 s]
144/162 DONE. [mean time: 0.69399573802948 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025368213653564453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023943662643432617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023407697677612305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023937702178955078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02408313751220703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024730443954467773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02434253692626953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023939132690429688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02493596076965332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023876667022705078 s]
145/162 DONE. [mean time: 0.024356555938720704 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.025272846221923828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02410888671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.023938894271850586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02493429183959961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.025928258895874023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.024941205978393555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.025924205780029297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02393627166748047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.02494359016418457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.024921655654907227 s]
146/162 DONE. [mean time: 0.024885010719299317 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.024933576583862305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.024931907653808594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.024054288864135742 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.023933887481689453 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.025401830673217773 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.024935007095336914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0258638858795166 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.02488875389099121 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.023949623107910156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.026172876358032227 s]
147/162 DONE. [mean time: 0.025205230712890624 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.026932716369628906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.025937795639038086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.027376890182495117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.024940013885498047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02593374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02792525291442871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02649831771850586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.026096343994140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.02827739715576172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.025933027267456055 s]
148/162 DONE. [mean time: 0.0267841100692749 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09576892852783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09382796287536621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09178543090820312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0937645435333252 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0928657054901123 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09067058563232422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09480476379394531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09497833251953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09330224990844727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.09175729751586914 s]
149/162 DONE. [mean time: 0.0933525800704956 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.3653831481933594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.3590514659881592 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.36415743827819824 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.36106109619140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.3623661994934082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.360135555267334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.3629167079925537 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.36133551597595215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.36438894271850586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0C10> done in 0.36153388023376465 s]
150/162 DONE. [mean time: 0.36243667602539065 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.046605587005615234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04430866241455078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04489326477050781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04486823081970215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04503822326660156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04392266273498535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04489874839782715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04386591911315918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.04371190071105957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.045888662338256836 s]
151/162 DONE. [mean time: 0.044899916648864745 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.043848514556884766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04473137855529785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.043586015701293945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04489874839782715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0442502498626709 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04389691352844238 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04389142990112305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04496169090270996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.042902231216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.04488325119018555 s]
152/162 DONE. [mean time: 0.04461019039154053 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.044797420501708984 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.04495382308959961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.045500993728637695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.04514169692993164 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.044891357421875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.04578733444213867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.04445052146911621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.044882774353027344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.045882463455200195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.044434309005737305 s]
153/162 DONE. [mean time: 0.04507226943969726 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04693269729614258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.047875404357910156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04587554931640625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04688620567321777 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04587578773498535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.049234867095947266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04695296287536621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.0461270809173584 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04786276817321777 s]
154/162 DONE. [mean time: 0.04724950790405273 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17888474464416504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17726349830627441 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17453718185424805 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.1805434226989746 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17848658561706543 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17704129219055176 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17752838134765625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17864441871643066 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17940402030944824 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.17601561546325684 s]
155/162 DONE. [mean time: 0.17803423404693602 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.700648307800293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6987721920013428 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6927704811096191 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.7017195224761963 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6965541839599609 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.696000337600708 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6961095333099365 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6950345039367676 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6968700885772705 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.6956775188446045 s]
156/162 DONE. [mean time: 0.6970156669616699 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08544468879699707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08279061317443848 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08329510688781738 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08461499214172363 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0850679874420166 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08497095108032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08543181419372559 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08370375633239746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08431100845336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.08477187156677246 s]
157/162 DONE. [mean time: 0.08454031944274902 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0834813117980957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08539915084838867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08278059959411621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08377528190612793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08377742767333984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08406424522399902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08396100997924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08516716957092285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.08379316329956055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0843210220336914 s]
158/162 DONE. [mean time: 0.08415331840515136 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08515620231628418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08579134941101074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08688545227050781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08577322959899902 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08656144142150879 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08550643920898438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08377766609191895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08481192588806152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08693647384643555 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.08377885818481445 s]
159/162 DONE. [mean time: 0.08549790382385254 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.08972334861755371 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.08879995346069336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.08972287178039551 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.08678078651428223 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.09047293663024902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0877685546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0909264087677002 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.08980250358581543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.08777594566345215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.09088969230651855 s]
160/162 DONE. [mean time: 0.08936948776245117 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.3439335823059082 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.3438878059387207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.3448460102081299 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.34489870071411133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.34546351432800293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.34421277046203613 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.34348392486572266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.34481048583984375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.3436727523803711 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.34772610664367676 s]
161/162 DONE. [mean time: 0.34469356536865237 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.3683092594146729 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.3637449741363525 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.367748737335205 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.3678200244903564 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.3694348335266113 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.3650786876678467 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.36429762840271 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.379755973815918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.365135908126831 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEC790> done in 1.3653128147125244 s]
162/162 DONE. [mean time: 1.3677627325057984 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION numba_cuda_tiles DONE. [time: 158.4983515739441 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION numba_cuda_viafft...
1/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008149385452270508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.0044667720794677734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.0045185089111328125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.004997730255126953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.005279064178466797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.004651069641113281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.004117488861083984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.004797458648681641 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.004340171813964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.003991127014160156 s]
1/162 DONE. [mean time: 0.004930877685546875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.0059888362884521484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.005129814147949219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.005944013595581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.004975557327270508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.005986928939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.005023956298828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.006571292877197266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.004870891571044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.004988908767700195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.00601959228515625 s]
2/162 DONE. [mean time: 0.005549979209899902 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010778427124023438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01060175895690918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.012360811233520508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.00957179069519043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010809898376464844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010365009307861328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009975910186767578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01058506965637207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010098934173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010975837707519531 s]
3/162 DONE. [mean time: 0.01061234474182129 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024904966354370117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024946212768554688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025908470153808594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.027936220169067383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024922847747802734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.025995254516601562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024941205978393555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.026666641235351562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.027123212814331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.024929523468017578 s]
4/162 DONE. [mean time: 0.025927257537841798 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.08872461318969727 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0905296802520752 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0872647762298584 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.08989429473876953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.08677053451538086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.08975911140441895 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09020566940307617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.08787226676940918 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09056973457336426 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.09082150459289551 s]
5/162 DONE. [mean time: 0.08934197425842286 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.4019021987915039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.40398550033569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.4053516387939453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.3999292850494385 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.4024379253387451 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.4042353630065918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.4027366638183594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.40096306800842285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.40343260765075684 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.4030766487121582 s]
6/162 DONE. [mean time: 0.4029052257537842 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.007884502410888672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.006357908248901367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.005450248718261719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.005505084991455078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.005362987518310547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.005094289779663086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.006293058395385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.005488395690917969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.00500798225402832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.005493640899658203 s]
7/162 DONE. [mean time: 0.00579380989074707 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007513523101806641 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007155656814575195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007132291793823242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007100820541381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007318735122680664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.006985187530517578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.008440017700195312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.0072939395904541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007312297821044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.007064342498779297 s]
8/162 DONE. [mean time: 0.007331681251525879 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.012964963912963867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.017130136489868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.01302480697631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.013587474822998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.013928890228271484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.013845682144165039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.014345884323120117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.012632608413696289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.014075040817260742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE9880> done in 0.014617919921875 s]
9/162 DONE. [mean time: 0.014116477966308594 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03628706932067871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.038909912109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.04089236259460449 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03766274452209473 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03982281684875488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.03818321228027344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.040273427963256836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.04091691970825195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.036904335021972656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.04042673110961914 s]
10/162 DONE. [mean time: 0.039128875732421874 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.1427314281463623 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.1406266689300537 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.14391827583312988 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.13963603973388672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.14328789710998535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.14570355415344238 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.14090371131896973 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.1426839828491211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.14272379875183105 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3D90> done in 0.1406266689300537 s]
11/162 DONE. [mean time: 0.14248330593109132 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5779166221618652 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5794510841369629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5777566432952881 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5776019096374512 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5769662857055664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5795013904571533 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5754976272583008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5780801773071289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5762784481048584 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.5752401351928711 s]
12/162 DONE. [mean time: 0.5774290323257446 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008967399597167969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0059735774993896484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.005085945129394531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006084918975830078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006706714630126953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006092548370361328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0060520172119140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0059926509857177734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006517171859741211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.006024599075317383 s]
13/162 DONE. [mean time: 0.006349754333496094 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008831262588500977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009382963180541992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009696006774902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008931398391723633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.00798177719116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.007978200912475586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.00909113883972168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.007979869842529297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008245706558227539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.007979869842529297 s]
14/162 DONE. [mean time: 0.008709931373596191 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.020882606506347656 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.019316911697387695 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.019955158233642578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.019941329956054688 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.020923614501953125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.02065587043762207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.019382476806640625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.021435022354125977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.019949913024902344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.020228862762451172 s]
15/162 DONE. [mean time: 0.020267176628112792 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06476950645446777 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06381726264953613 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06687259674072266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06468939781188965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06300806999206543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06585335731506348 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0653376579284668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06393194198608398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06443595886230469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.06474900245666504 s]
16/162 DONE. [mean time: 0.06474647521972657 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.24924945831298828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.2503175735473633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.24880075454711914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.24733400344848633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.24825191497802734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.2493422031402588 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.24942684173583984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.24934101104736328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.2504117488861084 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4490> done in 0.2495110034942627 s]
17/162 DONE. [mean time: 0.249298357963562 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.231593370437622 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.234144687652588 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.233938455581665 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.2363121509552002 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.2330832481384277 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.237325668334961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.2338955402374268 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.2379264831542969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.2305917739868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 1.2368285655975342 s]
18/162 DONE. [mean time: 1.2345639944076539 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.006753683090209961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.004996538162231445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0056133270263671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.005876064300537109 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.005218982696533203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.005500078201293945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0050280094146728516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0049893856048583984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.004987001419067383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.005704164505004883 s]
19/162 DONE. [mean time: 0.005565714836120605 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.00603032112121582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007283926010131836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006989240646362305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.007572174072265625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0059032440185546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0069921016693115234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005974531173706055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006933450698852539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006278038024902344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.00621342658996582 s]
20/162 DONE. [mean time: 0.006617045402526856 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.014492273330688477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.013965606689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.016954421997070312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.014706134796142578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01291656494140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01500391960144043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.013874292373657227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.015450716018676758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.015089750289916992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.01296687126159668 s]
21/162 DONE. [mean time: 0.014542055130004884 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04148530960083008 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.041346073150634766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04049229621887207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04136466979980469 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.039936065673828125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04203534126281738 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04310488700866699 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04023933410644531 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.04230999946594238 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.042832136154174805 s]
22/162 DONE. [mean time: 0.04151461124420166 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.14957118034362793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.1513063907623291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.14966702461242676 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.1517496109008789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.15213871002197266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.14950776100158691 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.15235424041748047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.15175175666809082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.15080833435058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2880> done in 0.15061283111572266 s]
23/162 DONE. [mean time: 0.15104491710662843 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7747223377227783 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7677304744720459 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7685842514038086 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7648987770080566 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7677667140960693 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7679238319396973 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7641818523406982 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7677490711212158 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7682702541351318 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051C0> done in 0.7681195735931396 s]
24/162 DONE. [mean time: 0.7679947137832641 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006600618362426758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0063550472259521484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005366086959838867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005649089813232422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006844520568847656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.00612950325012207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.0060999393463134766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.005819082260131836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.00606083869934082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.006234407424926758 s]
25/162 DONE. [mean time: 0.006115913391113281 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007987737655639648 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008752584457397461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007980108261108398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007884979248046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008004188537597656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009121417999267578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007813453674316406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.007980108261108398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009395360946655273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.008961915969848633 s]
26/162 DONE. [mean time: 0.008388185501098632 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.017794370651245117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.017952442169189453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019948959350585938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.01976752281188965 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.01795506477355957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019866228103637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.01956462860107422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.01895928382873535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019887447357177734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019953012466430664 s]
27/162 DONE. [mean time: 0.01936502456665039 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06286096572875977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.062178611755371094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06075453758239746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06325030326843262 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06083989143371582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.058843374252319336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06369280815124512 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.059838056564331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06377243995666504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.06283068656921387 s]
28/162 DONE. [mean time: 0.06198585033416748 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23694062232971191 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.2354738712310791 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23557543754577637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23549747467041016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23695945739746094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.2354879379272461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23590850830078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23537206649780273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.23591995239257812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3BB0> done in 0.2343752384185791 s]
29/162 DONE. [mean time: 0.23575105667114257 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0635631084442139 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0611586570739746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0619304180145264 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0636403560638428 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.062194585800171 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0611038208007812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0632734298706055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0635786056518555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0646893978118896 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.0649068355560303 s]
30/162 DONE. [mean time: 1.063003921508789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.01018381118774414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.007863759994506836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0064563751220703125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0067291259765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0071070194244384766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006215095520019531 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.007042646408081055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006563901901245117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0059986114501953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0074427127838134766 s]
31/162 DONE. [mean time: 0.007160305976867676 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010363578796386719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011120796203613281 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010390043258666992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.010603666305541992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011381387710571289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.009975910186767578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011300802230834961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.01197052001953125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.01171112060546875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.011884450912475586 s]
32/162 DONE. [mean time: 0.01107022762298584 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.033881425857543945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.03110957145690918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.030466556549072266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.028889894485473633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.02991485595703125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.02792668342590332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.03091883659362793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.029927730560302734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.028922319412231445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7AC0> done in 0.029920578002929688 s]
33/162 DONE. [mean time: 0.03018784523010254 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10368490219116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10172915458679199 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10443973541259766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.1017310619354248 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10492682456970215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10532712936401367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10369324684143066 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10372757911682129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10373115539550781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.10271382331848145 s]
34/162 DONE. [mean time: 0.10357046127319336 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.4078094959259033 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.40749430656433105 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.4076533317565918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.40727758407592773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.40778350830078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.4079244136810303 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.40590882301330566 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.40789341926574707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.40604400634765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 0.4084203243255615 s]
35/162 DONE. [mean time: 0.4074209213256836 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9764454364776611 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9768493175506592 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9785537719726562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.974066972732544 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9793143272399902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9763433933258057 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9771721363067627 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.980072021484375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9735472202301025 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.9788081645965576 s]
36/162 DONE. [mean time: 1.9771172761917115 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.009276866912841797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.0054934024810791016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.006772041320800781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.0065381526947021484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.005780220031738281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.00603032112121582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.006172657012939453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.005833148956298828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.00603795051574707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.004857063293457031 s]
37/162 DONE. [mean time: 0.006279182434082031 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008911609649658203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008950471878051758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008774518966674805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.00933074951171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.00915384292602539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.007980585098266602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.011972427368164062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.009969234466552734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.00799703598022461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.008936166763305664 s]
38/162 DONE. [mean time: 0.009299612045288086 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.022125244140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.02212357521057129 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.022292613983154297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.021098852157592773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.021944522857666016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.023018598556518555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.02136063575744629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.021956920623779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.020934343338012695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7EB0> done in 0.022545576095581055 s]
39/162 DONE. [mean time: 0.021940088272094725 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07137489318847656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06971621513366699 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07187080383300781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07180929183959961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07055091857910156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07239413261413574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06981468200683594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07167887687683105 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.07174158096313477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06881594657897949 s]
40/162 DONE. [mean time: 0.07097673416137695 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.28624916076660156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.27427029609680176 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.2744112014770508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.27678394317626953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.275038480758667 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.27431631088256836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.2757422924041748 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.27548861503601074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.2753622531890869 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.2753770351409912 s]
41/162 DONE. [mean time: 0.2763039588928223 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.791724443435669 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.793501377105713 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7891063690185547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7916975021362305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7882518768310547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7927868366241455 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7863636016845703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7908811569213867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7908473014831543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 1.7892048358917236 s]
42/162 DONE. [mean time: 1.7905367374420167 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009073495864868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.007382631301879883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0057070255279541016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.007982969284057617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.008974790573120117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.006980180740356445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0060575008392333984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.007962226867675781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0064334869384765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.00804281234741211 s]
43/162 DONE. [mean time: 0.007559847831726074 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.011330366134643555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.011228084564208984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.011441469192504883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.012063741683959961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.011728763580322266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.01093292236328125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.011937141418457031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.012927532196044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.009975194931030273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4670> done in 0.01307535171508789 s]
44/162 DONE. [mean time: 0.011664056777954101 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.03026294708251953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.03159952163696289 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.03157210350036621 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.030078411102294922 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.03136134147644043 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.031194686889648438 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.029571056365966797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.03128337860107422 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.031607866287231445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.029047250747680664 s]
45/162 DONE. [mean time: 0.030757856369018555 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.1076807975769043 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10471820831298828 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10959124565124512 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10834050178527832 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10572957992553711 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10780787467956543 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10785818099975586 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10472273826599121 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10672450065612793 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E340> done in 0.10471081733703613 s]
46/162 DONE. [mean time: 0.10678844451904297 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.42467665672302246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.42206645011901855 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.42202162742614746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.4231410026550293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.421675443649292 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.42461490631103516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.42357373237609863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.4227011203765869 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.4242897033691406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.4226839542388916 s]
47/162 DONE. [mean time: 0.423244309425354 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2868313789367676 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2717409133911133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.276970148086548 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2741432189941406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.27618408203125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2739765644073486 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2770447731018066 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2736141681671143 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2759974002838135 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.279928207397461 s]
48/162 DONE. [mean time: 2.276844096183777 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.010486125946044922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00787806510925293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.008214712142944336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007477283477783203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007982254028320312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.006983518600463867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007819890975952148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.007404327392578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.00789952278137207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.006751298904418945 s]
49/162 DONE. [mean time: 0.007889699935913087 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.014940738677978516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.015953540802001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.016954660415649414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.016962051391601562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.015215635299682617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.01563262939453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.015863656997680664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.013673067092895508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.01681971549987793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.016027450561523438 s]
50/162 DONE. [mean time: 0.015804314613342287 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04853367805480957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0489501953125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04740715026855469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04992079734802246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.0489809513092041 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04690241813659668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.05008888244628906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04787874221801758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04941511154174805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04931831359863281 s]
51/162 DONE. [mean time: 0.0487396240234375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.17852544784545898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.1795213222503662 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.17952322959899902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.17835187911987305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.18052363395690918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.182295560836792 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.17859411239624023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.1795046329498291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.17873573303222656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.18136310577392578 s]
52/162 DONE. [mean time: 0.17979371547698975 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7802326679229736 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.782628059387207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7784059047698975 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7799253463745117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.780397891998291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7812774181365967 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.783557653427124 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7799451351165771 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7794818878173828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 0.7820484638214111 s]
53/162 DONE. [mean time: 0.7807900428771972 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2198798656463623 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2271969318389893 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.222301959991455 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.226125478744507 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2267138957977295 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2265992164611816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.224898099899292 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2287747859954834 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.22249174118042 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2247140407562256 s]
54/162 DONE. [mean time: 3.225172829627991 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.006920337677001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.005889177322387695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.005303144454956055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.005364894866943359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.006487846374511719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.005632162094116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0052640438079833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.005578517913818359 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.005875349044799805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0A30> done in 0.0050165653228759766 s]
55/162 DONE. [mean time: 0.005733203887939453 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.004980802536010742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.005791187286376953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.005433320999145508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.00531768798828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.00527501106262207 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.005266427993774414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.006022214889526367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.005948781967163086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.0057408809661865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8820> done in 0.005852937698364258 s]
56/162 DONE. [mean time: 0.005562925338745117 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.023762941360473633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.011038780212402344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010970354080200195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010607481002807617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.008978128433227539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010367870330810547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010972261428833008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.009732723236083984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010818958282470703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.010956525802612305 s]
57/162 DONE. [mean time: 0.01212005615234375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.024260520935058594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.027107715606689453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.023938894271850586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.02692389488220215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0296323299407959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.025276899337768555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.026737451553344727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.02655315399169922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.024266958236694336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4F70> done in 0.0266115665435791 s]
58/162 DONE. [mean time: 0.026231670379638673 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.08842086791992188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.08978962898254395 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.0897679328918457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.08775711059570312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.09025812149047852 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.09068989753723145 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.08840012550354004 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.08970952033996582 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.08778071403503418 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.09118223190307617 s]
59/162 DONE. [mean time: 0.08937561511993408 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4039318561553955 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4038074016571045 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4019479751586914 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4031500816345215 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4022970199584961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4024970531463623 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.40584230422973633 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.40079832077026367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.40297603607177734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.4048655033111572 s]
60/162 DONE. [mean time: 0.4033111810684204 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.00699925422668457 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.00797891616821289 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.006977081298828125 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.006966829299926758 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.007979393005371094 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.006981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.005996227264404297 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.00997471809387207 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EAC0> done in 0.007965326309204102 s]
61/162 DONE. [mean time: 0.007579803466796875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.0059740543365478516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.006972074508666992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.007963418960571289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.007978677749633789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.006981372833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.00698089599609375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.006981849670410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8A00> done in 0.006993770599365234 s]
62/162 DONE. [mean time: 0.007278347015380859 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.013955354690551758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.013944149017333984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.014960289001464844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.013975858688354492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.013949155807495117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.01595759391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.01495981216430664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.012966394424438477 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.014959573745727539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.012965679168701172 s]
63/162 DONE. [mean time: 0.014359045028686523 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.038864850997924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.03989863395690918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.036896467208862305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.04089021682739258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.03889632225036621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.03789877891540527 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.03890872001647949 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.03788638114929199 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.04191184043884277 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7550> done in 0.03988146781921387 s]
64/162 DONE. [mean time: 0.039193367958068846 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14061880111694336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14560604095458984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14066338539123535 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.1415863037109375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14061975479125977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14265227317810059 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14403033256530762 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14054059982299805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.14361834526062012 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.1420283317565918 s]
65/162 DONE. [mean time: 0.1424945592880249 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.57669997215271 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.5769739151000977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.5775723457336426 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.5765993595123291 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.5774478912353516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.579066276550293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.578498125076294 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.575859546661377 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.5765302181243896 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.5770325660705566 s]
66/162 DONE. [mean time: 0.5773276805877685 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008939743041992188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.011966705322265625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008986473083496094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008990287780761719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.00841975212097168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008584976196289062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.007607698440551758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.009126663208007812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.007659196853637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.008991718292236328 s]
67/162 DONE. [mean time: 0.008927321434020996 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008978605270385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.009155988693237305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008979558944702148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.009187936782836914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008899450302124023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008849859237670898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.00798177719116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008975744247436523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008704662322998047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.007981300354003906 s]
68/162 DONE. [mean time: 0.008769488334655762 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.020024776458740234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01994490623474121 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0189516544342041 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.020275115966796875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.018548965454101562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.021015167236328125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01981663703918457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.019954204559326172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.02136087417602539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.020067453384399414 s]
69/162 DONE. [mean time: 0.019995975494384765 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06266283988952637 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0638430118560791 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0646369457244873 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06453752517700195 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06503057479858398 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06383705139160156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06621408462524414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06573843955993652 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06305432319641113 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.06483316421508789 s]
70/162 DONE. [mean time: 0.064438796043396 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24975132942199707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24816441535949707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24838948249816895 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24975228309631348 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24871230125427246 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.247819185256958 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24941802024841309 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24833893775939941 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24933338165283203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8F40> done in 0.24930429458618164 s]
71/162 DONE. [mean time: 0.24889836311340333 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.255887746810913 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2341532707214355 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2367236614227295 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2344744205474854 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2349214553833008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2373628616333008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2347941398620605 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2380366325378418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.232191801071167 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1760> done in 1.2384250164031982 s]
72/162 DONE. [mean time: 1.2378748416900636 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.007848978042602539 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.007962226867675781 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0068206787109375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.006995439529418945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.007731914520263672 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.006983757019042969 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0060002803802490234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.007500410079956055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.005986690521240234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.006764888763427734 s]
73/162 DONE. [mean time: 0.007059526443481445 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.006220102310180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.0071222782135009766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.0065991878509521484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.005993843078613281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.0068166255950927734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.006984710693359375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.008974313735961914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.007978439331054688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.005984306335449219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.007504940032958984 s]
74/162 DONE. [mean time: 0.007017874717712402 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013942718505859375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013951778411865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.01458883285522461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.014708757400512695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013384580612182617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.015096426010131836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013750076293945312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.014969825744628906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.014036417007446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 0.013262748718261719 s]
75/162 DONE. [mean time: 0.014373779296875 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04185795783996582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.041838884353637695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.039383888244628906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.0408930778503418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.0400693416595459 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04186391830444336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04118633270263672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04088258743286133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.043035268783569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04096364974975586 s]
76/162 DONE. [mean time: 0.04119749069213867 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.15057754516601562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.15155935287475586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.14960026741027832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.15224838256835938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.1517333984375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.15007805824279785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.1528778076171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.15237069129943848 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.14934301376342773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.15188336372375488 s]
77/162 DONE. [mean time: 0.15132710933685303 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7698779106140137 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7669529914855957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.768146276473999 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7663986682891846 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7648675441741943 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.767951250076294 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7669820785522461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7675049304962158 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7647504806518555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7694647312164307 s]
78/162 DONE. [mean time: 0.7673923969268799 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01135396957397461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008092403411865234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008892059326171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008807182312011719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.00773930549621582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008708477020263672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008131980895996094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009056806564331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008489608764648438 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.008084535598754883 s]
79/162 DONE. [mean time: 0.00873563289642334 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008992910385131836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008690834045410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.007982969284057617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.007931232452392578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.007680177688598633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008373498916625977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008566141128540039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.006655693054199219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.008127212524414062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.00838327407836914 s]
80/162 DONE. [mean time: 0.008338284492492676 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.023072004318237305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.01995086669921875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.019945383071899414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.02112746238708496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.01897716522216797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.020516633987426758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.0209503173828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.018959999084472656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.020337820053100586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE910> done in 0.020505905151367188 s]
81/162 DONE. [mean time: 0.020532727241516113 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06081748008728027 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.061722755432128906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06183600425720215 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06196451187133789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06297135353088379 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.061971187591552734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06283760070800781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.06303191184997559 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.060832977294921875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.0637204647064209 s]
82/162 DONE. [mean time: 0.0622725248336792 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.2363452911376953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23653554916381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23652315139770508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23663020133972168 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23637151718139648 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23562335968017578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.2362205982208252 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23636746406555176 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23746538162231445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.23572993278503418 s]
83/162 DONE. [mean time: 0.2364809036254883 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.06357741355896 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.06412935256958 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.0633952617645264 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.062058925628662 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.0646719932556152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.0655264854431152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.0643868446350098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.0643115043640137 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.066068172454834 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 1.061525821685791 s]
84/162 DONE. [mean time: 1.0640650987625122 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01107931137084961 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.011970758438110352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.011130571365356445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.012273311614990234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.011569023132324219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.009988069534301758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.012260198593139648 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.012281179428100586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.01062154769897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE6E20> done in 0.012471675872802734 s]
85/162 DONE. [mean time: 0.01156456470489502 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010509014129638672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.011986494064331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.011776447296142578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.011902570724487305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.013126611709594727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.012042522430419922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010510444641113281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.011974573135375977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.012061119079589844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.010212898254394531 s]
86/162 DONE. [mean time: 0.011610269546508789 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.02997303009033203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.028925180435180664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.028923511505126953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.030713319778442383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.028924226760864258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.029933452606201172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.029355287551879883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.028644084930419922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.03056025505065918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7D60> done in 0.02835702896118164 s]
87/162 DONE. [mean time: 0.02943093776702881 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10493087768554688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10323500633239746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10177230834960938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10531497001647949 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10372519493103027 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10272550582885742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10471916198730469 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10272502899169922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.1042790412902832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.10576963424682617 s]
88/162 DONE. [mean time: 0.10401957035064698 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.41303038597106934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.40795350074768066 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.4086122512817383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.4068617820739746 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.408583402633667 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.4084622859954834 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.4086644649505615 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.40734100341796875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.407437801361084 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF430> done in 0.4068868160247803 s]
89/162 DONE. [mean time: 0.40858242511749265 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9753227233886719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9787609577178955 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9810373783111572 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.975489616394043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9799740314483643 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.977536678314209 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9797086715698242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9787847995758057 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.980835199356079 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 1.9734537601470947 s]
90/162 DONE. [mean time: 1.9781903266906737 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.011399984359741211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.008964300155639648 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.00830078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.008897066116333008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.008953571319580078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.009396791458129883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.008791685104370117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.009097814559936523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.008488178253173828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.00880289077758789 s]
91/162 DONE. [mean time: 0.009109306335449218 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.00795125961303711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.009979248046875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008223772048950195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.009002685546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008850812911987305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008243560791015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008978128433227539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008978843688964844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008973836898803711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.008278131484985352 s]
92/162 DONE. [mean time: 0.008843302726745605 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02091670036315918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.022645950317382812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0229949951171875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.022320270538330078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.022564411163330078 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.022379159927368164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.019956588745117188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.023050785064697266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02194380760192871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.020943164825439453 s]
93/162 DONE. [mean time: 0.022071456909179686 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07116842269897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06981611251831055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07247710227966309 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07203245162963867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.06981587409973145 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0715336799621582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07181024551391602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07128167152404785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07182788848876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.07112002372741699 s]
94/162 DONE. [mean time: 0.0712883472442627 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.27756404876708984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.278827428817749 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.2775843143463135 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.27646374702453613 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.2782094478607178 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.27640247344970703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.27818799018859863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.27646851539611816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.27719783782958984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4F0> done in 0.2764754295349121 s]
95/162 DONE. [mean time: 0.2774417638778687 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.8078296184539795 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7935733795166016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.789827823638916 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7931146621704102 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7882840633392334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7948822975158691 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7879395484924316 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7862672805786133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7912867069244385 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1EB0> done in 1.7899703979492188 s]
96/162 DONE. [mean time: 1.7923971652984618 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.014389753341674805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.012406587600708008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.011237621307373047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.012024879455566406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.010851144790649414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.012389421463012695 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.011791467666625977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.010645866394042969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.011476516723632812 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.011992454528808594 s]
97/162 DONE. [mean time: 0.011920571327209473 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.009944438934326172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.01175999641418457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.010973453521728516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.012026786804199219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.011471271514892578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.010130167007446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.010975360870361328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.013965606689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.011979818344116211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.012256383895874023 s]
98/162 DONE. [mean time: 0.011647772789001466 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.029926061630249023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.0322723388671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.030530929565429688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.029728412628173828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03157377243041992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.030918598175048828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.029921531677246094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03191399574279785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03275251388549805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02930474281311035 s]
99/162 DONE. [mean time: 0.030884289741516115 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10827207565307617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10572600364685059 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10671448707580566 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.1087033748626709 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10471963882446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10772585868835449 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.1072537899017334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10615205764770508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10772991180419922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.10595059394836426 s]
100/162 DONE. [mean time: 0.10699446201324463 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.425246000289917 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.4231281280517578 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.42318201065063477 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.4234018325805664 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.4238317012786865 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.4233889579772949 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.42417335510253906 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.4232954978942871 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.42319560050964355 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E370> done in 0.42282843589782715 s]
101/162 DONE. [mean time: 0.4236691236495972 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.27665114402771 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.278421640396118 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.276268720626831 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2807936668395996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2728271484375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.279284954071045 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.278787851333618 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.27579665184021 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.276155471801758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 2.2771804332733154 s]
102/162 DONE. [mean time: 2.2772167682647706 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.019565343856811523 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01708817481994629 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.015128135681152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01651453971862793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.017457008361816406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.014961719512939453 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01546621322631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.015561580657958984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.01571345329284668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.016269207000732422 s]
103/162 DONE. [mean time: 0.016372537612915038 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.015609979629516602 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.016016721725463867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.015889883041381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.01643824577331543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.017953872680664062 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.014961481094360352 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.01531362533569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.017841339111328125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.013964653015136719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0BE0> done in 0.017500877380371094 s]
104/162 DONE. [mean time: 0.016149067878723146 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.057379961013793945 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04886054992675781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05036163330078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.047455549240112305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04987764358520508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04716658592224121 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.050112247467041016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04987645149230957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.04888796806335449 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572315A30> done in 0.05088043212890625 s]
105/162 DONE. [mean time: 0.05008590221405029 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.18064403533935547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.17903876304626465 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.18141961097717285 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.17755579948425293 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.18181753158569336 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.18109846115112305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.17936038970947266 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.17952227592468262 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.1804945468902588 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723015E0> done in 0.17801165580749512 s]
106/162 DONE. [mean time: 0.17999639511108398 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7832214832305908 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7775630950927734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7814431190490723 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7837650775909424 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7784340381622314 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7804639339447021 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7830376625061035 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7791454792022705 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7799050807952881 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.7818281650543213 s]
107/162 DONE. [mean time: 0.7809805154800415 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.224088430404663 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2258756160736084 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.225045919418335 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.227572441101074 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.226773977279663 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2275984287261963 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2304203510284424 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2238097190856934 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.229722499847412 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 3.2267587184906006 s]
108/162 DONE. [mean time: 3.226966691017151 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.009810447692871094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.007337093353271484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.005986928939819336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.006342887878417969 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.00598597526550293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.006053924560546875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.006475210189819336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.005986690521240234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.005466938018798828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.005650997161865234 s]
109/162 DONE. [mean time: 0.006509709358215332 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009387016296386719 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009756326675415039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009765625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.012344837188720703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01060795783996582 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009973526000976562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.011193037033081055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.009990692138671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.010957002639770508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.010849475860595703 s]
110/162 DONE. [mean time: 0.010583972930908203 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.009727001190185547 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.010565996170043945 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012054920196533203 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.00997614860534668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.010892152786254883 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.009964942932128906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.01073765754699707 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.010972976684570312 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.00997471809387207 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.012964725494384766 s]
111/162 DONE. [mean time: 0.01088564395904541 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.026244640350341797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.025561809539794922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02749490737915039 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.023949384689331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.027938365936279297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02657461166381836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.02575540542602539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.0265805721282959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.026447057723999023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.024944543838500977 s]
112/162 DONE. [mean time: 0.026247739791870117 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.09076118469238281 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.08783650398254395 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.0910348892211914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.09055042266845703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.08731245994567871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.09061670303344727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.09134101867675781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.08841109275817871 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.09232592582702637 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDCAC0> done in 0.08998417854309082 s]
113/162 DONE. [mean time: 0.0902172565460205 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.41710329055786133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.40092992782592773 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.4046652317047119 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.4057505130767822 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.4022345542907715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.4026966094970703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.40568971633911133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.40346717834472656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.40326404571533203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3F40> done in 0.4040062427520752 s]
114/162 DONE. [mean time: 0.40508098602294923 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.00797414779663086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.009694576263427734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007327079772949219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.006983280181884766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0058019161224365234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007385969161987305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.007840633392333984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.0073626041412353516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.00719761848449707 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.008021354675292969 s]
115/162 DONE. [mean time: 0.0075589179992675785 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.014513492584228516 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.012920618057250977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015067100524902344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015078067779541016 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.013547897338867188 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.014962911605834961 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01392221450805664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.01598072052001953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.014916419982910156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.012059450149536133 s]
116/162 DONE. [mean time: 0.014296889305114746 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.014497995376586914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.013965845108032227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.013004779815673828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.013964414596557617 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.012974977493286133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.017941951751708984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.014432907104492188 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.012443780899047852 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01459503173828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.014002561569213867 s]
117/162 DONE. [mean time: 0.014282441139221192 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03750944137573242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03907418251037598 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.037103891372680664 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.04030346870422363 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03955507278442383 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03692197799682617 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03889060020446777 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03909659385681152 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03690385818481445 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.039537668228149414 s]
118/162 DONE. [mean time: 0.038588881492614746 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14060497283935547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14279937744140625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14162445068359375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14165186882019043 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14172816276550293 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14328956604003906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14159011840820312 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14293766021728516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.1431419849395752 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.14112138748168945 s]
119/162 DONE. [mean time: 0.14204895496368408 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5785398483276367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.581038236618042 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5743751525878906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5786495208740234 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5775628089904785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5758485794067383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5801732540130615 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5788388252258301 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.5789923667907715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.575430154800415 s]
120/162 DONE. [mean time: 0.5780445098876953 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.012112140655517578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.010421514511108398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.00854802131652832 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009416341781616211 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.008487939834594727 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009554862976074219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009584903717041016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.009116649627685547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.00882720947265625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.01026606559753418 s]
121/162 DONE. [mean time: 0.009633564949035644 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.0201873779296875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.020485639572143555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.019948959350585938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.02070021629333496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.020920276641845703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.018959760665893555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.02181100845336914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.020624637603759766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.018952608108520508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 0.02036762237548828 s]
122/162 DONE. [mean time: 0.02029581069946289 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02472853660583496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02115797996520996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.01862812042236328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.0220944881439209 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02065300941467285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.018952369689941406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.02137589454650879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.019814729690551758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.018949270248413086 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBBE0> done in 0.021811246871948242 s]
123/162 DONE. [mean time: 0.020916199684143065 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06382393836975098 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0659031867980957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06524419784545898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06283259391784668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06383252143859863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06644392013549805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06383395195007324 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.0644218921661377 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06551814079284668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 0.06185007095336914 s]
124/162 DONE. [mean time: 0.06446878910064698 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.25029492378234863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.24874138832092285 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.248612642288208 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2500784397125244 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.24852943420410156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.24941754341125488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.24990415573120117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.24928689002990723 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.24947881698608398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE2DF0> done in 0.2483220100402832 s]
125/162 DONE. [mean time: 0.249365234375 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2354118824005127 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2346746921539307 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2340426445007324 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2359659671783447 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2339489459991455 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.239933729171753 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2339222431182861 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2389039993286133 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.231811285018921 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 1.2389459609985352 s]
126/162 DONE. [mean time: 1.2357561349868775 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0075321197509765625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.008133888244628906 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.007590293884277344 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0068013668060302734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.007969379425048828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.006873607635498047 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.007434844970703125 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.007778644561767578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.00710296630859375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.0071868896484375 s]
127/162 DONE. [mean time: 0.007440400123596191 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.014849185943603516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.014301061630249023 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.015657901763916016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.012971639633178711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.014478683471679688 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.013978719711303711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.013962507247924805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.014559745788574219 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.01349782943725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.014923095703125 s]
128/162 DONE. [mean time: 0.014516019821166992 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.0192410945892334 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.013107776641845703 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015362024307250977 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.015209674835205078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.013390064239501953 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.016961336135864258 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.013994455337524414 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.016176223754882812 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.014673709869384766 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723157C0> done in 0.013965129852294922 s]
129/162 DONE. [mean time: 0.015208148956298828 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.04123282432556152 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.04185891151428223 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.040123939514160156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.04255843162536621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03989601135253906 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.04256010055541992 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.04243779182434082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03990650177001953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.04249882698059082 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.040657758712768555 s]
130/162 DONE. [mean time: 0.04157767295837402 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15073800086975098 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15599775314331055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15358495712280273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15162420272827148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15005159378051758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15260863304138184 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15369296073913574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15008974075317383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15216827392578125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FECAC0> done in 0.15171337127685547 s]
131/162 DONE. [mean time: 0.15222694873809814 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7666969299316406 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7673659324645996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7663209438323975 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7654645442962646 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7676444053649902 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7668797969818115 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7678360939025879 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7669496536254883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7664651870727539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE3940> done in 0.7676301002502441 s]
132/162 DONE. [mean time: 0.767128586769104 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.00794219970703125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008583784103393555 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008601903915405273 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.008438587188720703 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007138490676879883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007980108261108398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.009057760238647461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.00797581672668457 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007979393005371094 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.007950067520141602 s]
133/162 DONE. [mean time: 0.008164811134338378 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01991415023803711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01834559440612793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01984548568725586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01795339584350586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.020303964614868164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.019826173782348633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.018900156021118164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.020517826080322266 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.01994919776916504 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.017979145050048828 s]
134/162 DONE. [mean time: 0.01955409049987793 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.019926786422729492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.01893758773803711 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.022940635681152344 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.022011756896972656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.019623994827270508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.019940853118896484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.019121408462524414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.0189516544342041 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.020009517669677734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.02018451690673828 s]
135/162 DONE. [mean time: 0.020164871215820314 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06080913543701172 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06222987174987793 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0600125789642334 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.0624692440032959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06168842315673828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06351041793823242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.061837196350097656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06188154220581055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.061838388442993164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F40> done in 0.06373429298400879 s]
136/162 DONE. [mean time: 0.06200110912322998 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.2363746166229248 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.2367267608642578 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.23618721961975098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.23622465133666992 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.2355806827545166 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.23572421073913574 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.23525691032409668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.23699021339416504 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.23665761947631836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.2353649139404297 s]
137/162 DONE. [mean time: 0.23610877990722656 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0656523704528809 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0630114078521729 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0654270648956299 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0688848495483398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.062126874923706 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0613844394683838 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0636301040649414 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0643408298492432 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.0626575946807861 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCD0> done in 1.063453197479248 s]
138/162 DONE. [mean time: 1.0640568733215332 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014196157455444336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010574102401733398 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.011355161666870117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.012837648391723633 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.012124061584472656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.012367010116577148 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010375738143920898 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01285409927368164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01212310791015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.010629415512084961 s]
139/162 DONE. [mean time: 0.011943650245666505 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03010106086730957 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.030691146850585938 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.028933048248291016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02991199493408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.028940439224243164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03131866455078125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03061199188232422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02792668342590332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03185009956359863 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.029139280319213867 s]
140/162 DONE. [mean time: 0.0299424409866333 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.029454708099365234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030205488204956055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.029286861419677734 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030560016632080078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030367612838745117 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.02902388572692871 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030935049057006836 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030731916427612305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.028925657272338867 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03154730796813965 s]
141/162 DONE. [mean time: 0.03020455837249756 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.1028132438659668 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10453939437866211 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10373568534851074 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10276198387145996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10372543334960938 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10373854637145996 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10172748565673828 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10399913787841797 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10372567176818848 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10172700881958008 s]
142/162 DONE. [mean time: 0.1033475399017334 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40648770332336426 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40694499015808105 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40609025955200195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40665602684020996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40618896484375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40600109100341797 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40630602836608887 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40660881996154785 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.406679630279541 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.40589189529418945 s]
143/162 DONE. [mean time: 0.40638554096221924 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.9768385887145996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.9824423789978027 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.975311517715454 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.978576421737671 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.9787068367004395 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.9803965091705322 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.9787945747375488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.9796483516693115 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.976308822631836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 1.981614112854004 s]
144/162 DONE. [mean time: 1.97886381149292 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.012135982513427734 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.009382009506225586 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.009452342987060547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.009751081466674805 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.007996797561645508 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.008939266204833984 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.008739709854125977 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.008977174758911133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.008975982666015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE7E80> done in 0.007981538772583008 s]
145/162 DONE. [mean time: 0.009337091445922851 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.021918058395385742 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.02293872833251953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.020943880081176758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.02112746238708496 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.02193140983581543 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.02194523811340332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.021936655044555664 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.021942138671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.02400803565979004 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FEA1C0> done in 0.02210545539855957 s]
146/162 DONE. [mean time: 0.0220797061920166 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.03070068359375 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.021781206130981445 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.021936893463134766 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.022546768188476562 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02234029769897461 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.02143716812133789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.021944522857666016 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.020189762115478516 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.021942615509033203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDE4C0> done in 0.023827791213989258 s]
147/162 DONE. [mean time: 0.023064303398132324 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0711679458618164 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.07273316383361816 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.07081341743469238 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.06941008567810059 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.07227230072021484 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.06975078582763672 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.0731503963470459 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.07275795936584473 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.06935930252075195 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.07280802726745605 s]
148/162 DONE. [mean time: 0.07152206897735595 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.2763359546661377 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.27634763717651367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.2756168842315674 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.2752809524536133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.27507925033569336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.2766757011413574 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.27571797370910645 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.27564477920532227 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.27512526512145996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FCBA60> done in 0.277984619140625 s]
149/162 DONE. [mean time: 0.27598090171813966 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7961130142211914 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7950105667114258 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7913775444030762 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.792309284210205 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7877662181854248 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7943456172943115 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7889735698699951 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7913267612457275 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7925434112548828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE4A30> done in 1.7917888164520264 s]
150/162 DONE. [mean time: 1.7922553777694703 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.013724088668823242 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.011233806610107422 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.01014399528503418 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.011981487274169922 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.010960102081298828 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.011680126190185547 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.011967897415161133 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.010970592498779297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.01096963882446289 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE8700> done in 0.011134147644042969 s]
151/162 DONE. [mean time: 0.011576437950134277 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.02938365936279297 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03059554100036621 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.028923749923706055 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03106689453125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03092169761657715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.029387235641479492 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03185081481933594 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03059244155883789 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.0302426815032959 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDBCA0> done in 0.03139328956604004 s]
152/162 DONE. [mean time: 0.030535244941711427 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.02988743782043457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.033814191818237305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.031925201416015625 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030345916748046875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.031581878662109375 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03153562545776367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030083417892456055 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.03150129318237305 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030985593795776367 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.030062198638916016 s]
153/162 DONE. [mean time: 0.03117227554321289 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10786199569702148 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10473442077636719 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.1084446907043457 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10898995399475098 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10546302795410156 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10771536827087402 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.1077117919921875 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10571813583374023 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10839104652404785 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165723051F0> done in 0.10671734809875488 s]
154/162 DONE. [mean time: 0.10727341175079345 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.4333310127258301 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.4220619201660156 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.4230785369873047 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.4216501712799072 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.42179441452026367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.42151308059692383 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.4214973449707031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.42151355743408203 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.42227602005004883 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FDF160> done in 0.421708345413208 s]
155/162 DONE. [mean time: 0.42314274311065675 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.2770612239837646 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.2776198387145996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.272188425064087 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.2771413326263428 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.278594493865967 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.2775156497955322 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.278263807296753 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.273137092590332 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.2763314247131348 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE1F10> done in 2.276500701904297 s]
156/162 DONE. [mean time: 2.276737189292908 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01762866973876953 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014437437057495117 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.016140460968017578 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01713252067565918 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014155149459838867 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01641082763671875 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.014962434768676758 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01659536361694336 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.01618671417236328 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572305100> done in 0.015144586563110352 s]
157/162 DONE. [mean time: 0.01587941646575928 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.048833370208740234 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.04973578453063965 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.05273151397705078 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.04887962341308594 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.04886198043823242 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.049866676330566406 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0498354434967041 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.0483858585357666 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.04899859428405762 s]
[forward for c0 <hmdl.Conv2D object at 0x00000165722F6970> done in 0.04974770545959473 s]
158/162 DONE. [mean time: 0.049690866470336915 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04923582077026367 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.05086660385131836 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04887056350708008 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.050873517990112305 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.05038642883300781 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.047829627990722656 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.05088996887207031 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.04975128173828125 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.047095298767089844 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016503FE0B20> done in 0.05083966255187988 s]
159/162 DONE. [mean time: 0.049863767623901364 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.17887520790100098 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.1811380386352539 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.181060791015625 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.17752814292907715 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.18136286735534668 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.1809401512145996 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.17928814888000488 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.18239235877990723 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.18042969703674316 s]
[forward for c0 <hmdl.Conv2D object at 0x0000016572301A00> done in 0.1793673038482666 s]
160/162 DONE. [mean time: 0.18023827075958251 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7817187309265137 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7812924385070801 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7802832126617432 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7839076519012451 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.779313325881958 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7797470092773438 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7841508388519287 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7787103652954102 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.780522346496582 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231E400> done in 0.7845983505249023 s]
161/162 DONE. [mean time: 0.7814244270324707 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.241224527359009 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.227403163909912 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.228606700897217 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.2275238037109375 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.2285187244415283 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.2268309593200684 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.228332757949829 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.23149037361145 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.226499557495117 s]
[forward for c0 <hmdl.Conv2D object at 0x000001657231EA60> done in 3.2305221557617188 s]
162/162 DONE. [mean time: 3.2298986434936525 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION numba_cuda_viafft DONE. [time: 517.6161592006683 s]

============================================================================================================================================================================
TESTING IMPLEMENTATION keras...
1/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
1/162 DONE. [mean time: 0.057845783233642575 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
2/162 DONE. [mean time: 0.04216609001159668 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
3/162 DONE. [mean time: 0.04163579940795899 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
4/162 DONE. [mean time: 0.042278504371643065 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
5/162 DONE. [mean time: 0.04626076221466065 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
6/162 DONE. [mean time: 0.06742041110992432 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
7/162 DONE. [mean time: 0.0420576810836792 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
8/162 DONE. [mean time: 0.04223248958587646 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
9/162 DONE. [mean time: 0.04280264377593994 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
10/162 DONE. [mean time: 0.045191836357116696 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
11/162 DONE. [mean time: 0.04894304275512695 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
12/162 DONE. [mean time: 0.07393889427185059 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
13/162 DONE. [mean time: 0.041237831115722656 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
14/162 DONE. [mean time: 0.040789031982421876 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
15/162 DONE. [mean time: 0.04169130325317383 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
16/162 DONE. [mean time: 0.044141602516174314 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
17/162 DONE. [mean time: 0.05604164600372315 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162... [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
18/162 DONE. [mean time: 0.10127761363983154 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
19/162 DONE. [mean time: 0.04143853187561035 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
20/162 DONE. [mean time: 0.041330265998840335 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
21/162 DONE. [mean time: 0.04087047576904297 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
22/162 DONE. [mean time: 0.042726325988769534 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
23/162 DONE. [mean time: 0.04738738536834717 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
24/162 DONE. [mean time: 0.06557343006134034 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
25/162 DONE. [mean time: 0.06133801937103271 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
26/162 DONE. [mean time: 0.04064474105834961 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
27/162 DONE. [mean time: 0.040835094451904294 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
28/162 DONE. [mean time: 0.044057464599609374 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
29/162 DONE. [mean time: 0.05036325454711914 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
30/162 DONE. [mean time: 0.07978088855743408 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
31/162 DONE. [mean time: 0.042985725402832034 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
32/162 DONE. [mean time: 0.04109468460083008 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
33/162 DONE. [mean time: 0.04136664867401123 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
34/162 DONE. [mean time: 0.04556498527526855 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
35/162 DONE. [mean time: 0.05729210376739502 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162... [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
36/162 DONE. [mean time: 0.10746681690216064 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
37/162 DONE. [mean time: 0.043345308303833006 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
38/162 DONE. [mean time: 0.04133827686309814 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
39/162 DONE. [mean time: 0.04178473949432373 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
40/162 DONE. [mean time: 0.043227195739746094 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
41/162 DONE. [mean time: 0.05022144317626953 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
42/162 DONE. [mean time: 0.07732973098754883 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
43/162 DONE. [mean time: 0.040796208381652835 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
44/162 DONE. [mean time: 0.040892815589904784 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
45/162 DONE. [mean time: 0.04138209819793701 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
46/162 DONE. [mean time: 0.04492533206939697 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
47/162 DONE. [mean time: 0.05300981998443603 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
48/162 DONE. [mean time: 0.08908474445343018 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
49/162 DONE. [mean time: 0.04266366958618164 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
50/162 DONE. [mean time: 0.04086782932281494 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
51/162 DONE. [mean time: 0.04174959659576416 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
52/162 DONE. [mean time: 0.0452268123626709 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
53/162 DONE. [mean time: 0.05994799137115479 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162... [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
54/162 DONE. [mean time: 0.12047066688537597 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
55/162 DONE. [mean time: 0.04103376865386963 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
56/162 DONE. [mean time: 0.04162831306457519 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
57/162 DONE. [mean time: 0.041726326942443846 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
58/162 DONE. [mean time: 0.04219849109649658 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
59/162 DONE. [mean time: 0.046915435791015626 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
60/162 DONE. [mean time: 0.06229929924011231 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
61/162 DONE. [mean time: 0.04089019298553467 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
62/162 DONE. [mean time: 0.04169631004333496 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
63/162 DONE. [mean time: 0.04107820987701416 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
64/162 DONE. [mean time: 0.04318902492523193 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
65/162 DONE. [mean time: 0.05068469047546387 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
66/162 DONE. [mean time: 0.0778057336807251 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
67/162 DONE. [mean time: 0.0416433572769165 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
68/162 DONE. [mean time: 0.04122486114501953 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
69/162 DONE. [mean time: 0.04265873432159424 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
70/162 DONE. [mean time: 0.045244789123535155 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
71/162 DONE. [mean time: 0.05799689292907715 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162... [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
72/162 DONE. [mean time: 0.11051080226898194 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
73/162 DONE. [mean time: 0.04076969623565674 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
74/162 DONE. [mean time: 0.04202613830566406 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
75/162 DONE. [mean time: 0.04178318977355957 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
76/162 DONE. [mean time: 0.043001437187194826 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
77/162 DONE. [mean time: 0.0478299617767334 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
78/162 DONE. [mean time: 0.07007174491882324 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
79/162 DONE. [mean time: 0.041496109962463376 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
80/162 DONE. [mean time: 0.043729519844055174 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
81/162 DONE. [mean time: 0.04250557422637939 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
82/162 DONE. [mean time: 0.0457183837890625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
83/162 DONE. [mean time: 0.05608227252960205 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
84/162 DONE. [mean time: 0.08512670993804931 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
85/162 DONE. [mean time: 0.04142177104949951 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
86/162 DONE. [mean time: 0.042298746109008786 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
87/162 DONE. [mean time: 0.0413968563079834 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
88/162 DONE. [mean time: 0.04631564617156982 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
89/162 DONE. [mean time: 0.06026105880737305 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162... [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
90/162 DONE. [mean time: 0.11589789390563965 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
91/162 DONE. [mean time: 0.04114830493927002 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
92/162 DONE. [mean time: 0.0409853458404541 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
93/162 DONE. [mean time: 0.04163327217102051 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
94/162 DONE. [mean time: 0.0433488130569458 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
95/162 DONE. [mean time: 0.051208877563476564 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
96/162 DONE. [mean time: 0.07876739501953126 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
97/162 DONE. [mean time: 0.0414625883102417 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
98/162 DONE. [mean time: 0.0722811222076416 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
99/162 DONE. [mean time: 0.041480493545532224 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
100/162 DONE. [mean time: 0.04411845207214356 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
101/162 DONE. [mean time: 0.05369467735290527 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
102/162 DONE. [mean time: 0.09498484134674072 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
103/162 DONE. [mean time: 0.04089739322662354 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
104/162 DONE. [mean time: 0.04115939140319824 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
105/162 DONE. [mean time: 0.04155557155609131 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
106/162 DONE. [mean time: 0.046794795989990236 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
107/162 DONE. [mean time: 0.06151328086853027 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162... [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
108/162 DONE. [mean time: 0.12612574100494384 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
109/162 DONE. [mean time: 0.04019250869750977 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
110/162 DONE. [mean time: 0.04142332077026367 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
111/162 DONE. [mean time: 0.04111857414245605 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
112/162 DONE. [mean time: 0.042056488990783694 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
113/162 DONE. [mean time: 0.04664206504821777 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
114/162 DONE. [mean time: 0.06531643867492676 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
115/162 DONE. [mean time: 0.04154903888702392 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
116/162 DONE. [mean time: 0.04090774059295654 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
117/162 DONE. [mean time: 0.041465258598327635 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
118/162 DONE. [mean time: 0.04362308979034424 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
119/162 DONE. [mean time: 0.052717733383178714 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
120/162 DONE. [mean time: 0.08496575355529785 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
121/162 DONE. [mean time: 0.04143304824829101 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
122/162 DONE. [mean time: 0.04088647365570068 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
123/162 DONE. [mean time: 0.04200146198272705 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
124/162 DONE. [mean time: 0.04592180252075195 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
125/162 DONE. [mean time: 0.062070250511169434 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162... [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
126/162 DONE. [mean time: 0.1235964298248291 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
127/162 DONE. [mean time: 0.04323766231536865 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
128/162 DONE. [mean time: 0.04052910804748535 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
129/162 DONE. [mean time: 0.04143097400665283 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
130/162 DONE. [mean time: 0.042377662658691403 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
131/162 DONE. [mean time: 0.04867992401123047 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
132/162 DONE. [mean time: 0.07147877216339112 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
133/162 DONE. [mean time: 0.04087202548980713 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
134/162 DONE. [mean time: 0.041883015632629396 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
135/162 DONE. [mean time: 0.04129083156585693 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
136/162 DONE. [mean time: 0.044071197509765625 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
137/162 DONE. [mean time: 0.05296444892883301 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
138/162 DONE. [mean time: 0.08968617916107177 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
139/162 DONE. [mean time: 0.04199368953704834 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
140/162 DONE. [mean time: 0.0405839204788208 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
141/162 DONE. [mean time: 0.04193613529205322 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
142/162 DONE. [mean time: 0.04663105010986328 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
143/162 DONE. [mean time: 0.06355473995208741 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162... [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
144/162 DONE. [mean time: 0.13057527542114258 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
145/162 DONE. [mean time: 0.04015624523162842 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
146/162 DONE. [mean time: 0.04067397117614746 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
147/162 DONE. [mean time: 0.04065983295440674 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
148/162 DONE. [mean time: 0.043125319480896 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
149/162 DONE. [mean time: 0.051540923118591306 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
150/162 DONE. [mean time: 0.08172817230224609 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
151/162 DONE. [mean time: 0.042660069465637204 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
152/162 DONE. [mean time: 0.042029619216918945 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
153/162 DONE. [mean time: 0.04210474491119385 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
154/162 DONE. [mean time: 0.04535641670227051 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
155/162 DONE. [mean time: 0.057694196701049805 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
156/162 DONE. [mean time: 0.10130159854888916 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
157/162 DONE. [mean time: 0.04281141757965088 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
158/162 DONE. [mean time: 0.04180324077606201 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
159/162 DONE. [mean time: 0.04264557361602783 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
160/162 DONE. [mean time: 0.048420381546020505 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
161/162 DONE. [mean time: 0.0667492151260376 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162... [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
162/162 DONE. [mean time: 0.14078779220581056 s]
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTING IMPLEMENTATION keras DONE. [time: 107.87473607063293 s]
DO PICKLE... [to: ./tests/3818676499_test.bin]
DO PICKLE DONE. [time: 0.005975484848022461 s]

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION numpy_gemm:
1/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.0007994890213012696 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 0.4268978989105185
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): -0.43748852808110544
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -1.92789868551092
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): -0.9915637343083912
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): -0.9611464830912033
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): -0.7901117253063528
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): -1.8594592014810405
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.002495861053466797 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): 0.3192371548472192
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.5533240691068568
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -1.4467183511109893
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): -0.35860117218630383
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): -0.4214172615692873
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): -0.34707095209762373
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): -1.2277429273372131
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.009391260147094727 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): 0.2030333412678933
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 0.48252082089032144
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -0.8785964770189739
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): 0.07650018485328462
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): 0.14954303197883795
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): -0.05308747849183251
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): -0.646743036439016
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.03530681133270264 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): 0.1528186810901098
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): 0.5155875552135927
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -0.3747441696933623
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): 0.4011277808625733
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 0.6964522718309787
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): 0.13410191526553542
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): -0.07826111861335583
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.14273757934570314 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): 0.14880439699355377
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): 0.475362716112498
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): 0.07183715580864293
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 1.0338993943141697
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): 0.8676058347821066
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): 0.20348278220000404
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): 0.4893255432423679
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.5484492778778076 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): 0.13069616699001874
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): 0.4111006661531635
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): 0.31787235228180355
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 1.274749690749886
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): 0.9363612826822751
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): 0.1339335686972726
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): 0.9103450726067007
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.000999784469604492 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): 0.39969381378762897
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 0.5244073073969344
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -2.093766323584378
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): -0.5191060602136328
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): -1.0001397918624801
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): -0.7630578545740148
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): -1.6239389372519797
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.0028922557830810547 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): 0.11997189978062708
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 0.42100661457489846
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -1.64208286237339
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): -0.05813915111464331
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): -0.5351038039943607
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): -0.40396687741228743
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): -1.1644099855193148
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.011269974708557128 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): 0.03189777208089022
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.35410421287793786
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -1.0727326139268099
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 0.4842679595899542
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): 0.0646833640793008
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): -0.09780341317751304
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): -0.5795476533291707
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.04522416591644287 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): -0.0005317702688482149
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): 0.3687285670529586
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -0.5540575475887892
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 0.8436532091329566
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): 0.6190932482022468
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): 0.06287319603028839
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): 0.00031057665596874635
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.17572617530822754 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): -0.027945854634371367
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): 0.3119180468445063
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -0.1475905329134799
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 1.1181667109698477
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): 0.741330523673683
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): 0.09107247351277087
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): 0.5551454910445799
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.8213621377944946 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): 0.029144267421210335
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): 0.2861808825702475
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): 0.15241099587286097
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 1.2482459518935867
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): 0.8501130784151172
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): 0.15303606355838265
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): 1.0456617277961586
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0011967897415161132 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): 0.23525029406340053
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 0.47700014638594307
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -2.309639794568947
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): -0.46188963089142165
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): -1.1277958758272049
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): -0.7247390652306879
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): -1.537277957790302
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.003789687156677246 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): -0.08299597375785162
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 0.2788025110507816
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -1.80460166633636
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): 0.03938937932218839
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): -0.6262093996806791
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): -0.3614113732666616
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): -1.0319400387264444
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.01515958309173584 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): -0.1059526002866493
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): 0.2180579284693245
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -1.2280832786119293
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 0.5412616983971572
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): -0.03416615153842634
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): -0.12610599458466826
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): -0.43935821341045367
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.06207704544067383 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): -0.15088437881118488
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): 0.19859130975755085
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -0.7021552309010266
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 0.8590158874382706
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): 0.5528276718384127
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): -0.01828509204515278
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): 0.14808294274655515
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.24315590858459474 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): -0.16669441675684926
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): 0.19559329255175079
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -0.3337803204843524
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 1.0134740480842102
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): 0.6140005981292337
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): -0.010834590772839126
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): 0.6373739447031413
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.1779215812683106 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -0.09038587411951754
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): 0.16669180954484009
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): -0.028994042128876706
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 1.1538717990220064
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): 0.7269308128515334
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): -0.020397228007742945
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): 1.0656029190709273
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0010959625244140625 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 0.3419977397312232
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 0.7394189399770863
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -2.069636211574004
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): -0.4772220191010665
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): -0.9678044152340008
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): -0.7057252471004157
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): -1.5776086563644638
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.002592015266418457 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): 0.03458537565659384
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 0.5696967234188939
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -1.716187676417811
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): -0.10453100081785491
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): -0.5815140652181294
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): -0.40702655943554716
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): -1.2026306452728854
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.00907440185546875 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): -0.08634509024478979
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.4965813097549908
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -1.190855678101685
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): 0.3909454908237198
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): -0.03685064799275053
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): -0.2048077788778412
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): -0.6535916854432423
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.03580191135406494 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): -0.13512990437185643
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): 0.44786260546938333
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -0.6523243964464359
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 0.7594183976051896
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): 0.5207805666522795
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): -0.06429476249795721
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): -0.07678933678879445
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.1388364315032959 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): -0.15911568042349272
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): 0.4009375846857107
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -0.22685707078985007
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 0.9952501310776923
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): 0.6335514185670109
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): -0.036602672656969405
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): 0.46684069565906255
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.5905853033065795 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -0.1359943754249428
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): 0.37624223586441724
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): 0.0520239924560465
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 1.0767423873486712
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): 0.7004529354040681
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): -0.11407559536975845
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): 0.9545547337179137
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0010990381240844726 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 0.13908183301670787
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 0.5622349272173777
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -2.3404038895432935
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): -0.49846739788121475
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): -1.1779376752358393
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): -0.7454485688889746
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): -1.7467169905832067
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.0029907464981079102 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): -0.15640090098927337
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 0.43628633234315267
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -1.9270489688813266
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): -0.029384198319010308
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): -0.736918717435642
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): -0.447888423246358
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): -1.1332247581837978
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.012361526489257812 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): -0.24128554575121455
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): 0.3297373946459108
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -1.3304728731376763
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 0.46910091282984645
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): -0.11282593491356055
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): -0.19494594843496432
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): -0.5189614606148297
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.04753470420837402 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): -0.2808558182847108
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): 0.3559472262423714
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -0.8314404667580357
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 0.7226352643560775
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): 0.4290327371904507
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): -0.11528176752523427
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): 0.03299129485548902
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.17862412929534913 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): -0.3201244157407549
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): 0.30566649052281936
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -0.43843455066864606
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 0.8689507148469016
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): 0.48722319653226964
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): -0.12051352315340612
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): 0.5498263377456577
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.832661247253418 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -0.2594745206554894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): 0.23919875386032424
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): -0.14049742154765826
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): 1.0035316936858178
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): 0.5810636503455442
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): -0.10606651397182432
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 1.018569483758941
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0013976097106933594 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): 0.0009196443846980887
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 0.44762947664624714
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -2.5410739064711847
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): -0.3631396227520658
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): -1.301343638289798
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): -0.7095456716434658
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): -1.4879383505497568
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.003988099098205566 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): -0.306572672241366
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 0.2796989111349129
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -2.090219194953735
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): 0.0789886417094205
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): -0.8443923803003295
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): -0.44339060948264264
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): -1.013019710280941
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.015957450866699217 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): -0.39902124428563046
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): 0.23099334397239632
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.5177074660366678
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 0.4434117999370687
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): -0.24199749111213847
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): -0.27686859884031395
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): -0.41368682197752543
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.06305396556854248 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): -0.44143074525309556
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): 0.18702847735696151
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -1.0029307959961078
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 0.7020996910756387
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): 0.32134840200246717
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): -0.21552350520556762
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): 0.14108117100537731
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.24176878929138185 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): -0.46957419680919943
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): 0.17477491407909063
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -0.6413046360331579
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 0.7887523184479578
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): 0.3442503878990912
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): -0.22664309086171594
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): 0.6253054658293205
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 1.1996399879455566 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -0.3831053433028283
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): 0.13665331640343484
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): -0.3225721701006954
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): 0.9060207013626396
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): 0.4557140048137484
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): -0.21698149722751212
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 1.0477765482470267
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.001595616340637207 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): 0.24983493452144154
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 0.72687544928009
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -2.210886010114347
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): -0.3070778700455698
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): -1.006312094566357
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): -0.5949746258933096
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): -1.4340136210700534
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.003390979766845703 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): -0.1406094554214094
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 0.6284202296456926
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -1.8767554612663595
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): 0.008803338696665367
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): -0.6786761086256531
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): -0.4381396328824309
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): -1.0860271711637313
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.011269807815551758 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): -0.3086505709579249
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 0.45099222199821554
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -1.3922262273081285
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): 0.39432821537976526
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): -0.16452436803012746
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): -0.28932186048039804
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): -0.5691011888465717
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.038597941398620605 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): -0.4004051470493079
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): 0.41746324301097915
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -0.9303934083080649
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 0.6383251782569337
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): 0.3459255794702917
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): -0.26455186994772656
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): -0.04919292022222131
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.17143874168395995 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): -0.36505431993337406
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): 0.4243645342931068
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -0.4454500882235607
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 0.8248500612597605
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): 0.4618621239898165
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): -0.2072781371114165
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): 0.5332197818824355
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.6586482286453247 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): -0.3885763257288987
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): 0.33351915351144723
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): -0.20618170580103767
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): 0.8522253476495246
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): 0.4681515299864345
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -0.43432970792250997
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 0.9303070288097218
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0014955520629882813 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.029838124675000674
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 0.5738616761984878
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -2.509568004088481
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): -0.3474021999490242
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): -1.2753393412934517
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): -0.7037115176591848
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): -1.4358182651962252
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.003291153907775879 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): -0.4210085673424094
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 0.43933898612933403
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -2.1846134903578327
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): -0.053975887901446265
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): -0.9294661150516268
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): -0.5495014328750063
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): -1.094298821878568
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.012671375274658203 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): -0.520298633092189
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): 0.3258185876428307
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -1.6185711107199068
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 0.3827215702686463
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): -0.34183869621134333
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): -0.3851323114185323
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): -0.5139887537902985
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.04732723236083984 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): -0.5828115991169928
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): 0.29066790229982414
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -1.1223891032360198
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 0.5611028626237189
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): 0.1932453220124924
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): -0.35341315242617255
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): 0.022619812278554464
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.19551589488983154 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): -0.5847449092685049
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): 0.2613351351383079
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -0.6996555402887276
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 0.6842561125880028
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): 0.24429694021750029
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): -0.33540905759314293
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): 0.5668257406691727
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.8800740718841553 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -0.5399180432400177
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): 0.20067703656576863
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): -0.42530386025154476
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): 0.7540229045410426
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): 0.31748126745699656
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): -0.4128140676011162
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 0.9947158877788326
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0015956640243530273 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): -0.24250654625050985
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 0.4259968525179633
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -2.77997623802864
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): -0.3382157356916736
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): -1.5132450284920629
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): -0.6941190326695258
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): -1.4271167536429685
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.004587030410766602 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): -0.572832634552754
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 0.2155307963788074
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -2.3402961373690427
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): 0.041267647730202965
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): -1.054152197769501
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): -0.5372440471131222
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): -0.9498499515634141
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.017852306365966797 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): -0.6614957544613611
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): 0.1959451270079364
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -1.7612116069995636
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 0.3607864106070546
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): -0.457321215903579
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): -0.43618784350021683
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): -0.3689579522606038
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.06512608528137206 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): -0.7290395386408997
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): 0.14746178067601168
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -1.2801224778901705
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 0.5002385486943539
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): 0.059405302015647234
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): -0.4410195337142178
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): 0.1583589943323652
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.2484830379486084 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): -0.760669477837494
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): 0.14336050709730389
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -0.9237569978011914
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): 0.5316722857333486
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): 0.07514062096616975
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): -0.4972375182066663
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 0.6175221119677029
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: numpy_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 1.2351130247116089 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -0.6765194264446269
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): 0.09709548187391864
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): -0.6118860056683375
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): 0.6442179808436861
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): 0.17857057734126983
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): -0.4168462909088603
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 1.0108253870753239
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.0010938167572021485 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): 0.5631684317202506
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 0.7392943138462179
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -1.7781149614201148
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): -0.6073827929169232
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): -0.8781576665233496
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): -0.7194528142601654
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): -1.5741968331421503
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0030919551849365235 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): 0.09345691612985697
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 0.4499464808654204
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -1.3518391660447928
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): -0.022468574191720183
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): -0.3926041798072245
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): -0.2550700406269111
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): -1.1291556214111274
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.012866640090942382 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): -0.0325389148657474
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): 0.24140407020404694
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -0.7479129464320754
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 0.5071312708955721
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): 0.22666304218228853
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): 0.02596052100290359
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): -0.51094500367776
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.049268555641174314 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): -0.1137845861747838
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): 0.26235349717433665
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -0.25616274975972947
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 0.8636873712289634
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): 0.7824740826943025
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): 0.27374388420434154
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): 0.06727290862077388
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.20325231552124023 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -0.12522564484332732
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): 0.25305241616783963
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): 0.19324878379308044
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 1.094573924441676
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): 0.9513870071267692
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): 0.3568164581148397
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): 0.636719747146362
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.9368864059448242 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -0.07381919699829914
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): 0.21887221932236992
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): 0.5055319058180449
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 1.2112784945252026
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): 1.0820639803397727
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): 0.3660466752613027
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): 1.1772037758386364
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0013962030410766602 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 0.4461964862439158
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): 0.3679693692536474
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -1.9675088321286576
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): -0.40939961538887076
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): -0.9161335895559324
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): -0.7347093655478185
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): -1.4666705806469849
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.004383707046508789 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): 0.009863939527095526
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 0.18062630614411462
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -1.4765842727871317
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): 0.10712022230376164
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): -0.41053045870715016
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): -0.22019123443589897
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): -0.9782560998477546
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.019046616554260255 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): -0.12381481535902206
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): 0.14424809263177332
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -0.8815955919434558
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 0.6009833009651373
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): 0.21650503935906457
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): 0.12269228126666785
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): -0.3337936707930333
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.07920141220092773 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): -0.16869111671729564
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): 0.17398103834275955
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -0.347361020411322
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 0.9042047547485922
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): 0.8066650096805524
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): 0.3055203405432212
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): 0.26335952621674613
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.2869332551956177 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -0.2357638434839696
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): 0.13542662980840917
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): 0.027240837870686627
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 1.027744539993363
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): 0.8658668709320815
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): 0.3039826028597401
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): 0.7529040866743875
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 1.4708177328109742 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -0.1439696995482526
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): 0.13168478919133214
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): 0.3651682893531249
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): 1.158984072770885
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): 1.0097257508649062
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): 0.40613647656215623
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 1.276547254956477
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0019933700561523436 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 0.45635959210468957
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): 0.22164794541040178
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -2.097546298591692
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): -0.2265922599506085
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): -0.9914431267063646
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): -0.6511332419873387
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): -1.3199578048374285
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.006878972053527832 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): -0.12041425698680291
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): 0.10627490887690355
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -1.5668378868404114
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 0.25386499645938965
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): -0.4414361355634291
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): -0.10545070962994596
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): -0.7776356564226348
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.039297175407409665 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): -0.10285877731595433
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): 0.11697308858954872
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -0.8427094645434766
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 0.7611307614480454
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): 0.3024660127521568
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): 0.29341873954549347
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): -0.035646630464227655
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.16645944118499756 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): -0.1400160616092441
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): 0.10519689240789508
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -0.308631242207236
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 1.048246779140279
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): 0.9024186443615176
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): 0.4121610147597329
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): 0.5657398639464988
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.8276319980621338 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -0.0742823939509989
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): 0.2029899569725395
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): 0.14879739725565502
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 1.2151030352748726
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): 1.063291967495792
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): 0.5218152326233045
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): 1.1544325453896978
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 3.085149621963501 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -0.11174856684387291
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): 0.13402468150839525
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): 0.3486417456507125
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): 1.208402634835671
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): 1.0517439194929947
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): 0.3965994945485709
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 1.4458714993200827
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0012964487075805664 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): 0.3357415222377963
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 0.41495737480218536
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -2.012225770759989
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): -0.39821306901811176
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): -0.9729988572318234
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): -0.7360202302294069
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): -1.497582136538369
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.0032935857772827147 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): -0.16241319653936367
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 0.3726981512229364
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -1.6219910708122216
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): 0.010916151552864123
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): -0.5492516580429593
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): -0.3285366323975269
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): -1.1058505068469802
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.013663601875305176 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): -0.3026079132407259
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): 0.33054428750241766
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -1.0347099542764207
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 0.47878631554685974
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): 0.07143784072549421
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): -0.022005772942884378
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): -0.48543639219052853
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.053014826774597165 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): -0.3796141395576493
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): 0.2572096965207742
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -0.5177364445052149
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 0.7308254728308287
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): 0.6355950650042232
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): 0.10952658240107782
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): 0.09091437594955748
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.21517560482025147 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -0.39155386252599444
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): 0.24263754489393488
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): -0.0729317892951955
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 0.8770338222458584
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): 0.7412535938576842
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): 0.1528762961398353
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): 0.6530929985576546
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.9768812656402588 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -0.3470770737430667
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): 0.18197853120727228
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): 0.22221633447155464
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): 0.9585354084612696
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): 0.8269149096233774
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): 0.10482428886734123
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 1.1442988485218646
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0014949321746826171 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): 0.27331393503781654
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.33072515403205194
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -2.229053757940373
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): -0.37010979437077496
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): -1.1105022901955803
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): -0.7666728859893615
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): -1.4433858967483981
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.004886913299560547 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): -0.24919799928408104
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 0.2588698280803897
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -1.7309158576101893
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): 0.07160478738121079
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): -0.5861540412276871
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): -0.23204207453560685
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): -0.951740074633759
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.019046545028686523 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): -0.4265978069199148
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): 0.18060451892686508
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -1.1626059511871856
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 0.46747153579877576
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): -0.010905879004304477
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): -0.03263043020856888
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): -0.3486296798495135
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.0752027988433838 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): -0.4927564160314102
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): 0.13231836819218787
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -0.6557550965844807
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 0.70017629460548
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): 0.5592768261031855
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): 0.0819375296429751
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): 0.21614313509333957
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.290614652633667 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -0.524307445810083
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): 0.11851326084798497
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): -0.2667961549016378
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 0.7569065462464466
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): 0.606971073390059
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): 0.0895214311912116
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): 0.7144919038915363
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.4503830194473266 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -0.44391306794104196
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): 0.09149380353956177
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): 0.054072443504580896
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): 0.8787318860584613
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): 0.7259570337338734
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): 0.13451450795053163
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 1.2314168578860072
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.002090859413146973 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.17536142079912648
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.17536142079912648
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -2.3759251477330965
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): -0.24384451064328896
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): -1.210487127895209
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): -0.7428044580216461
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): -1.2969038314969465
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.007181978225708008 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): -0.37048655306805583
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): 0.044464434275985926
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -1.845802386266117
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 0.23845458971411745
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): -0.6697258086556004
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): -0.20859821842965717
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): -0.7700834093742751
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.040592002868652347 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): -0.38515850511321476
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): 0.08068291934214944
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -1.137502629139591
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 0.6554507704217805
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): 0.06987677241793476
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): 0.13963638019058353
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): -0.00852688132601363
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.1633227586746216 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): -0.44170055725173457
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): 0.1005970477299963
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -0.6301508190408454
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 0.821402013679166
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): 0.6532794041462517
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): 0.19593165135046312
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): 0.5473189794759846
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.733452033996582 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -0.4269261055973533
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): 0.142498300287262
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): -0.19436210490445396
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): 0.9036028053359068
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): 0.7337670182828286
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): 0.2540920354609132
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 1.0853349591840868
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 3.0606773614883425 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -0.42770165297459695
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): 0.11719398175342403
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): 0.04365229486801856
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): 0.9273116101415119
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): 0.7637631965495226
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): 0.1895494774124962
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 1.421742007209452
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0014959096908569336 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.17606703343222974
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 0.573991469202753
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -2.2609008690301353
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): -0.4724773668547503
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): -1.1108843502216552
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): -0.7845799314925702
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): -1.4394465739668698
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.00368647575378418 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): -0.3960123050125894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 0.31250514884186165
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -1.8682327444007254
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): 0.03452787290672957
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): -0.7170659106372496
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): -0.38000311031363343
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): -1.0460172222171296
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.015358996391296387 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): -0.5496604264612203
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): 0.284437104682526
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -1.2895999770284936
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 0.39724819990457344
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): -0.11145434745028411
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): -0.15746816298750724
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): -0.43307770729046063
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.05435435771942139 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): -0.6703168703950743
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): 0.21134951447157888
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -0.8185815718226799
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 0.5542760338029199
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): 0.4213493668464408
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): -0.11778417785570444
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): 0.09825715778433787
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.20866847038269043 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -0.7076322857678574
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): 0.1769752424153386
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): -0.3987150950084164
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): 0.596297764420987
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): 0.45498883011148183
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): -0.1237150043787112
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 0.6101115757887631
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.9983243465423584 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -0.6433366593795876
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): 0.13817924112806199
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): -0.07241299443171108
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): 0.689191320803063
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): 0.5496856411037986
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): -0.2541625858400406
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 1.1029251797572077
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0018951892852783203 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): 0.07470464974717156
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 0.37570869026505793
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -2.4355230656202553
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): -0.2398402974963127
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): -1.2599227670691002
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): -0.7986444783223987
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): -1.3400038171465103
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.005082416534423828 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): -0.5382585742782169
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 0.16317425087917106
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -2.0259712052185774
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): 0.08667845840013261
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): -0.8266538599889752
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): -0.36017263514513576
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): -1.1529546314202572
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.020644307136535645 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): -0.6857612576918404
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): 0.1341151029657605
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -1.4389990456158832
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 0.3922817987358447
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): -0.22544187670164448
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): -0.17493730646281933
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): -0.3030436034145353
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.08041179180145264 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): -0.7576925464429494
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): 0.1176036649123613
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -0.939177671091356
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 0.5062145629056076
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): 0.3442142755883087
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): -0.12404155984418848
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): 0.2606994730306151
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.3224369525909424 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -0.791231319588795
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): 0.147074534484595
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): -0.530093735993062
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): 0.5410875719249973
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): 0.37319383375937004
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): -0.11858200653848054
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 0.7785135708249663
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 1.7038455963134767 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -0.6858895010153242
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): 0.10529896425412945
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): -0.18407019654993179
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): 0.6635528318077004
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): 0.5056879521137517
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): -0.12597413693236245
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 1.2537759344824775
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0029951095581054687 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): 0.015179595005478391
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 0.2222949443932832
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -2.528247533158903
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): -0.06626372281798638
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): -1.3257223146685684
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): -0.7377032837415264
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): -1.1352829141675824
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.01026899814605713 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): -0.6043002256429894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): 0.16142568169678356
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -1.9975365284318942
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 0.276975653076283
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): -0.790475311573216
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): -0.1966193845406446
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): -0.6029408690605597
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.04618294239044189 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): -0.7830600703304343
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): 0.11419022591214588
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -1.3748547578412507
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 0.5469320287156376
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): -0.1453084067045128
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): -0.0352339022006942
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): 0.04585233908936229
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.20495026111602782 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -0.8290898927538277
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): 0.1611289095526897
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): -0.8222730381132247
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 0.6657233888992762
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): 0.476431023524846
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): 0.05638466863309774
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): 0.6414509177295017
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.7819811105728149 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -0.8818510460520624
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): 0.15336042237929465
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): -0.5553433073030228
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): 0.6505148468963782
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): 0.47599228036295327
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): 0.0005560635392884532
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 1.104227371284295
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: numpy_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 3.082359766960144 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -0.916710711702152
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): 0.10671074933287324
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): -0.25953931292829246
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): 0.6430432605549996
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): 0.47538629777561936
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): -0.019911155270813965
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 1.3880795965488932
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.00139617919921875 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 0.6689573422332785
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): 0.4470601481257547
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -1.7301202380074268
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): -0.36011584841527466
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): -0.8312189741089712
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): -0.6686204354263582
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): -1.4592039509722876
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.004488015174865722 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): 0.16185461554135155
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 0.2060572015467622
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -1.2327342746038616
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): 0.1617541549502913
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): -0.31582222987975106
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): -0.37259440376287895
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): -0.9651905952155055
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.01874725818634033 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): -0.07225486561190052
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): 0.19491471155273757
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -0.6439427298737296
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 0.5830606620113089
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): 0.3192298203016818
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): 0.23608363493476603
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): -0.3411002858263919
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.07441482543945313 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -0.18712349412071322
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): 0.16270118978089182
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): -0.13578148948926683
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): 0.9000926144619559
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 0.9001700061445894
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): 0.4525675553335148
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): 0.24782645375375992
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.28513882160186765 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -0.2420624083409177
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): 0.1519402527492685
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): 0.2740869580337245
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 1.019589860468619
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): 1.004495887924182
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): 0.499766734133151
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): 0.78627858016177
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 1.4217571020126343 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -0.16326480437676621
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): 0.12390877363822271
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): 0.6155298624128978
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): 1.1547284608820294
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): 1.159384071205164
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): 0.5452835478918939
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 1.337802909172275
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0019946575164794924 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 0.6021326722527229
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): 0.12501834016031158
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -1.8546325565117514
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): -0.2880203416226396
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): -0.8492429112566761
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): -0.5785912961675272
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): -1.3186926442483995
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.007081079483032227 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): 0.09528920026719691
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): 0.09537661790829345
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -1.3162158652741527
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 0.25246034286787683
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): -0.29867376177234406
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): -0.30514208538537857
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): -0.7617060240647716
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.03830158710479736 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): -0.048042585743484946
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): 0.10725405866157703
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -0.6167556682570329
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 0.7769631180812367
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): 0.42106973177077567
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): 0.42841432730144857
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): -0.034467607983020766
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.15869686603546143 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -0.12477369729697815
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): 0.10204712223669764
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): -0.09253327131838955
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): 1.0205920210096886
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 1.024623872269378
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): 0.6141061597097168
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): 0.560851927259898
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.6998989343643188 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -0.12490085091854522
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): 0.1820198293369818
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): 0.35439685627537454
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 1.175913825068643
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): 1.1522843795775666
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): 0.6925972892552614
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): 1.1230786029271675
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 3.146539306640625 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -0.09809882825364466
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): 0.16847424434595637
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): 0.6234595177359167
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): 1.2357585188025804
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): 1.234036013997265
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): 0.7358718806048159
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 1.5685892478423955
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0032911777496337892 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 0.6154204135334189
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): 0.07138759545285046
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -1.9263263132242043
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): -0.0377964260780619
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): -0.8754009097712924
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): -0.4664356914544624
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): -1.099995547451803
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.01433424949645996 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): 0.12010335659159252
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): 0.040257475530325014
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -1.2977804272050062
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 0.566668782562051
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): -0.23832741231580004
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): -0.15103144417278172
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): -0.4552046961190942
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.08803858757019042 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): 0.03094689171466956
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): 0.016921763442837297
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -0.5467924127361695
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 0.9458326477821167
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): 0.5479341693791002
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): 0.6241902870905016
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): 0.32140865887857906
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.3771019458770752 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -0.034424045317595145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): 0.065327058248153
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): -0.01211741934641639
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 1.1797136465733598
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): 1.1612437734890833
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): 0.7671092603515425
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): 0.914439846772585
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 1.707716131210327 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -0.027401131968765945
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): 0.1058291783279805
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): 0.41744873489964307
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): 1.286631428387784
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): 1.2681864047638787
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): 0.8355797752656224
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 1.4395321826464238
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 5.942421078681946 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -0.11885187903965835
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): 0.05848660196719358
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): 0.5739400642650674
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): 1.2298819177265683
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): 1.2210312724223702
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): 0.6820306473521007
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 1.6819574965582125
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0014981985092163085 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.47775063204008383
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): 0.39860745452596547
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -1.9923734441423737
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): -0.45062151755949015
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): -0.9740667645721475
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): -0.6960269307080956
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): -1.4602928447887433
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.005183625221252442 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): -0.1167215998348742
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 0.21064916706012507
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -1.4689139569194274
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): 0.1917086708923239
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): -0.43114553592892
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): -0.44721395825931054
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): -0.8931334517384915
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.018949413299560548 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): -0.37928716942813384
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): 0.17837336778422563
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -0.9313112690504959
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 0.43330653719438333
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): 0.11961654018920369
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): 0.09551941056744968
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): -0.33972937516360513
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.07600045204162598 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -0.4734921563555397
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): 0.11780011043876121
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): -0.409830251747457
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 0.7331307954222276
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): 0.7071828110136019
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): 0.26195599657243956
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): 0.25367917591065836
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.2987971782684326 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -0.5220743916381418
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): 0.142282665322237
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): 0.007522181809327696
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 0.7920819485960718
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): 0.7808354069887946
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): 0.2928849494473553
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): 0.7880266002138951
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 1.4518028259277345 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -0.4562181052651772
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): 0.08875957556053933
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): 0.328767645005481
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): 0.8833511197202562
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): 0.8919594948663028
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): 0.2770394705461648
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 1.3077305536769184
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.002190041542053223 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 0.43856036261513454
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): 0.2624777561366693
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -2.112471088226656
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): -0.23775464940215726
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): -1.0456424445180044
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): -0.5714937903524174
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): -1.270973807638957
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.007081174850463867 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): -0.1979517882203056
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): 0.06593220528436101
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -1.6192955860328058
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 0.2706857818471
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): -0.5336541783696118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): -0.44113230260018027
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): -0.7719326256639187
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.03670423030853272 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): -0.3691429649429642
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): 0.07032790223222592
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -0.9323082043535494
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 0.6490373472189636
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): 0.17113934500631622
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): 0.26012066859890853
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): -0.0511375080192122
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.157716703414917 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -0.43776332592010864
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): 0.08979681389723662
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): -0.38816984602064886
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 0.8218581191241637
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): 0.7811829728002442
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): 0.4054782323394351
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): 0.553722839508088
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.7271430015563964 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -0.4184028085192484
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): 0.1960701818436275
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): 0.07908185776349444
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): 0.9132417230334495
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): 0.8968253807019765
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): 0.4885076915838301
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 1.1376353705707773
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 3.0361964464187623 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -0.42222359905439844
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): 0.14366606123429163
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): 0.3212021965125037
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): 0.936151380581977
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): 0.9323302521747363
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): 0.4553650262225139
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 1.5296043451720893
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.00390927791595459 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 0.4173019333925351
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): 0.13082762885021412
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -2.1459882201533826
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 0.036948781779582864
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): -1.0552446835437919
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): -0.48504053102857736
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): -1.0310874870095448
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.015063667297363281 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): -0.22749035180477464
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): 0.11463044562737237
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -1.567314774115316
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 0.541424557147627
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): -0.4671654870061874
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): -0.2983564871802419
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): -0.4304232832426253
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.08506875038146973 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): -0.3615406888697215
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): 0.013423778600583422
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -0.8555399483853234
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 0.8169859628854302
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): 0.2733018822909592
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): 0.4496975630806347
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): 0.30718164857548336
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.3651982545852661 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -0.4650897576161295
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): 0.044516452647557596
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): -0.31724615638923775
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 0.9410240864861664
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): 0.8938990200109561
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): 0.548228550132512
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): 0.8938534975394118
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 1.5520025491714478 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -0.5096844853034291
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): 0.05022298976334387
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): 0.08375216578679982
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): 0.9703342619614657
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): 0.9412603152967376
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): 0.5819541827296562
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 1.3877444842026172
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 5.852478766441346 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -0.5627687661535898
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): 0.044770989493519354
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): 0.27166130725217935
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): 0.9379856240826575
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): 0.9259830433229849
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): 0.47092394028597073
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 1.6514788961312492
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0017951726913452148 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): 0.21388558788937853
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.2552678908030231
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -2.2117552209164018
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): -0.29077271943125027
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): -1.1325096452524275
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): -0.7161053792150609
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): -1.3496468647562674
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.00498659610748291 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): -0.4082450915026027
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): 0.10788234406930403
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -1.781905556235633
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 0.13040707315271977
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): -0.6981336384682483
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): -0.6461890963844792
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): -0.9115123828422227
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.022643351554870607 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): -0.6123829257587527
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): 0.15197849120498652
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -1.160307123081487
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 0.44857085765022764
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): -0.046549967695694874
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): -0.007999632964747686
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): -0.25422488070747556
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.07599306106567383 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -0.7731160287781613
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): 0.08814240754333653
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): -0.7193762382012376
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 0.49194798322492816
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): 0.4528967175671534
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): 0.026333869455672333
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): 0.2460416131840834
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.30532279014587405 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -0.8179101089239418
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): 0.10661286992480201
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): -0.2893342808538214
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): 0.5210633202903344
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): 0.5146328970176348
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): 0.04388019316975125
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 0.7726070297889689
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.5175724506378174 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -0.7502371910075456
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): 0.0626879049147508
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): 0.04593807057734379
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): 0.6143040901067663
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): 0.6219172952005366
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): -0.07225045823099074
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 1.2687776471122347
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.002692699432373047 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): 0.22727887179214493
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 0.2552478955235799
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -2.3206364854064976
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): -0.12863850754152706
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): -1.222057655996871
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): -0.6333870694947015
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): -1.1998336795052824
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.007780337333679199 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): -0.5278594911010145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): 0.05966308133502751
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -1.869481594050234
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 0.22935621328660522
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): -0.7584356495754576
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): -0.5938029808924837
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): -0.7325570281769997
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.0374997615814209 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): -0.7644693684353988
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): 0.018884491261069385
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -1.22035467191023
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 0.5012268737887255
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): -0.07988091929043856
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): 0.08026000007615755
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): -0.05030253400477209
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.16017231941223145 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -0.8765471120710956
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): 0.08616119524806608
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): -0.6869736233702913
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 0.5811110976892195
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): 0.5301901747621909
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): 0.1740953712706599
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): 0.5479487278968116
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.7299571752548217 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -0.878824322691951
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): 0.1821284414292247
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): -0.22605215860967282
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): 0.6405581366642739
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): 0.6127938614621355
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): 0.23681048477317537
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 1.1021652510293243
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 3.036572504043579 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -0.9053855793741421
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): 0.12387440256523198
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): 0.008113524551679028
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): 0.6449830891941533
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): 0.6391411152710474
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): 0.12507075362963252
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 1.4767673565806847
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.004089188575744629 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 0.1503360047700846
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): 0.08129361968133994
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -2.4294111829617693
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): 0.015488548884309495
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): -1.3154267457095554
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): -0.5891974001955935
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): -1.0199224697073712
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.014863538742065429 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): -0.6184064530977211
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): 0.06606806769515472
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -1.8777972841778279
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 0.366459392504483
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): -0.7529490266543543
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): -0.5241543502337871
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): -0.4490877320860821
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.08756248950958252 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): -0.793724958599431
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): -0.008954927118206835
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -1.1503669419335798
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 0.6359644398154937
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): 0.01036263346046128
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): 0.24453301061815913
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): 0.31244414021633854
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.3604439735412598 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -0.8820333373528978
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): 0.03974675417411561
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): -0.6358341774591879
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): 0.672064432764709
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): 0.6056485000110843
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): 0.3009907566832472
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 0.8718095614141036
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 1.5599599838256837 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -0.9066220297964336
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): 0.045267437457703945
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): -0.222324227130158
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): 0.6877345721083774
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): 0.6556802817423313
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): 0.30022647497035626
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 1.368667294559407
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: numpy_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 5.940302181243896 s [time for this implementation]
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -0.9468556318643431
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): 0.04075764156729398
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): -0.028347109331980834
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): 0.6527713758268617
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): 0.6377977716460066
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): 0.2646196438858721
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 1.6252435394596816
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION numpy_gemm DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION numba_jit_direct:
1/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.0002991676330566406 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): -0.4268978989105185
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): -0.8643864269916239
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -2.3547965844214382
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): -1.4184616332189097
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): -1.3880443820017219
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): -1.2170096242168713
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): -2.286357100391559
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0011966943740844727 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): -0.3192371548472192
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.23408691425963762
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -1.7659555059582086
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): -0.6778383270335231
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): -0.7406544164165066
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): -0.666308106944843
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): -1.5469800821844324
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.005884242057800293 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): -0.2030333412678933
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 0.2794874796224282
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -1.0816298182868673
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): -0.1265331564146087
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): -0.05349030928905536
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): -0.2561208197597257
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): -0.8497763777069092
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.02483360767364502 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): -0.15281868109010982
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): 0.36276887412348285
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -0.5275628507834721
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): 0.24830909977246343
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 0.5436335907408689
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): -0.01871676582457437
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): -0.23107979970346565
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.10132904052734375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -0.14880439699355377
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): 0.32655831911894423
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): -0.07696724118491086
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 0.8850949973206158
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): 0.7188014377885529
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): 0.05467838520645032
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): 0.3405211462488142
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.4059198617935181 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -0.13069616699001874
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): 0.2804044991631448
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): 0.18717618529178476
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 1.1440535237598675
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): 0.8056651156922564
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): 0.003237401707253862
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): 0.779648905616682
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0003983020782470703 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): -0.39969381378762897
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 0.12471349360930545
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -2.4934601373720073
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): -0.9187998740012618
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): -1.399833605650109
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): -1.1627516683616437
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): -2.023632751039609
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.0021941423416137694 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): -0.11997189978062707
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 0.30103471479427135
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -1.7620547621540172
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): -0.17811105089527038
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): -0.6550757037749879
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): -0.5239387771929144
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): -1.284381885299942
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.01047189235687256 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): -0.031897772080890216
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.3222064407970477
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -1.1046303860077
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 0.452370187509064
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): 0.03278559199841057
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): -0.12970118525840324
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): -0.6114454254100609
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.04527957439422607 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): 0.0005317702688482368
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): 0.36926033732180674
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -0.553525777319941
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 0.8441849794018048
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): 0.6196250184710949
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): 0.06340496629913656
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): 0.0008423469248170083
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.18740549087524414 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): 0.02794585463437135
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): 0.33986390147887763
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -0.11964467827910855
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 1.146112565604219
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): 0.7692763783080544
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): 0.11901832814714218
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): 0.5830913456789512
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.7680516242980957 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -0.029144267421210297
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): 0.25703661514903714
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): 0.12326672845165067
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 1.2191016844723763
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): 0.820968810993907
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): 0.12389179613717229
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): 1.0165174603749483
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.000696253776550293 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): -0.2352502940634005
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 0.2417498523225425
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -2.5448900886323473
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): -0.6971399249548222
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): -1.3630461698906053
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): -0.9599893592940885
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): -1.7725282518537024
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.004587745666503907 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): 0.08299597375785163
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 0.36179848480863314
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -1.7216056925785086
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): 0.12238535308004002
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): -0.5432134259228275
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): -0.27841539950881
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): -0.9489440649685926
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.01934816837310791 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): 0.10595260028664931
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): 0.3240105287559738
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -1.12213067832528
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 0.6472142986838064
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): 0.07178644874822296
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): -0.02015339429801893
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): -0.33340561312380435
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.08786489963531494 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): 0.15088437881118488
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): 0.3494756885687358
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -0.5512708520898417
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 1.0099002662494556
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): 0.7037120506495977
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): 0.13259928676603214
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): 0.2989673215577401
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.35692687034606935 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): 0.16669441675684926
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): 0.36228770930860005
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -0.16708590372750312
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 1.1801684648410595
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): 0.7806950148860828
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): 0.15585982598401013
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): 0.8040683614599905
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.4504482984542846 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): 0.09038587411951754
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): 0.2570776836643576
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): 0.06139183199064081
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 1.244257673141524
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): 0.817316686971051
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): 0.06998864611177459
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): 1.1559887931904447
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.000498652458190918 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): -0.3419977397312232
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 0.39742120024586314
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -2.411633951305227
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): -0.8192197588322897
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): -1.3098021549652241
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): -1.047722986831639
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): -1.919606396095687
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.0023936033248901367 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): -0.03458537565659382
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 0.5351113477623001
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -1.7507730520744047
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): -0.1391163764744488
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): -0.6160994408747232
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): -0.44161193509214103
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): -1.2372160209294794
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.01107039451599121 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): 0.08634509024478977
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.5829263999997806
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -1.1045105878568953
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): 0.47729058106850963
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): 0.049494442252039264
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): -0.11846268863305141
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): -0.5672465951984526
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.04886929988861084 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): 0.13512990437185643
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): 0.5829925098412397
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -0.5171944920745795
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 0.894548301977046
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): 0.6559104710241359
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): 0.07083514187389925
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): 0.05834056758306195
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.20027148723602295 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): 0.15911568042349267
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): 0.5600532651092034
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -0.06774139036635737
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 1.154365811501185
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): 0.7926670989905036
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): 0.1225130077665233
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): 0.6259563760825552
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.8077500820159912 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): 0.1359943754249428
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): 0.51223661128936
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): 0.1880183678809893
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 1.212736762773614
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): 0.8364473108290108
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): 0.02191878005518431
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): 1.0905491091428563
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0007978677749633789 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): -0.13908183301670787
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 0.42315309420066977
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -2.479485722560001
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): -0.6375492308979227
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): -1.3170195082525473
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): -0.8845304019056826
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): -1.8857988235999146
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.004287266731262207 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): 0.15640090098927337
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 0.592687233332426
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -1.770648067892053
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): 0.12701670267026308
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): -0.5805178164463686
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): -0.29148752225708463
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): -0.9768238571945246
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.021545553207397462 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): 0.24128554575121455
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): 0.5710229403971254
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -1.0891873273864616
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 0.710386458581061
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): 0.12845961083765403
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): 0.046339597316250196
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): -0.27767591486361515
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.09075417518615722 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): 0.2808558182847108
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): 0.6368030445270821
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -0.550584648473325
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 1.0034910826407881
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): 0.7098885554751615
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): 0.1655740507594765
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): 0.31384711314019975
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.37330563068389894 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): 0.32012441574075495
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): 0.6257909062635743
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -0.11831013492789114
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 1.1890751305876566
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): 0.8073476122730245
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): 0.1996108925873488
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): 0.8699507534864126
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.513362169265747 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): 0.2594745206554894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): 0.49867327451581367
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): 0.11897709910783119
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): 1.2630062143413074
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): 0.8405381710010336
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): 0.1534080066836652
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 1.2780440044144306
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0013946533203125 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): -0.0009196443846980978
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 0.44670983226154903
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -2.541993550855883
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): -0.3640592671367639
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): -1.3022632826744962
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): -0.710465316028164
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): -1.4888579949344547
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.008078646659851075 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): 0.306572672241366
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 0.5862715833762788
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -1.7836465227123692
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): 0.38556131395078647
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): -0.5378197080589636
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): -0.13681793724127672
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): -0.7064470380395751
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.03999307155609131 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): 0.39902124428563046
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): 0.6300145882580268
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.1186862217510376
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 0.8424330442226992
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): 0.15702375317349201
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): 0.12215264544531652
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): -0.014665577691894962
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.17423810958862304 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): 0.4414307452530955
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): 0.628459222610057
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -0.5615000507430122
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 1.1435304363287342
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): 0.7627791472555627
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): 0.22590724004752796
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): 0.5825119162584729
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.7128110647201538 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): 0.46957419680919943
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): 0.64434911088829
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -0.17173043922395853
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 1.2583265152571572
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): 0.8138245847082907
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): 0.2429311059474835
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): 1.0948796626385198
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 2.8983863592147827 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): 0.3831053433028283
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): 0.5197586597062632
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): 0.06053317320213296
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): 1.2891260446654678
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): 0.8388193481165768
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): 0.16612384607531624
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 1.4308818915498551
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0008976221084594727 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): -0.2498349345214415
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 0.47704051475864845
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -2.4607209446357885
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): -0.5569128045670113
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): -1.2561470290877985
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): -0.8448095604147511
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): -1.6838485555914948
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0046874284744262695 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): 0.1406094554214094
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 0.769029685067102
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -1.73614600584495
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): 0.14941279411807482
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): -0.5380666532042436
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): -0.29753017746102145
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): -0.9454177157423219
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.02293860912322998 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): 0.3086505709579249
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 0.7596427929561405
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -1.0835756563502035
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): 0.7029787863376902
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): 0.14412620292779754
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): 0.019328710477526913
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): -0.2604506178886467
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.09704413414001464 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): 0.40040514704930796
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): 0.8178683900602871
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -0.529988261258757
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 1.0387303253062417
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): 0.7463307265195996
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): 0.1358532771015814
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): 0.35121222682708664
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.3973409175872803 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): 0.3650543199333741
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): 0.7894188542264808
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -0.08039576829018664
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 1.1899043811931345
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): 0.8269164439231906
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): 0.15777618282195754
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): 0.8982741018158095
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.6114983081817627 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): 0.3885763257288987
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): 0.722095479240346
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): 0.18239461992786107
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): 1.2408016733784233
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): 0.8567278557153333
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -0.04575338219361117
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 1.3188833545386205
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0013962507247924805 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): -0.029838124675000677
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 0.544023551523487
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -2.5394061287634817
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): -0.3772403246240249
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): -1.3051774659684525
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): -0.7335496423341855
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): -1.465656389871226
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.008676743507385254 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): 0.4210085673424094
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 0.8603475534717435
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -1.7636049230154234
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): 0.3670326794409631
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): -0.5084575477092174
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): -0.12849286553259687
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): -0.6732902545361588
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.0419877290725708 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): 0.520298633092189
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): 0.8461172207350197
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -1.0982724776277177
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 0.9030202033608353
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): 0.17845993688084577
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): 0.13516632167365678
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): 0.006309879301890548
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.18110177516937256 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): 0.5828115991169928
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): 0.8734795014168169
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -0.5395775041190269
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 1.1439144617407115
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): 0.7760569211294852
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): 0.2293984466908202
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): 0.6054314113955472
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.7514965295791626 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): 0.5847449092685049
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): 0.8460800444068128
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -0.11491063102022267
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 1.2690010218565078
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): 0.8290418494860051
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): 0.24933585167536196
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): 1.1515706499376774
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 3.0509653091430664 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): 0.5399180432400177
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): 0.7405950798057863
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): 0.1146141829884729
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): 1.2939409477810602
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): 0.8573993106970142
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): 0.1271039756389014
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 1.5346339310188502
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.002788996696472168 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): 0.24250654625050985
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 0.6685033987684732
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -2.53746969177813
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): -0.0957091894411638
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): -1.270738482241553
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): -0.45161248641901597
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): -1.1846102073924587
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.01715395450592041 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): 0.572832634552754
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 0.7883634309315614
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -1.7674635028162886
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): 0.6141002822829569
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): -0.48131956321674707
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): 0.03558858743963179
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): -0.3770173170106601
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.08188230991363525 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): 0.661495754461361
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): 0.8574408814692975
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -1.0997158525382025
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 1.0222821650684155
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): 0.20417453855778206
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): 0.22530791096114425
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): 0.2925378022007573
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.3489751577377319 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): 0.7290395386408997
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): 0.8765013193169113
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -0.551082939249271
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 1.2292780873352536
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): 0.7884448406565469
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): 0.2880200049266819
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): 0.8873985329732648
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 1.4320765256881713 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): 0.760669477837494
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): 0.9040299849347978
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -0.16308751996369747
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): 1.2923417635708425
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): 0.8358100988036636
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): 0.2634319596308276
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 1.3781915898051968
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: numba_jit_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 5.864434337615966 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): 0.6765194264446269
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): 0.7736149083185456
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): 0.06463342077628945
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): 1.3207374072883131
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): 0.8550900037858967
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): 0.2596731355357667
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 1.6873448135199507
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.000299072265625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): -0.5631684317202507
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 0.17612588212596733
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -2.3412833931403654
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): -1.1705512246371739
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): -1.4413260982436003
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): -1.282621245980416
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): -2.137365264862401
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0024933099746704103 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): -0.09345691612985697
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 0.35648956473556337
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -1.4452960821746499
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): -0.11592549032157716
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): -0.4860610959370815
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): -0.34852695675676804
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): -1.2226125375409844
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.013867688179016114 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): 0.03253891486574737
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): 0.2739429850697944
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -0.7153740315663281
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 0.5396701857613194
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): 0.25920195704803595
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): 0.05849943586865103
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): -0.47840608881201263
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.06402571201324463 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): 0.11378458617478376
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): 0.3761380833491204
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -0.14237816358494568
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 0.9774719574037471
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): 0.8962586688690863
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): 0.38752847037912536
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): 0.18105749479555766
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.27118217945098877 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): 0.12522564484332735
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): 0.378278061011167
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): 0.3184744286364078
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 1.2197995692850032
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): 1.0766126519700965
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): 0.4820421029581671
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): 0.7619453919896894
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 1.1104682207107544 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): 0.07381919699829916
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): 0.29269141632066903
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): 0.579351102816344
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 1.285097691523502
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): 1.1558831773380718
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): 0.43986587225960183
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): 1.2510229728369358
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0004997491836547851 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): -0.44619648624391584
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): -0.07822711699026835
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -2.4137053183725734
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): -0.8555961016327865
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): -1.3623300757998482
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): -1.1809058517917344
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): -1.9128670668909007
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.004285264015197754 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): -0.00986393952709556
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 0.17076236661701902
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -1.486448212314227
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): 0.09725628277666609
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): -0.42039439823424574
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): -0.23005517396299452
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): -0.9881200393748503
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.025329852104187013 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): 0.12381481535902206
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): 0.2680629079907954
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -0.7577807765844337
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 0.7247981163241594
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): 0.3403198547180866
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): 0.24650709662568995
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): -0.20997885543401124
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.11679494380950928 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): 0.16869111671729564
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): 0.34267215506005516
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -0.17866990369402636
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 1.0728958714658878
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): 0.9753561263978481
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): 0.4742114572605169
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): 0.4320506429340418
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.4937927722930908 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): 0.23576384348396956
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): 0.37119047329237875
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): 0.2630046813546562
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 1.2635083834773324
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): 1.101630714416051
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): 0.5397464463437097
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): 0.9886679301583571
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 2.0489367723464964 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): 0.14396969954825264
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): 0.27565448873958476
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): 0.5091379889013775
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): 1.3029537723191378
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): 1.1536954504131587
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): 0.5501061761104088
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 1.4205169545047296
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0006969928741455078 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): -0.4563595921046896
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): -0.23471164669428782
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -2.553905890696382
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): -0.6829518520552981
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): -1.447802718811054
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): -1.1074928340920283
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): -1.7763173969421182
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.009076905250549317 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): 0.12041425698680293
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): 0.2266891658637065
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -1.4464236298536084
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 0.3742792534461926
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): -0.3210218785766261
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): 0.014963547356857024
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): -0.6572213994358318
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.04979894161224365 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): 0.10285877731595429
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): 0.219831865905503
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -0.7398506872275223
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 0.8639895387639998
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): 0.40532479006811106
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): 0.39627751686144774
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): 0.06721214685172666
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.22978649139404297 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): 0.14001606160924412
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): 0.2452129540171392
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -0.16861518059799183
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 1.188262840749523
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): 1.0424347059707617
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): 0.5521770763689771
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): 0.705755925555743
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.9820184946060181 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): 0.07428239395099895
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): 0.27727235092353847
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): 0.223079791206654
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 1.2893854292258715
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): 1.1375743614467908
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): 0.5960976265743034
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): 1.2287149393406969
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 3.990476870536804 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): 0.11174856684387292
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): 0.2457732483522681
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): 0.46039031249458545
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): 1.3201512016795438
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): 1.1634924863368676
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): 0.5083480613924438
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 1.5576200661639557
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0005984306335449219 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): -0.33574152223779624
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 0.07921585256438911
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -2.3479672929977853
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): -0.733954591255908
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): -1.3087403794696197
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): -1.0717617524672032
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): -1.8333236587761652
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.0047872066497802734 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): 0.16241319653936367
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 0.5351113477623001
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -1.459577874272858
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): 0.17332934809222778
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): -0.3868384615035957
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): -0.16612343585816328
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): -0.9434373103076165
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.027426671981811524 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): 0.3026079132407259
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): 0.6331522007431435
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -0.7321020410356947
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 0.7813942287875856
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): 0.3740457539662201
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): 0.28060214029784153
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): -0.1828284789498026
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.12706077098846436 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): 0.3796141395576492
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): 0.6368238360784235
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -0.13812230494756567
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 1.1104396123884779
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): 1.0152092045618726
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): 0.48914072195872704
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): 0.47052851550720676
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.5300866842269898 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): 0.39155386252599444
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): 0.6341914074199293
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): 0.318622073230799
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 1.2685876847718527
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): 1.1328074563836787
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): 0.5444301586658298
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): 1.044646861083649
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 2.172295260429382 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): 0.3470770737430667
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): 0.529055604950339
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): 0.5692934082146213
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): 1.3056124822043362
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): 1.173991983366444
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): 0.451901362610408
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 1.4913759222649312
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0007967233657836914 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): -0.27331393503781654
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.057411218994235486
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -2.5023676929781895
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): -0.6434237294085915
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): -1.3838162252333968
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): -1.0399868210271779
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): -1.7166998317862148
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.008674263954162598 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): 0.24919799928408104
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 0.5080678273644708
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -1.4817178583261081
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): 0.32080278666529183
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): -0.3369560419436061
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): 0.017155924748474227
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): -0.7025420753496779
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.05086441040039062 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): 0.4265978069199147
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): 0.6072023258467798
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -0.7360081442672708
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 0.8940693427186904
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): 0.4156919279156102
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): 0.39396737671134585
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): 0.07796812707040122
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.23387856483459474 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): 0.4927564160314101
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): 0.6250747842235981
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -0.16299868055307057
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 1.19293271063689
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): 1.0520332421345957
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): 0.5746939456743853
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): 0.7088995511247498
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.9719075441360474 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): 0.524307445810083
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): 0.642820706658068
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): 0.2575112909084452
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 1.2812139920565295
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): 1.131278519200142
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): 0.6138288770012946
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): 1.2387993497016192
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 4.030841994285583 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): 0.44391306794104196
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): 0.5354068714806037
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): 0.4979855114456229
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): 1.3226449539995033
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): 1.1698701016749153
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): 0.5784275758915737
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 1.675329925827049
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0013962507247924805 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): -0.17536142079912648
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.0
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -2.5512865685322232
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): -0.41920593144241547
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): -1.3858485486943355
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): -0.9181658788207726
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): -1.472265252296073
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.016855072975158692 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): 0.3704865530680558
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): 0.4149509873440417
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -1.4753158331980614
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 0.6089411427821733
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): -0.29923925558754466
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): 0.16188833463839863
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): -0.3995968563062193
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.09853692054748535 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): 0.3851585051132147
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): 0.4658414244553642
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -0.7523441240263763
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 1.0406092755349952
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): 0.45503527753114953
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): 0.5247948853037983
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): 0.3766316237872011
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.45159306526184084 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): 0.44170055725173457
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): 0.5422976049817309
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -0.1884502617891108
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 1.2631025709309005
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): 1.0949799613979865
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): 0.6376322086021977
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): 0.9890195367277194
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 1.9601884365081788 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): 0.4269261055973533
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): 0.5694244058846153
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): 0.23256400069289931
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): 1.33052891093326
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): 1.1606931238801819
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): 0.6810181410582664
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 1.51226106478144
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 8.194438576698303 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): 0.42770165297459695
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): 0.5448956347280209
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): 0.47135394784261553
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): 1.3550132631161087
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): 1.1914648495241196
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): 0.6172511303870931
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 1.849443660184049
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0009973287582397462 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): -0.17606703343222976
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 0.3979244357705232
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -2.436967902462365
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): -0.64854440028698
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): -1.286951383653885
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): -0.9606469649248001
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): -1.6155136073990994
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.009175372123718262 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): 0.39601230501258944
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 0.708517453854451
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -1.472220439388136
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): 0.430540177919319
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): -0.3210536056246601
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): 0.01600919469895603
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): -0.6500049172045402
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.05445318222045899 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): 0.5496604264612202
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): 0.8340975311437462
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -0.7399395505672735
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 0.9469086263657936
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): 0.4382060790109361
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): 0.39219226347371294
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): 0.11658271917075953
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.25441999435424806 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): 0.6703168703950744
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): 0.8816663848666532
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -0.1482647014276056
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 1.2245929041979942
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): 1.0916662372415151
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): 0.5525326925393699
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): 0.7685740281794122
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 1.0643614053726196 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): 0.7076322857678574
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): 0.884607528183196
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): 0.308917190759441
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): 1.3039300501888444
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): 1.1626211158793391
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): 0.5839172813891462
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 1.3177438615566204
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 4.391453838348388 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): 0.6433366593795876
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): 0.7815159005076496
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): 0.5709236649478766
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): 1.3325279801826506
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): 1.1930223004833862
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): 0.389174073539547
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 1.7462618391367954
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0015956878662109375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): -0.07470464974717156
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 0.3010040405178863
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -2.510227715367427
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): -0.3145449472434843
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): -1.3346274168162717
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): -0.8733491280695702
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): -1.4147084668936818
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.01755208969116211 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): 0.5382585742782169
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 0.7014328251573879
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -1.4877126309403608
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): 0.6249370326783494
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): -0.2883952857107583
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): 0.1780859391330811
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): -0.6146960571420403
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.10012938976287841 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): 0.6857612576918403
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): 0.8198763606576008
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -0.7532377879240428
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 1.078043056427685
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): 0.46031938099019587
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): 0.5108239512290209
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): 0.3827176542773051
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.4602695941925049 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): 0.7576925464429494
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): 0.8752962113553107
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -0.18148512464840655
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 1.263907109348557
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): 1.101906822031258
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): 0.633650986598761
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): 1.0183920194735645
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 1.993774914741516 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): 0.791231319588795
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): 0.9383058540733901
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): 0.26113758359573297
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): 1.3323188915137922
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): 1.164425153348165
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): 0.6726493130503145
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 1.5697448904137612
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 8.266463208198548 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): 0.6858895010153242
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): 0.7911884652694536
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): 0.5018193044653925
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): 1.3494423328230245
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): 1.191577453129076
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): 0.5599153640829617
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 1.9396654354978018
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0028922319412231444 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): -0.01517959500547834
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 0.20711534938780485
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -2.543427128164381
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): -0.08144331782346469
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): -1.3409019096740469
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): -0.7528828787470048
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): -1.1504625091730607
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.04128842353820801 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): 0.6043002256429894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): 0.765725907339773
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -1.3932363027889048
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 0.8812758787192724
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): -0.1861750859302267
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): 0.4076808411023448
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): 0.0013593565824297131
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.28024744987487793 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): 0.7830600703304343
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): 0.8972502962425802
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -0.5917946875108164
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 1.3299920990460719
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): 0.6377516636259215
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): 0.7478261681297401
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): 0.8289124094197966
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 1.382733130455017 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): 0.8290898927538277
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): 0.9902188023065175
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): 0.006816854640603024
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 1.494813281653104
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): 1.3055209162786738
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): 0.8854745613869255
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): 1.4705408104833295
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 5.957270336151123 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): 0.8818510460520625
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): 1.0352114684313571
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): 0.3265077387490396
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): 1.5323658929484407
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): 1.3578433264150158
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): 0.8824071095913509
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 1.9860784173363575
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: numba_jit_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 25.444506907463072 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): 0.916710711702152
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): 1.0234214610350252
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): 0.6571713987738595
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): 1.5597539722571516
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): 1.3920970094777714
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): 0.896799556431338
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 2.3047903082510452
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.00029921531677246094 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): -0.6689573422332785
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): -0.2218971941075238
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -2.3990775802407054
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): -1.029073190648553
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): -1.5001763163422497
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): -1.3375777776596367
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): -2.128161293205566
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.003091716766357422 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): -0.16185461554135158
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 0.04420258600541065
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -1.394588890145213
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): -0.00010046059106023828
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): -0.4776768454211026
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): -0.5344490193042304
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): -1.1270452107568572
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.022140765190124513 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): 0.07225486561190048
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): 0.2671695771646381
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -0.571687864261829
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 0.6553155276232094
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): 0.3914846859135823
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): 0.30833850054666656
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): -0.2688454202144914
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.11449406147003174 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): 0.1871234941207132
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): 0.34982468390160504
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): 0.05134200463144638
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): 1.087216108582669
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 1.0872935002653026
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): 0.639691049454228
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): 0.43494994787447316
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.49787321090698244 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): 0.2420624083409177
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): 0.39400266109018617
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): 0.5161493663746421
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 1.2616522688095368
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): 1.2465582962650996
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): 0.7418291424740686
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): 1.0283409885026877
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 2.0705713987350465 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): 0.16326480437676621
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): 0.287173578014989
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): 0.7787946667896639
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): 1.3179932652587958
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): 1.3226488755819301
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): 0.7085483522686602
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 1.5010677135490411
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0004985809326171875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): -0.6021326722527229
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): -0.4771143320924114
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -2.4567652287644743
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): -0.8901530138753626
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): -1.4513755835093989
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): -1.1807239684202502
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): -1.9208253165011224
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.005686044692993164 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): -0.09528920026719688
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): 8.74176410966102e-05
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -1.4115050655413497
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 0.1571711426006799
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): -0.39396296203954095
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): -0.40043128565257546
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): -0.8569952243319685
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.042781829833984375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): 0.048042585743484925
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): 0.15529664440506202
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -0.5687130825135479
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 0.8250057038247217
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): 0.4691123175142607
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): 0.47645691304493354
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): 0.013574977760464181
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.2115154266357422 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): 0.12477369729697814
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): 0.22682081953367575
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): 0.03224042597858851
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): 1.1453657183066668
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 1.149397569566356
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): 0.7388798570066949
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): 0.6856256245568761
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.9331171751022339 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): 0.12490085091854526
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): 0.306920680255527
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): 0.4792977071939198
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 1.3008146759871881
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): 1.2771852304961118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): 0.8174981401738066
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): 1.2479794538457127
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 3.94395534992218 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): 0.09809882825364466
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): 0.26657307259960106
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): 0.7215583459895614
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): 1.333857347056225
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): 1.3321348422509098
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): 0.8339707088584606
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 1.66668807609604
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0007978677749633789 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): -0.6154204135334189
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): -0.5440328180805685
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -2.5417467267576233
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): -0.6532168396114808
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): -1.4908213233047112
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): -1.0818561049878812
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): -1.7154159609852218
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.010871052742004395 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): -0.12010335659159252
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): -0.07984588106126748
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -1.4178837837965987
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 0.4465654259704585
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): -0.3584307689073925
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): -0.27113480076437424
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): -0.5753080527106867
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.08198344707489014 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): -0.030946891714669553
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): -0.0140251282718322
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -0.5777393044508391
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 0.9148857560674472
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): 0.5169872776644306
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): 0.593243395375832
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): 0.29046176716390953
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.408209228515625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): 0.03442404531759516
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): 0.09975110356574814
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): 0.022306625971178787
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 1.214137691890955
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): 1.1956678188066785
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): 0.8015333056691377
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): 0.9488638920901802
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 1.8189334630966187 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): 0.027401131968765983
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): 0.1332303102967464
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): 0.44484986686840905
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): 1.31403256035655
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): 1.2955875367326446
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): 0.8629809072343884
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 1.4669333146151897
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 7.812954616546631 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): 0.1188518790396584
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): 0.17733848100685198
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): 0.6927919433047257
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): 1.3487337967662267
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): 1.3398831514620284
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): 0.800882526391759
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 1.8008093755978707
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0004986763000488281 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): -0.47775063204008383
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): -0.07914317751411837
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -2.4701240761824574
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): -0.9283721495995739
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): -1.4518173966122314
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): -1.1737775627481795
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): -1.9380434768288273
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.006781959533691406 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): 0.11672159983487418
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 0.3273707668949992
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -1.352192357084553
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): 0.3084302707271981
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): -0.31442393609404584
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): -0.33049235842443636
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): -0.7764118519036172
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.045381927490234376 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): 0.3792871694281339
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): 0.5576605372123595
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -0.552024099622362
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 0.8125937066225173
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): 0.4989037096173376
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): 0.47480657999558357
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): 0.039557794264528774
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.2261040449142456 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): 0.47349215635553965
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): 0.5912922667943009
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): 0.0636619046080827
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 1.2066229517777671
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): 1.1806749673691415
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): 0.7354481529279793
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): 0.727171332266198
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.9941476345062256 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): 0.522074391638142
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): 0.6643570569603789
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): 0.5295965734474697
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 1.3141563402342138
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): 1.3029097986269365
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): 0.8149593410854973
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): 1.310100991852037
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 4.150742030143737 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): 0.45621810526517725
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): 0.5449776808257166
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): 0.7849857502706582
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): 1.3395692249854334
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): 1.34817760013148
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): 0.733257575811342
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 1.7639486589420956
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0007977962493896484 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): -0.43856036261513454
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): -0.17608260647846516
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -2.55103145084179
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): -0.6763150120172917
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): -1.4842028071331388
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): -1.010054152967552
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): -1.7095341702540914
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.011170101165771485 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): 0.1979517882203056
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): 0.26388399350466657
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -1.4213437978125003
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 0.46863757006740564
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): -0.3357023901493062
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): -0.2431805143798747
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): -0.5739808374436132
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.08587348461151123 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): 0.36914296494296417
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): 0.4394708671751901
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -0.5631652394105853
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 1.0181803121619277
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): 0.5402823099492805
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): 0.6292636335418728
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): 0.31800545692375204
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.43215646743774416 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): 0.4377633259201087
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): 0.5275601398173453
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): 0.04959347989945977
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 1.2596214450442724
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): 1.2189462987203528
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): 0.8432415582595437
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): 0.9914861654281966
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 1.905560040473938 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): 0.4184028085192484
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): 0.6144729903628758
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): 0.49748466628274274
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): 1.331644531552698
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): 1.3152281892212248
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): 0.9069105001030785
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 1.5560381790900257
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 8.027003765106201 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): 0.4222235990543985
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): 0.56588966028869
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): 0.7434257955669021
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): 1.3583749796363753
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): 1.3545538512291346
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): 0.8775886252769124
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 1.9518279442264876
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.001495528221130371 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): -0.4173019333925351
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): -0.286474304542321
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -2.5632901535459176
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): -0.38035315161295224
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): -1.472546616936327
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): -0.9023424644211124
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): -1.4483894204020797
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.025434374809265137 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): 0.22749035180477462
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): 0.34212079743214696
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -1.3398244223105413
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 0.7689149089524017
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): -0.2396751352014127
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): -0.07086613537546735
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): -0.20293293143785068
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.19557383060455322 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): 0.36154068886972146
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): 0.3749644674703049
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -0.493999259515602
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 1.1785266517551518
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): 0.6348425711606807
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): 0.8112382519503561
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): 0.6687223374452048
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 1.065659475326538 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): 0.46508975761612953
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): 0.5096062102636871
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): 0.14784360122689172
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 1.406113844102296
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): 1.3589887776270855
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): 1.0133183077486416
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): 1.3589432551555412
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 5.018534517288208 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): 0.509684485303429
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): 0.559907475066773
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): 0.5934366510902289
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): 1.4800187472648947
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): 1.4509448006001666
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): 1.0916386680330852
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 1.8974289695060462
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 21.384968400001526 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): 0.5627687661535898
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): 0.6075397556471092
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): 0.8344300734057691
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): 1.5007543902362472
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): 1.4887518094765746
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): 1.0336927064395607
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 2.214247662284839
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0010970354080200196 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): -0.21388558788937856
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.041382302913644545
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -2.42564080880578
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): -0.5046583073206288
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): -1.3463952331418059
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): -0.9299909671044394
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): -1.563532452645646
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.012765836715698243 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): 0.40824509150260263
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): 0.5161274355719067
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -1.3736604647330302
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 0.5386521646553224
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): -0.28988854696564564
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): -0.23794400488187661
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): -0.50326729133962
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.0927520751953125 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): 0.6123829257587529
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): 0.7643614169637393
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -0.5479241973227341
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 1.0609537834089804
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): 0.5658329580630579
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): 0.6043832927940052
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): 0.35815804505127713
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.45070250034332277 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): 0.7731160287781613
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): 0.8612584363214978
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): 0.05373979057692366
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 1.2650640120030894
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): 1.2260127463453145
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): 0.7994498982338336
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): 1.0191576419622446
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 2.0075636863708497 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): 0.8179101089239418
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): 0.9245229788487438
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): 0.5285758280701203
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): 1.338973429214276
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): 1.3325430059415766
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): 0.8617903020936931
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 1.5905171387129107
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 8.538599133491516 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): 0.7502371910075456
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): 0.8129250959222963
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): 0.7961752615848894
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): 1.364541281114312
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): 1.3721544862080823
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): 0.6779867327765549
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 2.01901483811978
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0015955448150634765 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): -0.22727887179214493
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 0.02796902373143499
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -2.5479153571986424
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): -0.355917379333672
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): -1.4493365277890158
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): -0.8606659412868465
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): -1.4271125512974274
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.026233601570129394 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): 0.5278594911010145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): 0.5875225724360419
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -1.3416221029492197
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 0.7572157043876196
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): -0.2305761584744432
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): -0.0659434897914693
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): -0.2046975370759853
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.21802077293395997 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): 0.7644693684353988
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): 0.7833538596964682
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -0.45588530347483136
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 1.2656962422241245
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): 0.6845884491449602
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): 0.8447293685115563
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): 0.7141668344306267
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 1.2054094076156616 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): 0.8765471120710956
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): 0.9627083073191616
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): 0.18957348870080423
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 1.4576582097603152
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): 1.4067372868332866
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): 1.0506424833417556
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): 1.4244958399679073
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 5.522321724891663 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): 0.878824322691951
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): 1.0609527641211758
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): 0.6527721640822782
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): 1.5193824593562248
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): 1.4916181841540865
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): 1.1156348074651263
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 1.9809895737212755
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 24.421325635910033 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): 0.9053855793741422
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): 1.0292599819393742
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): 0.9134991039258212
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): 1.5503686685682954
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): 1.5445266946451897
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): 1.0304563330037746
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 2.382152935954827
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0028926849365234373 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): -0.15033600477008463
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): -0.06904238508874472
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -2.579747187731854
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): -0.13484745588577515
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): -1.46576275047964
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): -0.7395334049656781
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): -1.1702584744774558
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.06173460483551026 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): 0.6184064530977211
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): 0.6844745207928759
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -1.2593908310801067
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 0.984865845602204
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): -0.1345425735566332
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): 0.09425210286393404
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): 0.169318721011639
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.5445566415786743 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): 0.793724958599431
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): 0.7847700314812243
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -0.35664198333414887
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 1.4296893984149248
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): 0.8040875920598923
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): 1.0382579692175902
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): 1.1061690988157695
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 2.7470787286758425 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): 0.8820333373528978
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): 0.9217800915270135
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): 0.2461991598937099
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): 1.5540977701176066
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): 1.4876818373639822
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): 1.183024094036145
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 1.7538428987670014
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 12.58158881664276 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): 0.9066220297964336
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): 0.9518894672541375
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): 0.6842978026662757
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): 1.594356601904811
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): 1.5623023115387649
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): 1.2068485047667898
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 2.2752893243558407
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: numba_jit_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 52.56106662750244 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): 0.946855631864343
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): 0.987613273431637
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): 0.9185085225323623
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): 1.599627007691205
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): 1.5846534035103497
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): 1.2114752757502152
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 2.5720991713240244
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION numba_jit_direct DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION numba_jit_gemm:
1/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.0021892786026000977 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): 0.43748852808110544
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 0.8643864269916239
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -1.4904101574298143
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): -0.5540752062272858
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): -0.5236579550100978
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): -0.3526231972252474
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): -1.4219706733999349
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0006980657577514649 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): -0.5533240691068568
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): -0.23408691425963765
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -2.000042420217846
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): -0.9119252412931607
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): -0.9747413306761442
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): -0.9003950212044806
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): -1.78106699644407
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.003091740608215332 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): -0.48252082089032144
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): -0.2794874796224282
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -1.3611172979092954
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): -0.40602063603703686
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): -0.33297778891148355
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): -0.5356082993821539
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): -1.1292638573293374
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.010771369934082032 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): -0.5155875552135927
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): -0.36276887412348285
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -0.8903317249069549
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): -0.11445977435101942
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 0.18086471661738604
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): -0.38148563994805723
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): -0.5938486738269485
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.04777224063873291 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -0.4753627161124979
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): -0.3265583191189442
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): -0.403525560303855
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 0.5585366782016717
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): 0.39224311866960865
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): -0.2718799339124939
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): 0.013962827129869928
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.212831449508667 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -0.41110066615316354
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): -0.2804044991631448
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): -0.09322831387136
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 0.8636490245967225
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): 0.5252606165291117
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): -0.27716709745589097
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): 0.4992444064535372
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.00029888153076171873 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): -0.5244073073969344
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): -0.12471349360930543
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -2.6181736309813126
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): -1.0435133676105672
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): -1.5245470992594146
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): -1.2874651619709492
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): -2.148346244648914
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.0010970592498779296 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): -0.4210066145748984
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): -0.30103471479427135
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -2.0630894769482886
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): -0.47914576568954176
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): -0.9561104185692593
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): -0.8249734919871858
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): -1.5854166000942134
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.004986763000488281 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): -0.35410421287793786
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): -0.32220644079704763
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -1.4268368268047478
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 0.1301637467120163
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): -0.28942084879863716
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): -0.45190762605545093
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): -0.9336518662071086
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.01934826374053955 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): -0.36872856705295853
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): -0.3692603373218068
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -0.9227861146417478
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 0.474924642079998
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): 0.25036468114928817
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): -0.3058553710226702
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): -0.36841799039698975
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.08568768501281739 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): -0.31191804684450636
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): -0.3398639014788777
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -0.4595085797579862
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 0.8062486641253414
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): 0.4294124768291767
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): -0.2208455733317355
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): 0.24322744420007356
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.42496562004089355 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -0.2861808825702475
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): -0.2570366151490372
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): -0.1337698866973865
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 0.9620650693233392
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): 0.5639321958448698
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): -0.1331448190118649
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): 0.759480845225911
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.00039904117584228517 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): -0.47700014638594307
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): -0.24174985232254248
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -2.78663994095489
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): -0.9388897772773648
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): -1.6047960222131479
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): -1.201739211616631
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): -2.014278104176245
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.00199434757232666 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): -0.27880251105078163
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): -0.3617984848086332
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -2.0834041773871417
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): -0.23941313172859316
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): -0.9050119107314607
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): -0.6402138843174432
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): -1.3107425497772258
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.009175491333007813 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): -0.21805792846932456
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): -0.3240105287559738
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -1.4461412070812538
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 0.3232037699278326
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): -0.2522240800077509
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): -0.34416392305399274
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): -0.6574161418797781
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.03929522037506104 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): -0.19859130975755088
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): -0.3494756885687358
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -0.9007465406585775
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 0.6604245776807198
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): 0.3542363620808619
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): -0.21687640180270365
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): -0.0505083670109957
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.15498566627502441 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): -0.1955932925517508
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): -0.36228770930860005
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -0.5293736130361032
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 0.8178807555324594
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): 0.4184073055774828
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): -0.2064278833245899
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): 0.44178065215139056
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.8024621725082397 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): -0.16669180954484014
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -0.2570776836643577
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): -0.1956858516737168
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 0.9871799894771663
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): 0.5602390033066933
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): -0.18708903755258302
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): 0.8989111095260871
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.00019969940185546876 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): -0.7394189399770863
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): -0.39742120024586314
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -2.8090551515510906
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): -1.2166409590781528
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): -1.7072233552110871
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): -1.4451441870775021
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): -2.3170275963415503
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.0006981372833251953 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): -0.5696967234188939
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): -0.5351113477623001
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -2.285884399836705
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): -0.6742277242367488
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): -1.1512107886370233
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): -0.9767232828544411
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): -1.7723273686917793
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.0028922557830810547 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): -0.49658130975499076
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): -0.5829263999997806
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -1.687436987856676
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): -0.10563581893127097
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): -0.5334319577477413
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): -0.701389088632832
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): -1.1501729951982331
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.01276566982269287 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): -0.4478626054693834
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): -0.5829925098412397
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -1.1001870019158193
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 0.3115557921358063
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): 0.07291796118289613
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): -0.5121573679673405
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): -0.5246519422581778
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.05515258312225342 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): -0.4009375846857108
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): -0.5600532651092034
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -0.6277946554755608
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 0.5943125463919816
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): 0.2326138338813001
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): -0.43754025734268015
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): 0.06590311097335176
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.24833641052246094 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): -0.3762422358644173
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -0.51223661128936
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): -0.3242182434083708
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 0.7005001514842539
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): 0.32421069953965076
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): -0.4903178312341757
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): 0.5783124978534964
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.00030114650726318357 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): -0.5622349272173777
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): -0.4231530942006698
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -2.902638816760671
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): -1.0607023250985925
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): -1.7401726024532171
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): -1.3076834961063524
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): -2.3089519178005844
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.0010951995849609376 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): -0.43628633234315267
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): -0.592687233332426
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -2.3633353012244793
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): -0.46567053066216296
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): -1.1732050497787947
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): -0.8841747555895106
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): -1.5695110905269505
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.005785417556762695 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): -0.3297373946459108
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): -0.5710229403971253
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -1.660210267783587
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 0.13936351818393564
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): -0.4425633295594713
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): -0.5246833430808752
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): -0.8486988552607405
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.02094419002532959 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): -0.35594722624237135
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): -0.6368030445270821
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -1.187387693000407
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 0.36668803811370604
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): 0.0730855109480793
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): -0.47122899376760563
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): -0.3229559313868824
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.0883636474609375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): -0.3056664905228193
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): -0.6257909062635743
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -0.7441010411914654
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 0.5632842243240823
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): 0.1815567060094503
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): -0.42618001367622543
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): 0.2441598472228384
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.48003134727478025 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): -0.23919875386032421
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -0.4986732745158137
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): -0.3796961754079825
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): 0.7643329398254938
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): 0.34186489648521995
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): -0.3452652678321485
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 0.7793707298986169
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0004986047744750977 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): -0.4476294766462471
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): -0.44670983226154903
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -2.988703383117432
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): -0.810769099398313
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): -1.7489731149360452
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): -1.157175148289713
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): -1.9355678271960037
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.0020944356918334963 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): -0.27969891113491285
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): -0.5862715833762788
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -2.3699181060886483
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): -0.2007102694254924
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): -1.1240912914352423
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): -0.7230895206175556
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): -1.292718621415854
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.00937497615814209 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): -0.23099334397239638
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): -0.6300145882580268
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.7487008100090642
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 0.21241845596467235
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): -0.4729908350845348
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): -0.5078619428127104
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): -0.6446801659499217
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.040990567207336424 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): -0.18702847735696151
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): -0.628459222610057
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -1.1899592733530693
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 0.5150712137186773
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): 0.13431992464550563
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): -0.4025519825625291
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): -0.04594730635158423
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.16166846752166747 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): -0.17477491407909063
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): -0.64434911088829
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -0.8160795501122485
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 0.6139774043688672
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): 0.16947547382000058
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): -0.4014180049408066
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): 0.45053055175022977
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.875785231590271 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): -0.1366533164034348
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -0.5197586597062632
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): -0.45922548650413025
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): 0.7693673849592046
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): 0.31906068841031354
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): -0.3536348136309469
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 0.9111232318435919
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.00029926300048828126 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): -0.72687544928009
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): -0.47704051475864845
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -2.9377614593944372
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): -1.0339533193256598
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): -1.733187543846447
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): -1.3218500751733997
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): -2.1608890703501435
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0007978200912475586 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): -0.6284202296456926
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): -0.769029685067102
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -2.505175690912052
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): -0.6196168909490273
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): -1.3070963382713456
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): -1.0665598625281234
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): -1.714447400809424
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.003989553451538086 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): -0.45099222199821554
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): -0.7596427929561405
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -1.843218449306344
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): -0.05666400661845023
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): -0.6155165900283429
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): -0.7403140824786135
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): -1.0200934108447872
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.014760494232177734 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): -0.41746324301097915
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): -0.8178683900602871
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -1.3478566513190442
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 0.22086193524595457
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): -0.07153766354068745
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): -0.6820151129587056
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): -0.46665616323320047
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.06452744007110596 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): -0.4243645342931067
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): -0.7894188542264807
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -0.8698146225166674
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 0.40048552696665374
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): 0.03749758969670978
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): -0.6316426714045232
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): 0.10885524758932871
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.30558664798736573 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): -0.33351915351144723
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): -0.722095479240346
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): -0.5397008593124849
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): 0.5187061941380774
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): 0.13463237647498724
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -0.7678488614339573
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 0.5967878752982746
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0003989696502685547 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): -0.5738616761984878
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): -0.544023551523487
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -3.0834296802869687
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): -0.9212638761475119
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): -1.8492010174919395
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): -1.2775731938576727
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): -2.009679941394713
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.0011967658996582032 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): -0.43933898612933403
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): -0.8603475534717434
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -2.623952476487167
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): -0.49331487403078034
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): -1.3688051011809608
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): -0.9888404190043404
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): -1.5336378080079023
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.005984187126159668 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): -0.32581858764283067
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): -0.8461172207350197
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -1.9443896983627376
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 0.05690298262581558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): -0.667657283854174
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): -0.710950899061363
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): -0.8398073414331292
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.024235010147094727 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): -0.29066790229982414
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): -0.8734795014168169
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -1.4130570055358438
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 0.27043496032389475
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): -0.09742258028733172
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): -0.6440810547259966
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): -0.2680480900212696
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.10711417198181153 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): -0.26133513513830786
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): -0.8460800444068128
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -0.9609906754270354
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 0.42292097744969487
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): -0.017038194920807586
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): -0.5967441927314509
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): 0.3054906055308647
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.5544242143630982 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): -0.2006770365657686
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -0.7405950798057863
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): -0.6259808968173134
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): 0.553345867975274
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): 0.116804230891228
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): -0.6134911041668849
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 0.794038851213064
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0005983352661132812 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): -0.42599685251796326
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): -0.6685033987684732
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -3.2059730905466033
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): -0.7642125882096369
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): -1.9392418810100263
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): -1.120115885187489
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): -1.853113606160932
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.002792549133300781 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): -0.21553079637880737
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): -0.7883634309315615
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -2.55582693374785
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): -0.17426314864860443
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): -1.2696829941483085
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): -0.7527748434919296
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): -1.1653807479422216
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.011369705200195312 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): -0.19594512700793645
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): -0.8574408814692974
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -1.9571567340075
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 0.16484128359911812
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): -0.6532663429115154
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): -0.6321329705081532
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): -0.5649030792685402
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.04637598991394043 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): -0.14746178067601173
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): -0.8765013193169113
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -1.4275842585661822
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 0.3527767680183422
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): -0.08805647866036452
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): -0.5884813143902295
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): 0.010897213656353395
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.17862253189086913 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): -0.1433605070973039
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): -0.9040299849347978
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -1.0671175048984953
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): 0.38831177863604466
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): -0.06821988613113415
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): -0.6405980253039703
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 0.474161604870399
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: numba_jit_gemm, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.9876685380935669 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): -0.09709548187391867
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -0.7736149083185456
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): -0.7089814875422561
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): 0.5471224989697674
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): 0.08147509546735114
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): -0.513941772782779
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 0.9137299052014052
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.00019936561584472657 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): -0.7392943138462179
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): -0.17612588212596733
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -2.5174092752663326
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): -1.3466771067631411
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): -1.6174519803695675
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): -1.4587471281063835
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): -2.313491146988368
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0010972023010253906 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): -0.4499464808654204
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): -0.3564895647355634
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -1.8017856469102134
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): -0.4724150550571406
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): -0.842550660672645
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): -0.7050165214923314
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): -1.579102102276548
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.007380080223083496 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): -0.24140407020404694
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): -0.2739429850697944
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -0.9893170166361224
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 0.2657272006915251
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): -0.014741028021758475
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): -0.2154435492011433
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): -0.7523490738818069
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.02692875862121582 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): -0.2623534971743366
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): -0.3761380833491204
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -0.5185162469340662
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 0.6013338740546268
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): 0.5201205855199659
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): 0.011390387030004837
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): -0.19508058855356278
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.11349666118621826 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): -0.2530524161678397
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -0.37827806101116696
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): -0.059803632374759184
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 0.8415215082738363
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): 0.6983345909589294
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): 0.10376404194700008
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): 0.38366733097852235
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.5659977674484253 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): -0.2188722193223699
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -0.29269141632066903
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): 0.28665968649567497
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 0.9924062752028329
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): 0.8631917610174028
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): 0.14717445593893277
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): 0.9583315565162667
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0005983829498291016 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): -0.3679693692536475
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 0.0782271169902684
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -2.335478201382305
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): -0.7773689846425181
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): -1.2841029588095798
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): -1.102678734801466
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): -1.8346399499006323
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.0028921127319335937 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): -0.1806263061441146
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): -0.17076236661701905
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -1.6572105789312461
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): -0.0735060838403529
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): -0.5911567648512648
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): -0.40081754058001356
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): -1.1588824059918692
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.013663744926452637 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): -0.14424809263177332
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): -0.2680629079907954
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -1.025843684575229
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 0.456735208333364
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): 0.07225694672729127
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): -0.02155581136510542
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): -0.47804176342480664
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.05305812358856201 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): -0.17398103834275955
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): -0.3426721550600552
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -0.5213420587540816
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 0.7302237164058326
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): 0.6326839713377929
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): 0.1315393022004616
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): 0.08937848787398657
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.21006526947021484 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): -0.13542662980840917
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -0.37119047329237875
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): -0.10818579193772256
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 0.8923179101849537
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): 0.7304402411236723
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): 0.1685559730513309
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): 0.6174774568659783
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 1.0861106395721436 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): -0.13168478919133214
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -0.27565448873958476
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): 0.2334835001617928
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): 1.0272992835795531
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): 0.878040961673574
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): 0.2744516873708241
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 1.1448624657651447
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.001196575164794922 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): -0.22164794541040178
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 0.23471164669428782
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -2.3191942440020936
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): -0.4482402053610102
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): -1.2130910721167663
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): -0.8727811873977405
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): -1.5416057502478304
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.005385780334472656 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): -0.10627490887690358
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): -0.22668916586370652
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -1.6731127957173149
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 0.14759008758248607
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): -0.5477110444403327
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): -0.2117256185068495
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): -0.8839105652995383
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.03001844882965088 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): -0.11697308858954866
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): -0.21983186590550302
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -0.9596825531330253
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 0.6441576728584968
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): 0.18549292416260804
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): 0.17644565095594475
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): -0.15261971905377636
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.13065063953399658 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): -0.10519689240789507
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): -0.24521295401713916
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -0.413828134615131
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 0.9430498867323838
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): 0.7972217519536225
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): 0.3069641223518378
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): 0.46054297153860374
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.5186176776885987 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): -0.20298995697253946
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -0.2772723509235384
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): -0.05419255971688445
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 1.012113078302333
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): 0.8603020105232523
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): 0.318825275650765
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): 0.9514425884171583
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 2.265956401824951 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): -0.1340246815083952
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -0.2457732483522681
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): 0.2146170641423173
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): 1.0743779533272757
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): 0.9177192379845995
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): 0.2625748130401757
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 1.3118468178116875
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.000498652458190918 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): -0.41495737480218536
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): -0.0792158525643891
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -2.4271831455621746
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): -0.8131704438202971
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): -1.3879562320340089
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): -1.150977605031592
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): -1.9125395113405543
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.0013962745666503905 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): -0.3726981512229364
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): -0.5351113477623001
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -1.994689222035158
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): -0.3617819996700723
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): -0.9219498092658958
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): -0.7012347836204633
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): -1.4785486580699165
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.006382942199707031 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): -0.3305442875024176
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): -0.6331522007431435
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -1.3652542417788383
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 0.1482420280444421
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): -0.2591064467769234
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): -0.352550060445302
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): -0.8159806796929461
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.02932159900665283 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): -0.2572096965207742
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): -0.6368238360784234
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -0.7749461410259891
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 0.47361577631005447
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): 0.3783853684834491
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): -0.1476831141196964
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): -0.1662953205712167
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.12307093143463135 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): -0.24263754489393483
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -0.6341914074199293
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): -0.31556933418913036
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 0.6343962773519235
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): 0.4986160489637494
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): -0.08976124875409952
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): 0.4104554536637197
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.6424853801727295 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): -0.18197853120727225
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -0.5290556049503389
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): 0.040237803264282376
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): 0.7765568772539972
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): 0.6449363784161052
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): -0.077154242339931
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 0.9623203173145922
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0006980657577514649 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): -0.330725154032052
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): -0.05741121899423547
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -2.559778911972425
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): -0.7008349484028269
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): -1.4412274442276323
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): -1.0973980400214134
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): -1.7741110507804503
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.002692556381225586 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): -0.2588698280803897
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): -0.5080678273644708
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -1.989785685690579
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): -0.187265040699179
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): -0.8450238693080769
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): -0.49091190261599654
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): -1.2106099027141488
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.012566423416137696 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): -0.18060451892686508
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): -0.6072023258467798
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -1.3432104701140506
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 0.2868670168719107
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): -0.19151039793116958
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): -0.21323494913543392
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): -0.5292341987763786
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.05545179843902588 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): -0.13231836819218787
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): -0.6250747842235981
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -0.7880734647766686
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 0.567857926413292
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): 0.4269584579109977
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): -0.05038083854921274
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): 0.08382476690115173
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.22120974063873292 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): -0.11851326084798494
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -0.6428207066580679
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): -0.38530941574962274
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 0.6383932853984616
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): 0.488457812542074
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): -0.0289918296567733
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): 0.5959786430435513
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.174867534637451 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): -0.09149380353956174
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -0.5354068714806037
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): -0.03742136003498082
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): 0.7872380825188996
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): 0.6344632301943116
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): 0.04302070441096998
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 1.1399230543464454
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0013962507247924805 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): -0.17536142079912648
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.0
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -2.5512865685322232
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): -0.41920593144241547
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): -1.3858485486943355
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): -0.9181658788207726
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): -1.472265252296073
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.006483054161071778 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): -0.04446443427598591
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): -0.41495098734404173
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -1.8902668205421032
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 0.19399015543813158
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): -0.7141902429315864
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): -0.25306265270564304
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): -0.814547843650261
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.03370990753173828 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): -0.08068291934214945
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): -0.4658414244553642
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -1.2181855484817405
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 0.574767851079631
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): -0.010806146924214702
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): 0.05895346084843405
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): -0.0892098006681631
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.1295536518096924 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): -0.10059704772999627
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): -0.5422976049817309
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -0.7307478667708417
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 0.7208049659491698
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): 0.5526823564162555
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): 0.0953346036204669
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): 0.4467219317459884
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.5282912492752075 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): -0.14249830028726196
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -0.5694244058846153
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): -0.33686040519171595
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): 0.7611045050486448
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): 0.5912687179955667
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): 0.1115937351736512
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 0.9428366588968249
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 2.336810898780823 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): -0.11719398175342398
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -0.5448956347280209
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): -0.07354168688540544
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): 0.8101176283880879
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): 0.6465692147960987
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): 0.07235549565907222
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 1.304548025456028
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0003989458084106445 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): -0.573991469202753
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): -0.3979244357705232
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -2.8348923382328883
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): -1.0464688360575032
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): -1.6848758194244082
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): -1.3585714006953233
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): -2.013438043169623
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0017951726913452148 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): -0.3125051488418616
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): -0.708517453854451
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -2.180737893242587
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): -0.27797727593513205
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): -1.0295710594791112
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): -0.692508259155495
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): -1.358522371058991
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.007978582382202148 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): -0.284437104682526
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): -0.8340975311437461
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -1.5740370817110196
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 0.11281109522204745
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): -0.3958914521328101
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): -0.44190526767003324
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): -0.7175148119729866
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.03341064453125 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): -0.21134951447157888
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): -0.8816663848666532
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -1.0299310862942588
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 0.34292651933134105
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): 0.209999852374862
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): -0.3291336923272833
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): -0.11309235668724098
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.13882944583892823 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): -0.17697524241533857
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -0.884607528183196
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): -0.5756903374237551
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): 0.41932252200564846
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): 0.2780135876961432
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): -0.3006902467940499
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 0.4331363333734245
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.726260495185852 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): -0.13817924112806199
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -0.7815159005076496
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): -0.21059223555977308
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): 0.5510120796750011
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): 0.4115063999757366
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): -0.3923418269681026
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 0.9647459386291458
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.000797891616821289 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): -0.37570869026505793
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): -0.3010040405178864
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -2.8112317558853133
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): -0.6155489877613706
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): -1.6356314573341582
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): -1.1743531685874566
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): -1.715712507411568
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.0034905672073364258 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): -0.16317425087917106
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): -0.7014328251573879
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -2.189145456097749
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): -0.07649579247903836
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): -0.9898281108681461
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): -0.5233468860243068
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): -1.3161288822994281
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.015159511566162109 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): -0.1341151029657605
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): -0.8198763606576008
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -1.5731141485816438
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 0.2581666957700842
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): -0.35955697966740496
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): -0.3090524094285798
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): -0.43715870638029575
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.061336088180541995 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): -0.11760366491236127
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): -0.8752962113553107
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -1.0567813360037173
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 0.3886108979932463
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): 0.2266106106759474
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): -0.24164522475654976
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): 0.14309580811825376
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.2298107147216797 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): -0.14707453448459498
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -0.9383058540733901
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): -0.677168270477657
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): 0.39401303744040234
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): 0.22611929927477503
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): -0.2656565410230755
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 0.6314390363403714
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 1.3369995832443238 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): -0.10529896425412942
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -0.7911884652694536
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): -0.2893691608040612
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): 0.558253867553571
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): 0.4003889878596223
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): -0.23127310118649191
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 1.148476970228348
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0017952203750610351 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): -0.22229494439328323
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): -0.20711534938780485
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -2.750542477552186
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): -0.2885586672112696
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): -1.5480172590618517
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): -0.9599982281348096
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): -1.3575778585608655
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.007081127166748047 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): -0.16142568169678356
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): -0.7657259073397729
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -2.158962210128678
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 0.11554997137949954
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): -0.9519009932699996
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): -0.3580450662374281
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): -0.7643665507573432
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.035505151748657225 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): -0.11419022591214584
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): -0.8972502962425802
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -1.4890449837533966
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 0.43274180280349167
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): -0.2594986326166586
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): -0.14942412811284006
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): -0.06833788682278362
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.14142284393310547 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): -0.16112890955268971
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -0.9902188023065175
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): -0.9834019476659144
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 0.5045944793465865
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): 0.31530211397215635
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): -0.10474424091959197
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): 0.48032200817681203
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.5493331909179687 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): -0.1533604223792946
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -1.0352114684313571
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): -0.7087037296823174
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): 0.4971544245170836
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): 0.3226318579836587
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): -0.1528043588400062
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 0.9508669489050002
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: numba_jit_gemm, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 2.410863256454468 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): -0.10671074933287329
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -1.0234214610350252
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): -0.36625006226116574
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): 0.5363325112221263
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): 0.36867554844274614
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): -0.1266219046036872
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 1.2813688472160198
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.0004987478256225586 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): -0.4470601481257547
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 0.22189719410752382
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -2.1771803861331813
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): -0.8071759965410293
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): -1.2782791222347258
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): -1.1156805835521129
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): -1.9062640990980422
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0027925252914428713 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): -0.20605720154676221
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): -0.04420258600541067
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -1.4387914761506237
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): -0.0443030465964709
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): -0.5218794314265133
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): -0.5786516053096411
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): -1.1712477967622679
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.011968040466308593 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): -0.19491471155273757
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): -0.2671695771646381
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -0.8388574414264671
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 0.3881459504585713
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): 0.12431510874894428
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): 0.04116892338202851
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): -0.5360149973791294
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.05116326808929443 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): -0.16270118978089182
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -0.349824683901605
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): -0.2984826792701586
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): 0.7373914246810641
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 0.7374688163636977
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): 0.289866365552623
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): 0.08512526397286818
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.20096299648284913 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): -0.15194025274926853
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -0.39400266109018617
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): 0.12214670528445595
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 0.8676496077193507
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): 0.8525556351749136
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): 0.3478264813838825
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): 0.6343383274125015
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 1.0688496828079224 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): -0.12390877363822271
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -0.28717357801498894
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): 0.49162108877467503
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): 1.0308196872438067
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): 1.0354752975669412
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): 0.42137477425367126
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 1.2138941355340522
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0014957189559936523 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): -0.1250183401603116
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 0.4771143320924114
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -1.979650896672063
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): -0.41303868178295117
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): -0.9742612514169876
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): -0.7036096363278388
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): -1.443710984408711
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.005684900283813477 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): -0.09537661790829347
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): -8.741764109658219e-05
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -1.4115924831824462
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 0.15708372495958334
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): -0.39405037968063755
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): -0.40051870329367206
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): -0.8570826419730652
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.029920077323913573 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): -0.10725405866157706
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): -0.155296644405062
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -0.7240097269186099
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 0.6697090594196597
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): 0.31381567310919867
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): 0.32116026863987146
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): -0.14172166664459784
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.1254646062850952 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): -0.10204712223669762
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -0.22682081953367575
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): -0.1945803935550872
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): 0.9185448987729911
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 0.9225767500326804
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): 0.5120590374730191
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): 0.45880480502320037
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.460273003578186 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): -0.18201982933698174
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -0.306920680255527
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): 0.17237702693839285
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 0.9938939957316612
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): 0.9702645502405849
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): 0.5105774599182797
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): 0.9410587735901857
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 2.1348084688186644 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): -0.16847424434595634
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -0.266573072599601
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): 0.45498527338996025
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): 1.067284274456624
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): 1.0655617696513087
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): 0.5673976362588595
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 1.400115003496439
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0027923107147216795 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): -0.07138759545285045
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 0.5440328180805685
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -1.9977139086770548
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): -0.10918402153091236
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): -0.9467885052241428
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): -0.5378232869073128
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): -1.1713831429046533
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.013065242767333984 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): -0.040257475530324986
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): 0.07984588106126751
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -1.3380379027353313
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 0.526411307031726
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): -0.27858488784612495
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): -0.1912889197031067
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): -0.4954621716494192
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.08467423915863037 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): -0.016921763442837363
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): 0.014025128271832173
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -0.5637141761790069
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 0.9289108843392794
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): 0.5310124059362629
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): 0.6072685236476643
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): 0.3044868954357418
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.3244379997253418 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): -0.065327058248153
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -0.09975110356574816
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): -0.0774444775945694
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 1.1143865883252069
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): 1.0959167152409304
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): 0.7017822021033895
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): 0.8491127885244321
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 1.338401770591736 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): -0.10582917832798044
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -0.13323031029674637
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): 0.31161955657166257
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): 1.1808022500598037
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): 1.1623572264358981
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): 0.729750596937642
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 1.3337030043184435
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 5.193699526786804 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): -0.05848660196719357
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -0.17733848100685193
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): 0.5154534622978738
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): 1.1713953157593748
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): 1.1625446704551765
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): 0.6235440453849072
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 1.6234708945910188
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0005983591079711914 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): -0.3986074545259655
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.07914317751411833
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -2.390980898668339
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): -0.8492289720854557
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): -1.372674219098113
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): -1.094634385234061
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): -1.8589002993147088
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.003191423416137695 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): -0.21064916706012507
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): -0.3273707668949993
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -1.6795631239795523
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): -0.018940496167801173
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): -0.6417947029890452
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): -0.6578631253194357
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): -1.1037826187986164
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.012566733360290527 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): -0.1783733677842257
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): -0.5576605372123595
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -1.1096846368347215
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 0.2549331694101577
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): -0.058756827595021946
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): -0.08285395721677595
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): -0.5181027429478308
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.05794501304626465 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): -0.11780011043876115
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -0.5912922667943009
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): -0.5276303621862182
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 0.6153306849834664
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): 0.5893827005748408
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): 0.1441558861336784
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): 0.13587906547189713
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.21532468795776366 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): -0.142282665322237
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -0.6643570569603789
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): -0.13476048351290928
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 0.6497992832738348
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): 0.6385527416665576
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): 0.15060228412511834
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): 0.645743934891658
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 1.1834449529647828 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): -0.08875957556053934
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -0.5449776808257165
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): 0.24000806944494163
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): 0.7945915441597168
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): 0.8031999193057634
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): 0.18827989498562545
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 1.218970978116379
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0011966705322265625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): -0.2624777561366693
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 0.17608260647846516
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -2.3749488443633253
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): -0.5002324055388266
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): -1.3081202006546737
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): -0.8339715464890868
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): -1.5334515637756263
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.006083774566650391 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): -0.06593220528436099
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): -0.26388399350466657
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -1.685227791317167
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 0.20475357656273907
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): -0.5995863836539728
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): -0.5070645078845413
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): -0.8378648309482797
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.03121678829193115 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): -0.07032790223222589
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): -0.4394708671751901
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -1.0026361065857754
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 0.5787094449867376
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): 0.10081144277409033
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): 0.18979276636668263
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): -0.12146541025143807
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.1282569408416748 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): -0.08979681389723658
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -0.5275601398173452
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): -0.4779666599178854
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 0.7320613052269271
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): 0.6913861589030076
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): 0.3156814184421985
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): 0.4639260256108514
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.4629665851593018 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): -0.19607018184362757
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -0.6144729903628758
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): -0.11698832408013315
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): 0.717171541189822
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): 0.7007551988583489
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): 0.2924375097402026
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 0.94156518872715
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 2.18104088306427 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): -0.1436660612342916
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -0.56588966028869
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): 0.1775361352782121
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): 0.7924853193476853
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): 0.7886641909404446
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): 0.31169896498822225
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 1.3859382839377976
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.002892470359802246 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): -0.1308276288502141
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 0.286474304542321
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -2.276815849003597
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): -0.0938788470706313
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): -1.186072312394006
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): -0.6158681598787915
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): -1.161915115859759
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.01156911849975586 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): -0.11463044562737235
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): -0.34212079743214696
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -1.6819452197426883
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 0.4267941115202547
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): -0.5817959326335597
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): -0.4129869328076143
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): -0.5450537288699977
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.08247954845428467 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): -0.013423778600583441
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): -0.37496446747030493
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -0.8689637269859068
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 0.8035621842848468
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): 0.25987810369037573
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): 0.4362737844800512
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): 0.2937578699748999
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.32961900234222413 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): -0.044516452647557575
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -0.5096062102636871
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): -0.36176260903679536
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 0.8965076338386089
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): 0.8493825673633985
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): 0.5037120974849545
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): 0.8493370448918541
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 1.382513689994812 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): -0.050222989763343856
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -0.559907475066773
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): 0.03352917602345598
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): 0.9201112721981217
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): 0.8910373255333938
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): 0.5317311929663123
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 1.3375214944392733
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 5.279209017753601 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): -0.044770989493519354
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -0.6075397556471092
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): 0.22689031775866
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): 0.8932146345891382
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): 0.8812120538294655
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): 0.4261529507924514
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 1.6067079066377299
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0009973287582397462 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): -0.25526789080302303
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): -0.04138230291364456
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -2.4670231117194246
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): -0.5460406102342733
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): -1.3877775360554505
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): -0.9713732700180839
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): -1.6049147555592904
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0038897514343261717 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): -0.107882344069304
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): -0.5161274355719067
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -1.889787900304937
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 0.022524729083415747
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): -0.8060159825375524
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): -0.7540714404537833
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): -1.0193947269115267
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.015957403182983398 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): -0.15197849120498647
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): -0.7643614169637393
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -1.3122856142864734
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 0.2965923664452411
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): -0.19852845890068138
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): -0.1599781241697342
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): -0.4062033719124621
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.0620342493057251 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): -0.08814240754333652
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -0.8612584363214978
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): -0.8075186457445742
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 0.40380557568159164
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): 0.36475431002381686
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): -0.06180853808766421
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): 0.15789920564074691
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.238861608505249 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): -0.10661286992480201
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -0.9245229788487438
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): -0.39594715077862347
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): 0.4144504503655324
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): 0.4080200270928328
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): -0.06273267675505076
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 0.6659941598641669
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.3135951280593872 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): -0.0626879049147508
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -0.8129250959222964
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): -0.016749834337407
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): 0.5516161851920156
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): 0.5592293902857859
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): -0.13493836314574154
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 1.2060897421974839
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0014960289001464844 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): -0.2552478955235799
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): -0.027969023731434957
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -2.5758843809300775
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): -0.38388640306510696
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): -1.4773055515204507
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): -0.8886349650182814
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): -1.4550815750288624
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.006781649589538574 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): -0.05966308133502747
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): -0.5875225724360419
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -1.9291446753852617
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 0.1696931319515777
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): -0.8180987309104851
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): -0.6534660622275112
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): -0.7922201095120273
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.035904097557067874 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): -0.018884491261069405
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): -0.7833538596964682
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -1.2392391631712996
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 0.48234238252765615
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): -0.09876541055150793
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): 0.06137550881508811
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): -0.06918702526584149
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.1313488483428955 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): -0.08616119524806604
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -0.9627083073191616
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): -0.7731348186183574
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 0.49494990244115344
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): 0.4440289795141249
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): 0.08793417602259387
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): 0.46178753264874556
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.4799201011657715 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): -0.18212844142922474
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -1.0609527641211758
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): -0.4081806000388975
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): 0.4584296952350492
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): 0.4306654200329107
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): 0.054682043343950666
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 0.9200368096000997
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.283017563819885 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): -0.12387440256523197
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -1.0292599819393742
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): -0.11576087801355295
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): 0.5211086866289213
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): 0.5152667127058155
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): 0.0011963510644004644
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 1.3528929540154526
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.003391122817993164 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): -0.08129361968133991
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 0.06904238508874473
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -2.5107048026431094
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): -0.06580507079703043
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): -1.3967203653908953
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): -0.6704910198769334
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): -1.101216089388711
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.012765979766845703 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): -0.06606806769515473
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): -0.6844745207928759
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -1.9438653518729827
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 0.30039132480932823
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): -0.8190170943495091
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): -0.5902224179289418
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): -0.5151557997812368
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.08938672542572021 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): 0.008954927118206859
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): -0.7847700314812243
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -1.141412014815373
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 0.6449193669337006
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): 0.019317560578668146
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): 0.2534879377363659
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): 0.3213990673345453
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.3289205551147461 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): -0.03974675417411565
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -0.9217800915270135
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): -0.6755809316333036
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): 0.6323176785905933
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): 0.5659017458369686
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): 0.2612440025091315
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 0.8320628072399879
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 1.4055490970611573 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): -0.04526743745770394
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -0.9518894672541376
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): -0.26759166458786193
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): 0.6424671346506735
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): 0.6104128442846274
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): 0.25495903751265236
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 1.3233998571017032
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: numba_jit_gemm, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 5.40817699432373 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): -0.04075764156729399
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -0.9876132734316371
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): -0.06910475089927483
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): 0.6120137342595677
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): 0.5970401300787126
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): 0.22386200231857817
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 1.5844858978923875
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION numba_jit_gemm DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION cv2:
1/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.06771910190582275 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): 1.92789868551092
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 2.3547965844214382
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): 1.4904101574298143
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): 0.9363349512025285
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): 0.9667522024197165
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): 1.137786960204567
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): 0.06843948402987937
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.06981339454650878 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): 1.4467183511109893
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): 1.7659555059582086
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 2.000042420217846
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): 1.0881171789246855
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): 1.0253010895417018
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): 1.0996473990133655
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): 0.21897542377377627
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.07101013660430908 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): 0.8785964770189739
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): 1.081629818286867
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 1.3611172979092954
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): 0.9550966618722585
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): 1.0281395089978118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): 0.8255089985271414
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): 0.231853440579958
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.08367633819580078 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): 0.3747441696933622
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): 0.5275628507834721
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): 0.8903317249069549
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): 0.7758719505559355
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 1.071196441524341
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): 0.5088460849588977
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): 0.29648305108000644
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.12097654342651368 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -0.07183715580864292
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): 0.07696724118491086
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): 0.403525560303855
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 0.9620622385055266
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): 0.7957686789734637
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): 0.13164562639136115
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): 0.417488387433725
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.2637935161590576 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -0.3178723522818035
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): -0.18717618529178476
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): 0.09322831387136002
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 0.9568773384680825
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): 0.6184889304004717
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): -0.18393878358453092
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): 0.5924727203248972
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.12407169342041016 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): 2.093766323584378
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): 2.4934601373720073
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 2.6181736309813126
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): 1.5746602633707454
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): 1.093626531721898
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): 1.3307084690103634
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): 0.46982738633239857
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.12685849666595458 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 1.64208286237339
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): 1.7620547621540172
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 2.0630894769482886
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): 1.583943711258747
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): 1.1069790583790293
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): 1.2381159849611028
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): 0.4776728768540752
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.13324642181396484 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): 1.0727326139268099
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): 1.1046303860077
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): 1.4268368268047478
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 1.557000573516764
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): 1.1374159780061106
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): 0.9749292007492968
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): 0.49318496059763917
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.1619675874710083 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): 0.5540575475887892
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): 0.553525777319941
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): 0.9227861146417478
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 1.3977107567217457
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): 1.1731507957910359
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): 0.6169307436190776
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): 0.554368124244758
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.24684650897979737 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): 0.1475905329134799
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): 0.11964467827910853
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): 0.4595085797579862
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 1.2657572438833276
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): 0.8889210565871629
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): 0.23866300642625074
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): 0.7027360239580597
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.5782607078552247 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -0.152410995872861
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): -0.12326672845165065
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): 0.13376988669738646
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 1.0958349560207257
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): 0.6977020825422563
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): 0.0006250676855216071
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): 0.8932507319232975
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.24415051937103271 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): 2.309639794568947
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): 2.5448900886323473
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 2.78663994095489
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): 1.847750163677525
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): 1.181843918741742
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): 1.584900729338259
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): 0.7723618367786449
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.24166014194488525 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): 1.80460166633636
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): 1.7216056925785086
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 2.0834041773871417
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): 1.8439910456585484
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): 1.178392266655681
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): 1.4431902930696985
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): 0.7726616276099159
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.2563129425048828 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): 1.2280832786119293
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): 1.12213067832528
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): 1.4461412070812538
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 1.7693449770090863
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): 1.193917127073503
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): 1.101977284027261
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): 0.7887250652014756
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.3126700401306152 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): 0.7021552309010267
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): 0.5512708520898417
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): 0.9007465406585775
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 1.5611711183392973
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): 1.2549829027394395
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): 0.6838701388558739
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): 0.8502381736475818
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.5244029760360718 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): 0.33378032048435236
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): 0.16708590372750315
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): 0.5293736130361032
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 1.3472543685685627
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): 0.947780918613586
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): 0.3229457297115133
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): 0.9711542651874937
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: cv2, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.2592455387115478 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): 0.02899404212887667
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -0.06139183199064082
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): 0.19568585167371685
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 1.1828658411508832
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): 0.7559248549804101
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): 0.008596814121133799
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): 1.0945969611998039
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.12865655422210692 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): 2.069636211574004
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 2.411633951305227
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 2.8090551515510906
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): 1.5924141924729376
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): 1.1018317963400033
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): 1.3639109644735885
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): 0.4920275552095403
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.13484201431274415 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): 1.716187676417811
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): 1.7507730520744047
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 2.285884399836705
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): 1.611656675599956
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): 1.1346736111996816
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): 1.3091611169822637
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): 0.5135570311449256
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.14082303047180175 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): 1.190855678101685
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): 1.1045105878568953
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 1.6874369878566757
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): 1.581801168925405
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): 1.1540050301089346
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): 0.9860478992238438
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): 0.5372639926584428
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.16077947616577148 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): 0.6523243964464359
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): 0.5171944920745795
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): 1.1001870019158193
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 1.4117427940516256
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): 1.1731049630987154
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): 0.5880296339484787
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): 0.5755350596576415
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.23407795429229736 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): 0.22685707078985007
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): 0.0677413903663574
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): 0.6277946554755608
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 1.2221072018675423
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): 0.860408489356861
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): 0.19025439813288067
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): 0.6936977664489126
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.5239123582839966 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): -0.05202399245604646
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -0.1880183678809893
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): 0.3242182434083708
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 1.0247183948926246
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): 0.6484289429480216
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): -0.16609958782580492
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): 0.9025307412618672
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.24066705703735353 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): 2.3404038895432935
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 2.479485722560001
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 2.902638816760671
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): 1.8419364916620786
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): 1.162466214307454
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): 1.5949553206543188
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): 0.5936868989600866
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.25282998085021974 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): 1.9270489688813266
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): 1.770648067892053
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 2.3633353012244793
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): 1.8976647705623162
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): 1.1901302514456844
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): 1.4791605456349686
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): 0.7938242106975286
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.2645726680755615 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): 1.3304728731376763
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): 1.0891873273864616
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): 1.660210267783587
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 1.7995737859675227
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): 1.2176469382241157
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): 1.135526924702712
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): 0.8115114125228465
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.3224417448043823 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): 0.8314404667580357
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): 0.550584648473325
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): 1.187387693000407
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 1.5540757311141133
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): 1.2604732039484865
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): 0.7161586992328015
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): 0.8644317616135248
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.4902015447616577 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): 0.43843455066864606
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): 0.11831013492789112
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): 0.7441010411914654
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 1.3073852655155478
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): 0.9256577472009156
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): 0.3179210275152399
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): 0.9882608884143037
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.1507097005844116 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): 0.14049742154765826
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -0.1189770991078312
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): 0.37969617540798245
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): 1.1440291152334763
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): 0.7215610718932024
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): 0.03443090757583401
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 1.1590669053065994
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.4858025789260864 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): 2.5410739064711847
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): 2.541993550855883
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 2.988703383117432
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): 2.177934283719119
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): 1.2397302681813867
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): 1.8315282348277189
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): 1.0531355559214282
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.4908910751342773 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): 2.090219194953735
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): 1.7836465227123692
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 2.3699181060886483
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): 2.1692078366631558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): 1.2458268146534057
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): 1.6468285854710927
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): 1.0771994846727944
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.5256189107894897 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): 1.5177074660366678
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): 1.1186862217510376
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): 1.7487008100090642
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 1.9611192659737366
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): 1.2757099749245295
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): 1.240838867196354
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): 1.1040206440591425
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.6348091840744019 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): 1.0029307959961078
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): 0.5615000507430122
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): 1.1899592733530693
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 1.7050304870717465
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): 1.324279197998575
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): 0.7874072907905403
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): 1.1440119670014852
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 1.0585341453552246 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): 0.6413046360331579
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): 0.17173043922395845
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): 0.8160795501122485
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 1.4300569544811157
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): 0.9855550239322491
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): 0.414661545171442
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): 1.2666101018624785
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: cv2, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 2.5212917566299438 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): 0.3225721701006954
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -0.06053317320213293
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): 0.45922548650413025
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): 1.228592871463335
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): 0.7782861749144439
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): 0.10559067287318329
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 1.370348718347722
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.2593071460723877 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): 2.210886010114347
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): 2.4607209446357885
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 2.9377614593944372
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): 1.9038081400687774
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): 1.20457391554799
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): 1.6159113842210375
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): 0.7768723890442937
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.25531754493713377 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): 1.8767554612663595
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): 1.73614600584495
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 2.505175690912052
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): 1.8855587999630248
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): 1.1980793526407063
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): 1.4386158283839285
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): 0.7907282901026281
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.27806270122528076 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): 1.3922262273081285
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): 1.0835756563502035
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 1.843218449306344
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): 1.7865544426878937
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): 1.227701859278001
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): 1.1029043668277303
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): 0.8231250384615567
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.3288194894790649 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): 0.9303934083080649
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): 0.529988261258757
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): 1.347856651319044
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 1.5687185865649986
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): 1.2763189877783567
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): 0.6658415383603384
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): 0.8812004880858436
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.47814438343048093 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): 0.4454500882235607
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): 0.08039576829018663
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): 0.8698146225166674
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 1.270300149483321
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): 0.9073122122133772
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): 0.23817195111214418
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): 0.9786698701059962
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.0588519334793092 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): 0.20618170580103762
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): -0.18239461992786113
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): 0.5397008593124849
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): 1.0584070534505623
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): 0.6743332357874721
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -0.2281480021214723
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 1.1364887346107595
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.4834700107574463 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): 2.509568004088481
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 2.5394061287634817
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 3.0834296802869687
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): 2.1621658041394567
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): 1.2342286627950292
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): 1.805856486429296
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): 1.0737497388922557
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.5034561872482299 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): 2.1846134903578327
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): 1.7636049230154234
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 2.6239524764871667
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): 2.1306376024563867
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): 1.255147375306206
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): 1.6351120574828266
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): 1.0903146684792646
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.5264957427978516 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): 1.6185711107199068
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): 1.0982724776277177
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): 1.9443896983627373
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 2.001292680988553
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): 1.2767324145085635
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): 1.2334387993013745
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): 1.1045823569296083
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.6273360013961792 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): 1.1223891032360198
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): 0.5395775041190269
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): 1.4130570055358438
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 1.6834919658597387
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): 1.3156344252485122
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): 0.7689759508098472
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): 1.1450089155145742
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.9791238069534302 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): 0.6996555402887276
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): 0.11491063102022273
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): 0.9609906754270354
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 1.3839116528767303
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): 0.9439524805062279
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): 0.36424648269558463
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): 1.2664812809579002
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.3432740688323976 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): 0.4253038602515447
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -0.11461418298847292
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): 0.6259808968173134
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): 1.1793267647925874
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): 0.7427851277085413
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): 0.012489792650428554
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 1.4200197480303773
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.9614300489425659 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): 2.77997623802864
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): 2.53746969177813
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 3.2059730905466033
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): 2.441760502336966
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): 1.2667312095365768
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): 2.085857205359114
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): 1.3528594843856714
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 1.0042174339294434 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): 2.3402961373690427
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): 1.7674635028162886
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 2.55582693374785
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): 2.3815637850992455
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): 1.2861439395995415
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): 1.8030520902559204
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): 1.3904461858056285
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 1.0301629781723023 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): 1.7612116069995636
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): 1.0997158525382025
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): 1.9571567340075
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 2.121998017606618
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): 1.3038903910959847
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): 1.3250237634993467
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): 1.39225365473896
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 1.241301989555359 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): 1.2801224778901705
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): 0.551082939249271
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): 1.4275842585661822
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 1.7803610265845244
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): 1.3395277799058178
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): 0.8391029441759528
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): 1.4384814722225356
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 2.084748864173889 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): 0.9237569978011914
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): 0.1630875199636974
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): 1.0671175048984953
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): 1.45542928353454
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): 0.998897618767361
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): 0.426519479594525
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 1.5412791097688943
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: cv2, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 5.053505086898804 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): 0.6118860056683375
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -0.06463342077628949
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): 0.7089814875422561
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): 1.2561039865120236
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): 0.7904565830096073
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): 0.1950397147594772
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 1.6227113927436612
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.06562352180480957 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): 1.7781149614201148
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): 2.3412833931403654
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 2.5174092752663326
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): 1.1707321685031915
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): 0.8999572948967651
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): 1.0586621471599493
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): 0.20391812827796452
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.06951401233673096 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): 1.3518391660447928
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): 1.4452960821746499
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 1.8017856469102134
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): 1.3293705918530727
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): 0.9592349862375683
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): 1.0967691254178817
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): 0.22268354463366546
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.07200756072998046 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): 0.7479129464320754
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): 0.7153740315663281
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): 0.9893170166361224
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 1.2550442173276475
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): 0.9745759886143639
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): 0.773873467434979
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): 0.2369679427543154
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.08886537551879883 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): 0.25616274975972947
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): 0.1423781635849457
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): 0.5185162469340662
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 1.1198501209886929
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): 1.038636832454032
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): 0.529906633964071
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): 0.32343565838050337
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.13025269508361817 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): -0.19324878379308047
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -0.3184744286364078
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): 0.05980363237475923
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 0.9013251406485955
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): 0.7581382233336886
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): 0.1635676743217593
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): 0.4434709633532816
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.2925196409225464 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): -0.5055319058180449
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -0.5793511028163439
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): -0.28665968649567497
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 0.7057465887071579
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): 0.5765320745217277
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): -0.13948523055674222
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): 0.6716718700205917
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.12955596446990966 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): 1.9675088321286576
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 2.4137053183725734
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): 2.3354782013823048
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): 1.5581092167397868
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): 1.0513752425727252
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): 1.2327994665808388
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): 0.5008382514816727
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.13134870529174805 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): 1.4765842727871317
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): 1.486448212314227
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 1.6572105789312461
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): 1.5837044950908932
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): 1.0660538140799813
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): 1.2563930383512325
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): 0.4983281729393769
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.14501516819000243 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): 0.8815955919434558
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): 0.7577807765844338
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): 1.025843684575229
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 1.482578892908593
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): 1.0981006313025203
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): 1.0042878732101237
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): 0.5478019211504225
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.1762357234954834 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): 0.347361020411322
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): 0.1786699036940263
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): 0.5213420587540816
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 1.251565775159914
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): 1.1540260300918743
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): 0.6528813609545432
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): 0.6107205466280681
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.26948838233947753 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): -0.02724083787068664
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -0.26300468135465616
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): 0.10818579193772251
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 1.0005037021226761
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): 0.8386260330613949
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): 0.27674176498905345
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): 0.7256632488037008
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.634440016746521 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): -0.3651682893531249
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -0.5091379889013775
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): -0.23348350016179278
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): 0.7938157834177603
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): 0.6445574615117813
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): 0.040968187209031254
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 0.911378965603352
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.2495365858078003 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): 2.097546298591692
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 2.553905890696382
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): 2.319194244002094
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): 1.8709540386410837
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): 1.1061031718853276
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): 1.4464130566043534
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): 0.7775884937542634
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.25372393131256105 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): 1.5668378868404114
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): 1.4464236298536084
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): 1.6731127957173149
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 1.8207028832998011
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): 1.1254017512769823
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): 1.4613871772104654
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): 0.7892022304177766
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.27357146739959715 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): 0.8427094645434766
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): 0.7398506872275223
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): 0.9596825531330253
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 1.603840225991522
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): 1.1451754772956333
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): 1.13612820408897
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): 0.807062834079249
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.33879709243774414 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): 0.3086312422072359
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): 0.16861518059799183
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): 0.413828134615131
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 1.3568780213475147
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): 1.2110498865687536
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): 0.7207922569669689
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): 0.8743711061537347
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.5875432968139649 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): -0.14879739725565502
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -0.22307979120665397
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): 0.0541925597168845
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 1.0663056380192177
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): 0.9144945702401368
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): 0.37301783536764943
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): 1.0056351481340429
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: cv2, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.3824024200439453 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): -0.3486417456507125
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -0.4603903124945854
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): -0.2146170641423173
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): 0.8597608891849584
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): 0.7031021738422822
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): 0.04795774889785842
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 1.0972297536693703
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.1333463430404663 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): 2.012225770759989
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): 2.3479672929977853
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 2.4271831455621746
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): 1.6140127017418773
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): 1.0392269135281658
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): 1.2762055405305823
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): 0.5146436342216201
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.13793041706085205 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): 1.6219910708122216
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): 1.459577874272858
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 1.994689222035158
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): 1.6329072223650858
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): 1.0727394127692622
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): 1.2934544384146947
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): 0.5161405639652414
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.14800457954406737 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): 1.0347099542764207
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): 0.7321020410356947
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): 1.3652542417788383
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 1.5134962698232803
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): 1.1061477950019147
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): 1.0127041813335362
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): 0.5492735620858922
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.17463600635528564 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): 0.5177364445052149
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): 0.13812230494756567
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): 0.7749461410259891
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 1.2485619173360436
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): 1.1533315095094383
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): 0.6272630269062927
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): 0.6086508204547724
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.25452170372009275 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): 0.07293178929519548
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -0.31862207323079894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): 0.31556933418913036
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 0.9499656115410537
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): 0.8141853831528797
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): 0.22580808543503086
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): 0.7260247878528501
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.5856328725814819 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): -0.22221633447155462
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -0.5692934082146213
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): -0.04023780326428235
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): 0.736319073989715
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): 0.6046985751518228
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): -0.11739204560421335
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 0.9220825140503099
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.2533233642578125 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): 2.229053757940373
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): 2.5023676929781895
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 2.559778911972425
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): 1.858943963569598
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): 1.1185514677447925
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): 1.4623808719510114
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): 0.7856678611919747
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.26299681663513186 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): 1.7309158576101893
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): 1.4817178583261081
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 1.9897856856905791
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): 1.8025206449914
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): 1.1447618163825022
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): 1.4988737830745824
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): 0.7791757829764302
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.27696325778961184 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): 1.1626059511871856
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): 0.7360081442672708
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): 1.3432104701140506
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 1.6300774869859613
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): 1.151700072182881
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): 1.1299755209786166
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): 0.813976271337672
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.3403996467590332 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): 0.6557550965844807
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): 0.16299868055307057
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): 0.7880734647766686
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 1.3559313911899606
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): 1.2150319226876662
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): 0.7376926262274559
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): 0.8718982316778203
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.5371723651885987 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): 0.26679615490163777
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -0.2575112909084452
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): 0.3853094157496228
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 1.0237027011480844
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): 0.8737672282916967
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): 0.35631758609284947
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): 0.9812880587931742
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.2805904626846314 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): -0.0540724435045809
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -0.4979855114456229
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): 0.037421360034980825
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): 0.8246594425538805
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): 0.6718845902292925
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): 0.08044206444595074
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 1.1773444143814262
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.49687824249267576 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): 2.3759251477330965
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 2.5512865685322232
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 2.5512865685322232
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): 2.1320806370898078
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): 1.1654380198378875
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): 1.6331206897114505
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): 1.07902131623615
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.5035544872283936 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): 1.845802386266117
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): 1.4753158331980614
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): 1.8902668205421032
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 2.0842569759802347
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): 1.1760765776105166
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): 1.63720416783646
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): 1.075718976891842
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.5571127653121948 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): 1.137502629139591
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): 0.7523441240263763
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): 1.2181855484817405
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 1.7929533995613716
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): 1.2073794015575257
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): 1.2771390093301744
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): 1.1289757478135773
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.6969434261322022 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): 0.6301508190408454
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): 0.18845026178911076
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): 0.7307478667708417
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 1.4515528327200113
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): 1.2834302231870973
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): 0.8260824703913086
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): 1.17746979851683
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 1.1474501371383667 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): 0.19436210490445402
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -0.23256400069289926
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): 0.33686040519171595
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): 1.0979649102403608
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): 0.9281291231872827
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): 0.4484541403653672
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 1.2796970640885408
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: cv2, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 2.7679947137832643 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): -0.04365229486801858
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -0.47135394784261553
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): 0.07354168688540541
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): 0.8836593152734933
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): 0.720110901681504
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): 0.14589718254447762
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 1.3780897123414335
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.2727760553359985 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): 2.2609008690301353
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 2.436967902462365
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 2.8348923382328883
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): 1.788423502175385
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): 1.1500165188084799
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): 1.476320937537565
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): 0.8214542950632655
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.2721724271774292 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): 1.8682327444007254
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): 1.472220439388136
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 2.180737893242587
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): 1.902760617307455
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): 1.1511668337634757
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): 1.488229634087092
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): 0.8222155221835957
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.2992008447647095 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): 1.2895999770284936
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): 0.7399395505672733
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): 1.5740370817110196
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 1.686848176933067
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): 1.1781456295782096
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): 1.1321318140409864
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): 0.8565222697380329
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.3579447031021118 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): 0.8185815718226799
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): 0.14826470142760562
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): 1.0299310862942588
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 1.3728576056255999
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): 1.2399309386691209
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): 0.7007973939669755
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): 0.9168387296070178
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.5226030349731445 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): 0.3987150950084164
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -0.30891719075944096
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): 0.575690337423755
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): 0.9950128594294034
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): 0.8537039251198982
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): 0.2750000906297052
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 1.0088266707971796
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.1794639110565186 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): 0.07241299443171104
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -0.5709236649478766
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): 0.21059223555977305
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): 0.7616043152347741
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): 0.6220986355355097
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): -0.18174959140832952
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 1.1753381741889188
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.5166252851486206 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): 2.4355230656202553
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): 2.510227715367427
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 2.8112317558853133
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): 2.195682768123943
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): 1.175600298551155
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): 1.6368785872978566
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): 1.095519248473745
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.5395621299743653 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): 2.025971205218578
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): 1.4877126309403608
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 2.189145456097749
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): 2.1126496636187104
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): 1.1993173452296024
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): 1.665798570073442
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): 0.8730165737983204
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.5672824621200562 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): 1.4389990456158832
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): 0.7532377879240428
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): 1.5731141485816436
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 1.8312808443517279
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): 1.2135571689142386
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): 1.2640617391530637
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): 1.1359554422013478
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.6990325689315796 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): 0.939177671091356
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): 0.18148512464840652
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): 1.056781336003717
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 1.4453922339969634
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): 1.2833919466796646
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): 0.8151361112471674
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): 1.1998771441219709
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 1.0927946090698242 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): 0.530093735993062
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -0.261137583595733
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): 0.677168270477657
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): 1.0711813079180594
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): 0.9032875697524321
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): 0.4115117294545815
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 1.3086073068180284
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.6031574249267577 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): 0.1840701965499318
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -0.5018193044653925
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): 0.2893691608040612
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): 0.8476230283576323
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): 0.6897581486636835
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): 0.05809605961756929
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 1.4378461310324093
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 1.0107883930206298 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): 2.528247533158903
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): 2.543427128164381
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 2.750542477552186
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): 2.4619838103409166
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): 1.2025252184903346
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): 1.7905442494173767
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): 1.3929646189913207
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 1.021091365814209 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): 1.9975365284318942
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): 1.3932363027889048
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): 2.158962210128678
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 2.274512181508177
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): 1.207061216858678
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): 1.8009171438912497
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): 1.3945956593713345
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 1.0948039531707763 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): 1.3748547578412507
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): 0.5917946875108164
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): 1.4890449837533966
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 1.9217867865568883
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): 1.229546351136738
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): 1.3396208556405564
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): 1.420707096930613
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 1.3611986637115479 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): 0.8222730381132247
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -0.006816854640603007
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): 0.9834019476659144
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 1.4879964270125008
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): 1.2987040616380707
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): 0.8786577067463225
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): 1.4637239558427264
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 2.80892128944397 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): 0.5553433073030228
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -0.32650773874903966
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): 0.7087037296823174
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): 1.2058581541994011
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): 1.0313355876659762
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): 0.5558993708423112
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 1.6595706785873177
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: cv2, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 5.603026032447815 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): 0.2595393129282925
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -0.6571713987738594
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): 0.3662500622611658
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): 0.9025825734832921
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): 0.7349256107039119
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): 0.23962815765747852
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 1.6476189094771858
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.07500002384185792 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): 1.7301202380074268
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 2.3990775802407054
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): 2.1771803861331813
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): 1.370004389592152
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): 0.8989012638984555
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): 1.0614998025810687
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): 0.27091628703513915
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.07669880390167236 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): 1.2327342746038616
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): 1.394588890145213
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 1.4387914761506237
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): 1.3944884295541529
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): 0.9169120447241106
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): 0.8601398708409826
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): 0.26754367938835594
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.08258106708526611 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): 0.6439427298737295
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): 0.571687864261829
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): 0.8388574414264671
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 1.2270033918850385
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): 0.9631725501754114
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): 0.8800263648084956
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): 0.3028424440473376
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.10172810554504394 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): 0.13578148948926683
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -0.05134200463144639
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): 0.29848267927015865
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): 1.0358741039512227
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 1.0359514956338562
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): 0.5883490448227816
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): 0.38360794324302677
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.15169434547424315 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): -0.2740869580337245
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -0.5161493663746421
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): -0.122146705284456
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 0.7455029024348947
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): 0.7304089298904576
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): 0.22567977609942647
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): 0.5121916221280455
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.3445843458175659 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): -0.6155298624128978
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -0.778794666789664
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): -0.4916210887746751
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): 0.5391985984691318
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): 0.5438542087922661
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): -0.07024631452100377
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 0.7222730467593772
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.14272527694702147 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): 1.8546325565117514
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 2.4567652287644743
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): 1.979650896672063
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): 1.5666122148891117
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): 1.0053896452550755
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): 1.2760412603442242
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): 0.535939912263352
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.14666123390197755 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): 1.3162158652741527
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): 1.4115050655413497
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): 1.4115924831824462
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 1.5686762081420296
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): 1.0175421035018086
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): 1.0110737798887741
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): 0.5545098412093811
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.15847926139831542 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): 0.6167556682570329
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): 0.5687130825135479
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): 0.7240097269186099
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 1.3937187863382696
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): 1.0378254000278084
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): 1.0451699955584814
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): 0.582288060274012
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.19638197422027587 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): 0.09253327131838956
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -0.03224042597858852
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): 0.19458039355508722
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): 1.1131252923280783
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 1.1171571435877676
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): 0.7066394310281063
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): 0.6533851985782876
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.3094841957092285 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): -0.3543968562753746
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -0.47929770719391984
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): -0.17237702693839285
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 0.8215169687932683
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): 0.797887523302192
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): 0.33820043297988683
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): 0.7686817466517929
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.7488134622573852 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): -0.6234595177359167
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -0.7215583459895614
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): -0.4549852733899603
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): 0.6122990010666636
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): 0.6105764962613484
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): 0.1124123628688992
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 0.9451297301064787
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.27776508331298827 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): 1.9263263132242043
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 2.5417467267576233
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): 1.9977139086770548
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 1.8885298871461424
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): 1.050925403452912
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): 1.459890621769742
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): 0.8263307657724015
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.28454790115356443 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): 1.2977804272050062
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): 1.4178837837965987
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): 1.338037902735331
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 1.8644492097670573
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): 1.0594530148892063
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): 1.1467489830322244
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): 0.842575731085912
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.3100740909576416 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): 0.5467924127361695
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): 0.5777393044508391
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): 0.5637141761790069
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 1.4926250605182863
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): 1.0947265821152696
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): 1.1709826998266712
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): 0.8682010716147486
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.38777177333831786 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): 0.012117419346416424
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -0.02230662597117879
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): 0.07744447759456942
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 1.1918310659197762
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): 1.1733611928354997
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): 0.7792266796979589
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): 0.9265572661190014
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.6530808448791504 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): -0.41744873489964307
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -0.44484986686840905
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): -0.3116195565716626
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): 0.8691826934881409
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): 0.8507376698642355
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): 0.4181310403659793
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 1.0220834477467808
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: cv2, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.5849784374237061 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): -0.5739400642650674
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -0.6927919433047257
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): -0.5154534622978738
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): 0.6559418534615009
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): 0.6470912081573028
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): 0.1080905830870334
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 1.108017432293145
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.1472118616104126 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): 1.9923734441423737
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 2.4701240761824574
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): 2.390980898668339
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): 1.5417519265828834
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): 1.0183066795702262
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): 1.296346513434278
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): 0.5320805993536303
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.1525975465774536 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): 1.4689139569194274
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): 1.352192357084553
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 1.6795631239795523
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): 1.6606226278117513
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): 1.0377684209905074
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): 1.0216999986601167
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): 0.5757805051809359
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.16177337169647216 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): 0.9313112690504959
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): 0.552024099622362
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): 1.1096846368347215
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 1.3646178062448793
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): 1.0509278092396996
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): 1.0268306796179456
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): 0.5915818938868908
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.1952749013900757 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): 0.40983025174745696
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -0.06366190460808267
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): 0.5276303621862182
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 1.1429610471696845
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): 1.1170130627610588
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): 0.6717862483198965
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): 0.6635094276581153
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.2936664342880249 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): -0.007522181809327765
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -0.5295965734474697
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): 0.13476048351290926
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 0.7845597667867441
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): 0.773313225179467
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): 0.2853627676380276
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): 0.7805044184045673
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.6809888362884522 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): -0.328767645005481
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -0.7849857502706582
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): -0.24000806944494166
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): 0.5545834747147752
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): 0.5631918498608218
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): -0.051728174459316184
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 0.9789629086714373
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.2837418794631958 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): 2.112471088226656
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 2.5510314508417906
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): 2.3749488443633253
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): 1.8747164388244986
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): 1.0668286437086516
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): 1.5409772978742384
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): 0.841497280587699
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.294714093208313 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): 1.6192955860328058
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): 1.4213437978125003
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): 1.685227791317167
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 1.889981367879906
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): 1.0856414076631942
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): 1.1781632834326257
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): 0.8473629603688871
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.31406846046447756 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): 0.9323082043535494
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): 0.5631652394105853
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): 1.0026361065857754
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 1.581345551572513
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): 1.1034475493598657
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): 1.192428872952458
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): 0.8811706963343373
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.38552055358886717 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): 0.3881698460206488
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -0.04959347989945983
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): 0.4779666599178854
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 1.2100279651448125
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): 1.169352818820893
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): 0.7936480783600839
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): 0.9418926855287367
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.6060911893844605 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): -0.07908185776349443
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -0.4974846662827428
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): 0.11698832408013314
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): 0.8341598652699551
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): 0.8177435229384821
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): 0.4094258338203357
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 1.0585535128072832
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.449197816848755 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): -0.32120219651250376
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -0.7434257955669021
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): -0.17753613527821213
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): 0.6149491840694733
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): 0.6111280556622325
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): 0.13416282971001017
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 1.2084021486595855
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.5471227407455445 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): 2.1459882201533826
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 2.5632901535459176
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): 2.276815849003597
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 2.1829370019329652
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): 1.0907435366095908
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): 1.6609476891248052
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): 1.1149007331438379
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.5562185764312744 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): 1.567314774115316
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): 1.3398244223105413
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): 1.6819452197426883
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 2.1087393312629428
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): 1.1001492871091285
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): 1.268958286935074
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): 1.1368914908726906
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.6099721431732178 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): 0.8555399483853234
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): 0.4939992595156019
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): 0.8689637269859068
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 1.6725259112707538
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): 1.1288418306762826
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): 1.305237511465958
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): 1.1627215969608067
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.7581844091415405 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): 0.3172461563892377
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -0.14784360122689172
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): 0.3617626090367953
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 1.2582702428754042
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): 1.211145176400194
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): 0.8654747065217497
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): 1.2110996539286496
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 1.2797945737838745 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): -0.08375216578679985
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -0.5934366510902289
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): -0.03352917602345593
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): 0.8865820961746658
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): 0.8575081495099378
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): 0.4982020169428564
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 1.3039923184158173
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: cv2, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 3.130967354774475 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): -0.2716613072521793
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -0.8344300734057691
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): -0.22689031775866003
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): 0.6663243168304782
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): 0.6543217360708056
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): 0.1992626330337914
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 1.3798175888790698
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.29232196807861327 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 2.2117552209164018
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): 2.42564080880578
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 2.4670231117194246
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): 1.9209825014851514
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): 1.0792455756639743
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): 1.4956498417013409
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): 0.8621083561601343
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.3017934083938599 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): 1.781905556235633
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): 1.3736604647330302
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): 1.889787900304937
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 1.9123126293883526
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): 1.0837719177673846
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): 1.1357164598511535
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): 0.8703931733934102
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.3275275468826294 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): 1.160307123081487
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): 0.5479241973227341
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): 1.3122856142864734
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 1.6088779807317146
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): 1.113757155385792
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): 1.1523074901167392
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): 0.9060822423740112
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.39824485778808594 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): 0.7193762382012376
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -0.0537397905769236
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): 0.8075186457445742
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 1.211324221426166
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): 1.172272955768391
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): 0.74571010765691
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): 0.9654178513853211
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.5944201231002808 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): 0.28933428085382146
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -0.5285758280701204
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): 0.3959471507786234
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): 0.8103976011441558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): 0.8039671778714563
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): 0.33321447402357274
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 1.0619413106427904
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.365247416496277 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): -0.045938070577343795
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -0.7961752615848894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): 0.016749834337407
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): 0.5683660195294226
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): 0.5759792246231928
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): -0.1181885288083345
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 1.2228395765348907
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.5634097576141357 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): 2.3206364854064976
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): 2.5479153571986424
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 2.5758843809300775
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): 2.1919979778649705
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): 1.0985788294096266
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): 1.687249415911796
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): 1.120802805901215
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.5760763168334961 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): 1.869481594050234
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): 1.3416221029492197
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): 1.9291446753852615
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 2.0988378073368392
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): 1.1110459444747764
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): 1.2756786131577504
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): 1.1369245658732343
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.6228495836257935 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): 1.22035467191023
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): 0.45588530347483136
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): 1.2392391631712996
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 1.7215815456989558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): 1.1404737526197917
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): 1.3006146719863876
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): 1.170052137905458
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.779042387008667 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): 0.6869736233702913
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -0.1895734887008042
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): 0.7731348186183574
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 1.268084721059511
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): 1.2171637981324823
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): 0.8610689946409513
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): 1.2349223512671028
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 1.228427529335022 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): 0.22605215860967276
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -0.6527721640822782
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): 0.4081806000388975
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): 0.8666102952739466
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): 0.8388460200718082
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): 0.46286264338284816
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 1.3282174096389971
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.9803696393966677 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): -0.008113524551679083
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -0.9134991039258212
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): 0.11576087801355289
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): 0.6368695646424742
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): 0.6310275907193684
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): 0.11695722907795346
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 1.4686538320290057
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 1.0991281270980835 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): 2.4294111829617693
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 2.579747187731854
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): 2.5107048026431094
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): 2.444899731846079
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): 1.1139844372522139
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): 1.8402137827661758
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): 1.409488713254398
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 1.121810507774353 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): 1.8777972841778279
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): 1.2593908310801067
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): 1.9438653518729827
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 2.2442566766823107
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): 1.1248482575234737
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): 1.3536429339440408
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): 1.4287095520917459
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 1.2378985166549683 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): 1.1503669419335798
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): 0.3566419833341488
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): 1.141412014815373
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 1.7863313817490736
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): 1.1607295753940412
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): 1.394899952551739
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): 1.4628110821499185
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 1.5583749055862426 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): 0.6358341774591879
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -0.24619915989370986
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): 0.6755809316333036
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): 1.3078986102238968
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): 1.2414826774702723
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): 0.9368249341424351
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 1.5076437388732915
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 2.602781343460083 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): 0.22232422713015798
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -0.6842978026662756
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): 0.26759166458786193
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): 0.9100587992385354
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): 0.8780045088724893
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): 0.5225507021005142
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 1.590991521689565
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: cv2, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 6.340969252586365 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): 0.028347109331980834
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -0.9185085225323623
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): 0.06910475089927477
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): 0.6811184851588425
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): 0.6661448809779875
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): 0.2929667532178529
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 1.6535906487916623
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION cv2 DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION numba_cuda_direct:
1/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.007841086387634278 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): 0.9915637343083912
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 1.4184616332189097
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): 0.5540752062272858
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -0.9363349512025286
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): 0.030417251217187923
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): 0.20145200900203838
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): -0.8678954671726492
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.005699300765991211 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): 0.3586011721863038
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): 0.677838327033523
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.9119252412931607
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -1.0881171789246855
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): -0.06281608938298358
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): 0.011530220088680068
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): -0.8691417551509093
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.007874512672424316 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): -0.07650018485328462
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): 0.12653315641460866
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 0.40602063603703686
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -0.9550966618722586
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): 0.07304284712555328
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): -0.12958766334511712
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): -0.7232432212923006
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.014019441604614259 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): -0.4011277808625732
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): -0.24830909977246343
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): 0.11445977435101938
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -0.7758719505559355
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 0.29532449096840546
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): -0.26702586559703784
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): -0.4793888994759291
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.01320197582244873 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -1.0338993943141697
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): -0.8850949973206158
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): -0.5585366782016716
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): -0.9620622385055267
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): -0.16629355953206298
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): -0.8304166121141655
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): -0.5445738510718017
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.029133105278015138 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -1.274749690749886
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): -1.1440535237598672
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): -0.8636490245967227
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): -0.9568773384680826
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): -0.33838840806761095
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): -1.1408161220526136
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): -0.3644046181431854
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.003303790092468262 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): 0.5191060602136329
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): 0.9187998740012618
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 1.0435133676105672
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -1.5746602633707454
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): -0.48103373164884733
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): -0.24395179436038192
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): -1.1048328770383469
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.00330655574798584 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.05813915111464329
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): 0.17811105089527043
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 0.47914576568954176
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -1.583943711258747
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): -0.4769646528797174
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): -0.3458277262976441
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): -1.1062708344046717
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.0036953449249267577 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): -0.4842679595899542
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): -0.452370187509064
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): -0.13016374671201636
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -1.557000573516764
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): -0.4195845955106534
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): -0.5820713727674672
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): -1.063815612919125
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.006482124328613281 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): -0.8436532091329566
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): -0.8441849794018048
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): -0.47492464207999807
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -1.397710756721746
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): -0.2245599609307099
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): -0.7807800131026682
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): -0.8433426324769878
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.01338658332824707 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): -1.1181667109698477
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): -1.146112565604219
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): -0.8062486641253414
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -1.2657572438833276
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): -0.37683618729616464
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): -1.0270942374570768
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): -0.5630212199252679
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.04637551307678223 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -1.2482459518935867
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): -1.2191016844723763
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): -0.9620650693233392
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): -1.0958349560207257
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): -0.39813287347846943
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): -1.095209888335204
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): -0.20258422409742813
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.003466629981994629 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): 0.4618896308914217
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): 0.6971399249548222
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 0.9388897772773648
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -1.847750163677525
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): -0.6659062449357831
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): -0.2628494343392662
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): -1.0753883268988802
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.0034610986709594726 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): -0.039389379322188424
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): -0.12238535308003998
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 0.2394131317285932
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -1.8439910456585484
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): -0.6655987790028676
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): -0.40080075258884995
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): -1.0713294180486326
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.004359388351440429 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): -0.5412616983971571
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): -0.6472142986838064
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): -0.3232037699278326
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -1.7693449770090863
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): -0.5754278499355835
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): -0.6673676929818254
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): -0.9806199118076109
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.008588457107543945 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): -0.8590158874382707
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): -1.0099002662494556
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): -0.6604245776807198
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -1.5611711183392973
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): -0.3061882155998579
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): -0.8773009794834236
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): -0.7109329446917155
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.023572778701782225 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): -1.0134740480842102
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): -1.1801684648410595
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): -0.8178807555324594
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -1.3472543685685625
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): -0.39947344995497663
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): -1.0243086388570493
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): -0.3761001033810689
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.08265032768249511 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): -1.1538717990220064
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -1.244257673141524
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): -0.9871799894771663
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): -1.1828658411508832
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): -0.42694098617047305
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): -1.1742690270297493
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): -0.08826887995107924
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.0032886505126953126 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): 0.47722201910106654
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 0.8192197588322897
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 1.2166409590781528
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -1.5924141924729376
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): -0.49058239613293436
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): -0.22850322799934922
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): -1.1003866372633972
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.00329737663269043 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): 0.10453100081785491
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): 0.13911637647444877
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 0.6742277242367488
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -1.611656675599956
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): -0.47698306440027444
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): -0.30249555861769223
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): -1.0980996444550304
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.0036886930465698242 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): -0.3909454908237199
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): -0.4772905810685097
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.10563581893127098
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -1.581801168925405
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): -0.4277961388164704
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): -0.5957532697015611
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): -1.0445371762669622
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.006229996681213379 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): -0.7594183976051896
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): -0.894548301977046
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): -0.31155579213580625
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -1.4117427940516254
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): -0.2386378309529102
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): -0.8237131601031468
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): -0.836207734393984
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.014036321640014648 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): -0.9952501310776924
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): -1.154365811501185
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): -0.5943125463919816
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -1.2221072018675425
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): -0.3616987125106815
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): -1.0318528037346617
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): -0.5284094354186298
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.049492597579956055 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): -1.0767423873486712
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -1.212736762773614
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): -0.7005001514842539
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): -1.0247183948926246
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): -0.3762894519446031
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): -1.1908179827184295
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): -0.12218765363075756
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0034632205963134764 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): 0.4984673978812148
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 0.6375492308979227
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 1.0607023250985925
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -1.8419364916620786
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): -0.6794702773546246
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): -0.24698117100775985
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): -1.2482495927019919
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.0032001018524169924 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): 0.029384198319010246
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): -0.12701670267026308
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 0.46567053066216296
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -1.8976647705623162
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): -0.7075345191166317
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): -0.4185042249273477
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): -1.1038405598647876
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.004197311401367187 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): -0.4691009128298465
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): -0.710386458581061
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): -0.1393635181839357
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -1.7995737859675227
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): -0.581926847743407
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): -0.6640468612648108
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): -0.9880623734446762
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.009002757072448731 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): -0.7226352643560775
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): -1.0034910826407883
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): -0.3666880381137061
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -1.5540757311141131
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): -0.29360252716562685
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): -0.8379170318813117
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): -0.6896439695005885
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.024154019355773926 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): -0.8689507148469016
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): -1.1890751305876566
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): -0.5632842243240823
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -1.3073852655155478
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): -0.38172751831463203
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): -0.9894642380003078
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): -0.3191243771012439
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.08259174823760987 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): -1.0035316936858178
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -1.2630062143413074
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): -0.7643329398254938
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): -1.1440291152334763
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): -0.42246804334027377
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): -1.1095982076576423
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 0.015037790073123065
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.003224968910217285 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): 0.3631396227520658
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): 0.3640592671367639
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 0.8107690993983129
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -2.177934283719119
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): -0.9382040155377324
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): -0.34640604889140003
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): -1.1247987277976907
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.00332489013671875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): -0.07898864170942053
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): -0.3855613139507865
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 0.20071026942549233
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -2.1692078366631558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): -0.92338102200975
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): -0.5223792511920632
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): -1.0920083519903616
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.005748462677001953 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): -0.4434117999370687
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): -0.8424330442226992
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): -0.21241845596467232
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.9611192659737366
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): -0.6854092910492071
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): -0.7202803987773827
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): -0.8570986219145941
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.012520241737365722 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): -0.7020996910756387
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): -1.1435304363287344
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): -0.5150712137186773
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -1.7050304870717465
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): -0.3807512890731716
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): -0.9176231962812064
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): -0.5610185200702614
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.03932311534881592 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): -0.7887523184479578
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): -1.2583265152571572
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): -0.6139774043688672
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -1.4300569544811157
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): -0.4445019305488666
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): -1.0153954093096738
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): -0.16344685261863737
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.14894647598266603 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): -0.9060207013626395
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -1.2891260446654678
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): -0.7693673849592046
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): -1.228592871463335
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): -0.45030669654889105
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): -1.1230021985901515
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 0.14175584688438728
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0032359838485717775 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): 0.3070778700455698
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): 0.5569128045670113
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 1.0339533193256598
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -1.9038081400687774
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): -0.6992342245207872
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): -0.2878967558477398
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): -1.1269357510244835
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.003322935104370117 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): -0.008803338696665374
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): -0.14941279411807473
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 0.6196168909490272
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -1.8855587999630248
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): -0.6874794473223185
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): -0.44694297157909624
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): -1.0948305098603968
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.00454556941986084 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): -0.39432821537976526
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): -0.7029787863376903
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 0.056664006618450204
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -1.7865544426878937
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): -0.5588525834098927
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): -0.6836500758601634
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): -0.9634294042263369
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.008876442909240723 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): -0.6383251782569337
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): -1.0387303253062417
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): -0.2208619352459546
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -1.5687185865649986
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): -0.29239959878664207
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): -0.9028770482046602
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): -0.687518098479155
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.025660133361816405 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): -0.8248500612597605
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): -1.1899043811931345
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): -0.40048552696665374
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -1.270300149483321
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): -0.36298793726994394
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): -1.032128198371177
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): -0.29163027937732494
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.09256103038787841 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): -0.8522253476495246
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): -1.2408016733784233
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): -0.5187061941380773
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): -1.0584070534505623
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): -0.3840738176630902
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -1.2865550555720346
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 0.07808168116019723
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0033281564712524412 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): 0.3474021999490242
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.3772403246240249
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 0.9212638761475119
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -2.1621658041394567
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): -0.9279371413444275
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): -0.3563093177101606
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): -1.088416065247201
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.003726696968078613 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): 0.053975887901446244
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): -0.3670326794409631
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 0.49331487403078034
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -2.1306376024563867
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): -0.8754902271501805
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): -0.49552554497356
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): -1.0403229339771218
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.005249309539794922 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): -0.3827215702686462
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): -0.9030202033608353
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): -0.05690298262581556
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -2.001292680988553
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): -0.7245602664799896
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): -0.7678538816871785
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): -0.8967103240589448
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.01300194263458252 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): -0.5611028626237189
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): -1.1439144617407115
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): -0.27043496032389475
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -1.6834919658597387
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): -0.36785754061122644
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): -0.9145160150498913
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): -0.5384830503451644
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.04045069217681885 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): -0.6842561125880028
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): -1.2690010218565078
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): -0.4229209774496949
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -1.3839116528767303
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): -0.4399591723705025
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): -1.0196651701811457
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): -0.11743037191883023
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.15505876541137695 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): -0.7540229045410426
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -1.2939409477810602
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): -0.553345867975274
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): -1.1793267647925874
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): -0.436541637084046
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): -1.1668369721421588
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 0.24069298323778998
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0034766197204589844 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): 0.3382157356916736
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): 0.09570918944116376
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 0.764212588209637
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -2.441760502336966
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): -1.1750292928003891
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): -0.35590329697785217
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): -1.0889010179512948
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.004171228408813477 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): -0.041267647730202944
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): -0.614100282282957
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 0.17426314864860443
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -2.3815637850992455
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): -1.095419845499704
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): -0.5785116948433252
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): -0.991117599293617
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.007778716087341308 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): -0.3607864106070546
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): -1.0222821650684157
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): -0.16484128359911818
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -2.121998017606618
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): -0.8181076265106335
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): -0.7969742541072714
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): -0.7297443628676583
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.020583367347717284 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): -0.5002385486943539
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): -1.2292780873352536
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): -0.3527767680183422
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -1.7803610265845247
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): -0.4408332466787067
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): -0.9412580824085718
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): -0.3418795543619888
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.07305071353912354 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): -0.5316722857333486
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): -1.2923417635708425
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): -0.3883117786360447
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -1.45542928353454
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): -0.4565316647671788
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): -1.0289098039400149
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 0.08584982623435433
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: numba_cuda_direct, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.28021328449249266 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): -0.6442179808436861
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -1.3207374072883131
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): -0.5471224989697674
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): -1.2561039865120236
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): -0.46564740350241624
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): -1.0610642717525463
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 0.36660740623163773
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.004429221153259277 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): 0.6073827929169231
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): 1.1705512246371739
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 1.3466771067631411
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -1.1707321685031915
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): -0.27077487360642644
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): -0.11207002134324225
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): -0.966814040225227
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0032561302185058595 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): 0.022468574191720183
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): 0.11592549032157722
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 0.4724150550571406
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -1.3293705918530727
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): -0.3701356056155043
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): -0.2326014664351909
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): -1.1066870472194072
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.004002523422241211 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): -0.5071312708955721
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): -0.5396701857613194
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): -0.26572720069152506
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -1.2550442173276475
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): -0.2804682287132835
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): -0.4811707498926684
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): -1.018076274573332
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.0067434549331665036 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): -0.8636873712289634
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): -0.9774719574037471
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): -0.6013338740546268
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -1.1198501209886929
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): -0.08121328853466088
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): -0.5899434870246218
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): -0.7964144626081896
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.016347885131835938 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): -1.094573924441676
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -1.2197995692850032
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): -0.8415215082738363
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): -0.9013251406485955
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): -0.14318691731490685
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): -0.7377574663268363
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): -0.4578541772953139
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.05759813785552979 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): -1.2112784945252026
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -1.285097691523502
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): -0.9924062752028329
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): -0.7057465887071579
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): -0.1292145141854301
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): -0.8452318192639001
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): -0.03407471868656617
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.003583836555480957 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): 0.40939961538887076
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 0.8555961016327865
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): 0.7773689846425182
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -1.5581092167397868
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): -0.5067339741670617
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): -0.32530975015894786
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): -1.057270965258114
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.0034254789352416992 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): -0.10712022230376167
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): -0.09725628277666608
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 0.07350608384035288
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -1.5837044950908932
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): -0.5176506810109118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): -0.3273114567396606
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): -1.0853763221515162
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.004773473739624024 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): -0.6009833009651373
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): -0.7247981163241594
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): -0.456735208333364
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -1.4825788929085932
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): -0.38447826160607274
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): -0.47829101969846943
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): -0.9347769717581706
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.009874796867370606 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): -0.9042047547485922
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): -1.0728958714658878
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): -0.7302237164058326
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -1.2515657751599143
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): -0.09753974506803978
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): -0.598684414205371
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): -0.6408452285318461
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.02691760063171387 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): -1.027744539993363
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -1.2635083834773324
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): -0.8923179101849537
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): -1.0005037021226761
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): -0.16187766906128137
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): -0.7237619371336228
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): -0.2748404533189754
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.10199403762817383 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): -1.158984072770885
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -1.3029537723191378
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): -1.0272992835795531
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): -0.7938157834177603
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): -0.14925832190597904
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): -0.7528475962087291
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 0.1175631821855917
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.003358769416809082 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): 0.2265922599506085
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 0.6829518520552981
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): 0.4482402053610103
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -1.8709540386410837
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): -0.7648508667557561
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): -0.4245409820367302
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): -1.09336554488682
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.003834056854248047 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): -0.2538649964593897
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): -0.3742792534461926
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): -0.14759008758248612
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -1.8207028832998011
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): -0.6953011320228187
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): -0.3593157060893356
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): -1.0315006528820245
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.006811308860778809 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): -0.7611307614480454
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): -0.8639895387639998
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): -0.6441576728584967
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -1.6038402259915219
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): -0.45866474869588864
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): -0.4677120219025519
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): -0.796777391912273
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.01489572525024414 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): -1.0482467791402788
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): -1.188262840749523
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): -0.9430498867323838
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -1.356878021347515
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): -0.14582813477876122
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): -0.636085764380546
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): -0.4825069151937801
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.05043525695800781 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): -1.2151030352748726
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -1.2893854292258715
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): -1.012113078302333
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): -1.0663056380192175
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): -0.15181106777908085
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): -0.6932878026515682
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): -0.060670489885174796
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.19092974662780762 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): -1.208402634835671
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -1.3201512016795438
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): -1.0743779533272757
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): -0.8597608891849584
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): -0.15665871534267617
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): -0.8118031402871
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 0.23746886448441182
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.003243160247802734 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): 0.3982130690181118
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): 0.7339545912559081
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 0.8131704438202971
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -1.6140127017418773
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): -0.5747857882137116
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): -0.33780716121129506
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): -1.0993690675202572
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.003211832046508789 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): -0.01091615155286413
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): -0.17332934809222778
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 0.36178199967007235
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -1.6329072223650858
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): -0.5601678095958235
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): -0.33945278395039097
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): -1.1167666583998443
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.004537105560302734 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): -0.4787863155468597
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): -0.7813942287875856
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): -0.1482420280444421
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -1.5134962698232803
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): -0.4073484748213655
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): -0.5007920884897441
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): -0.9642227077373882
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.009853076934814454 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): -0.7308254728308287
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): -1.1104396123884779
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): -0.4736157763100545
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -1.2485619173360436
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): -0.09523040782660543
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): -0.621298890429751
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): -0.6399110968812712
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.028560066223144533 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): -0.8770338222458582
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -1.2685876847718527
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): -0.6343962773519234
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): -0.9499656115410537
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): -0.13578022838817402
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): -0.7241575261060229
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): -0.2239408236882037
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.10747473239898682 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): -0.9585354084612695
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -1.3056124822043362
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): -0.7765568772539972
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): -0.736319073989715
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): -0.1316204988378921
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): -0.8537111195939283
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 0.18576344006059503
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0035053491592407227 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): 0.3701097943707749
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): 0.6434237294085915
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.7008349484028269
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -1.858943963569598
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): -0.7403924958248054
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): -0.3965630916185865
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): -1.0732761023776232
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.004144096374511718 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): -0.07160478738121079
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): -0.32080278666529183
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 0.18726504069917893
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -1.8025206449914002
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): -0.6577588286088979
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): -0.3036468619168176
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): -1.0233448620149699
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.0064914941787719725 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): -0.4674715357987757
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): -0.8940693427186904
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): -0.28686701687191063
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -1.6300774869859613
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): -0.47837741480308027
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): -0.5001019660073446
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): -0.8161012156482892
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.014998841285705566 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): -0.7001762946054799
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): -1.19293271063689
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): -0.567857926413292
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -1.3559313911899606
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): -0.1408994685022944
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): -0.6182387649625048
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): -0.4840331595121404
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.05086405277252197 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): -0.7569065462464466
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -1.2812139920565295
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): -0.6383932853984616
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): -1.0237027011480844
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): -0.14993547285638764
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): -0.667385115055235
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): -0.042414642354910305
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.19175682067871094 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): -0.8787318860584614
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -1.3226449539995033
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): -0.7872380825188996
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): -0.8246594425538805
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): -0.152774852324588
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): -0.7442173781079297
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 0.3526849718275457
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0036658048629760742 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): 0.243844510643289
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.41920593144241547
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.41920593144241547
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -2.1320806370898073
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): -0.96664261725192
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): -0.4989599473783571
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): -1.0530593208536576
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.004147529602050781 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): -0.23845458971411745
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): -0.6089411427821733
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): -0.19399015543813153
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -2.0842569759802347
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): -0.9081803983697179
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): -0.4470528081437746
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): -1.0085379990883925
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.008974075317382812 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): -0.6554507704217805
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): -1.0406092755349952
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): -0.574767851079631
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -1.7929533995613716
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): -0.5855739980038457
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): -0.515814390231197
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): -0.6639776517477941
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.024640226364135744 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): -0.821402013679166
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): -1.2631025709309005
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): -0.7208049659491698
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -1.4515528327200113
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): -0.16812260953291414
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): -0.6254703623287028
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): -0.2740830342031813
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.09157330989837646 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): -0.9036028053359068
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -1.33052891093326
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): -0.7611045050486448
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): -1.0979649102403608
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): -0.16983578705307814
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): -0.6495107698749937
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 0.18173215384818014
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.3618311405181885 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): -0.9273116101415119
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -1.3550132631161087
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): -0.8101176283880879
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): -0.8836593152734933
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): -0.16354841359198913
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): -0.7377621327290156
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 0.4944303970679402
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.004439997673034668 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): 0.4724773668547503
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.64854440028698
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 1.0464688360575034
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -1.788423502175385
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): -0.638406983366905
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): -0.31210256463782
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): -0.9669692071121194
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0034047365188598633 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): -0.03452787290672955
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): -0.430540177919319
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 0.27797727593513205
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -1.902760617307455
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): -0.7515937835439791
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): -0.41453098322036297
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): -1.080545095123859
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.006153392791748047 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): -0.39724819990457344
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): -0.9469086263657936
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): -0.11281109522204748
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -1.686848176933067
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): -0.5087025473548575
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): -0.5547163628920807
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): -0.8303259071950341
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.015169048309326172 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): -0.5542760338029199
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): -1.2245929041979942
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): -0.34292651933134105
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -1.3728576056255999
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): -0.13292666695647912
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): -0.6720602116586244
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): -0.45601887601858204
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.05286388397216797 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): -0.596297764420987
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -1.3039300501888444
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): -0.41932252200564846
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): -0.9950128594294034
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): -0.14130893430950528
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): -0.7200127687996983
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 0.013813811367776048
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.20421156883239747 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): -0.689191320803063
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -1.3325279801826506
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): -0.551012079675001
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): -0.7616043152347741
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): -0.13950567969926447
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): -0.9433539066431036
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 0.4137338589541448
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0032922506332397463 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): 0.23984029749631275
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): 0.3145449472434843
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 0.6155489877613706
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -2.195682768123943
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): -1.0200824695727875
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): -0.558804180826086
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): -1.1001635196501975
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.0041628599166870115 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): -0.08667845840013262
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): -0.6249370326783495
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 0.07649579247903841
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -2.1126496636187104
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): -0.9133323183891078
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): -0.44685109354526836
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): -1.2396330898203898
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.008366012573242187 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): -0.3922817987358447
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): -1.078043056427685
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): -0.2581666957700843
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -1.8312808443517279
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): -0.6177236754374892
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): -0.5672191051986641
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): -0.6953254021503801
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.02506716251373291 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): -0.5062145629056075
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): -1.263907109348557
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): -0.38861089799324633
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -1.4453922339969636
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): -0.16200028731729885
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): -0.630256122749796
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): -0.24551508987499254
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.09275925159454346 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): -0.5410875719249973
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -1.3323188915137925
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): -0.3940130374404024
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): -1.0711813079180594
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): -0.16789373816562728
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): -0.6596695784634778
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 0.23742599889996896
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.3697237968444824 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): -0.6635528318077004
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -1.3494423328230245
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): -0.558253867553571
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): -0.8476230283576321
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): -0.15786487969394872
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): -0.7895269687400629
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 0.5902231026747771
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0034888029098510743 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): 0.06626372281798634
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): 0.08144331782346473
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 0.28855866721126955
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -2.4619838103409166
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): -1.259458591850582
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): -0.6714395609235401
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): -1.0690191913495959
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.0054269075393676754 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): -0.2769756530762831
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): -0.8812758787192724
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): -0.1155499713794995
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -2.274512181508177
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): -1.0674509646494992
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): -0.47359503761692767
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): -0.8799165221368427
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.013108396530151367 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): -0.5469320287156376
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): -1.3299920990460719
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): -0.43274180280349167
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -1.9217867865568883
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): -0.6922404354201503
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): -0.5821659309163317
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): -0.5010796896262752
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.044251203536987305 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): -0.6657233888992762
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -1.494813281653104
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): -0.5045944793465865
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): -1.487996427012501
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): -0.18929236537443014
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): -0.6093387202661784
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): -0.024272471169774466
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.1748563528060913 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): -0.6505148468963783
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -1.5323658929484407
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): -0.49715442451708364
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): -1.2058581541994011
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): -0.17452256653342493
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): -0.6499587833570898
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 0.4537125243879167
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: numba_cuda_direct, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.7011970281600952 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): -0.6430432605549996
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -1.5597539722571516
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): -0.5363325112221263
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): -0.9025825734832921
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): -0.16765696277938016
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): -0.6629544158258135
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 0.7450363359938936
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.003199315071105957 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): 0.3601158484152747
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 1.029073190648553
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): 0.8071759965410293
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -1.3700043895921519
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): -0.47110312569369645
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): -0.30850458701108346
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): -1.099088102557013
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.0030924320220947266 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): -0.16175415495029127
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): 0.00010046059106020284
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 0.044303046596470864
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -1.3944884295541529
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): -0.4775763848300424
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): -0.5343485587131702
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): -1.126944750165797
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.004896402359008789 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): -0.5830606620113089
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): -0.6553155276232093
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): -0.3881459504585713
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -1.2270033918850385
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): -0.263830841709627
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): -0.3469770270765429
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): -0.9241609478377008
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.009366273880004883 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): -0.9000926144619559
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -1.087216108582669
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): -0.7373914246810641
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): -1.0358741039512227
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 7.739168263350707e-05
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): -0.44752505912844115
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): -0.652266160708196
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.027256274223327638 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): -1.019589860468619
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -1.2616522688095368
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): -0.8676496077193506
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): -0.7455029024348947
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): -0.015093972544437128
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): -0.5198231263354682
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): -0.23331128030684917
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.09956276416778564 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): -1.1547284608820294
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -1.3179932652587958
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): -1.0308196872438067
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): -0.5391985984691318
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): 0.0046556103231344004
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): -0.6094449129901355
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 0.18307444829024547
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.003871583938598633 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): 0.2880203416226397
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 0.8901530138753626
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): 0.41303868178295117
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -1.5666122148891117
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): -0.5612225696340364
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): -0.29057095454488757
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): -1.0306723026257598
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.003959488868713379 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): -0.25246034286787683
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): -0.15717114260067994
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): -0.15708372495958334
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -1.5686762081420296
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): -0.551134104640221
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): -0.5576024282532553
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): -1.0141663669326484
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.00640108585357666 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): -0.7769631180812367
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): -0.8250057038247217
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): -0.6697090594196596
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -1.3937187863382696
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): -0.3558933863104611
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): -0.3485487907797882
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): -0.8114307260642576
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.015134787559509278 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): -1.0205920210096886
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -1.1453657183066668
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): -0.9185448987729911
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): -1.1131252923280783
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 0.004031851259689266
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): -0.4064858612999719
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): -0.4597400937497907
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.046678996086120604 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): -1.175913825068643
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -1.3008146759871881
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): -0.9938939957316612
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): -0.8215169687932683
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): -0.023629445491076304
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): -0.4833165358133814
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): -0.0528352221414754
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.18284144401550292 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): -1.2357585188025804
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -1.333857347056225
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): -1.067284274456624
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): -0.6122990010666637
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): -0.001722504805315176
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): -0.4998866381977644
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 0.3328307290398151
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0035904407501220702 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): 0.03779642607806188
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 0.6532168396114808
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): 0.10918402153091238
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -1.8885298871461424
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): -0.8376044836932304
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): -0.42863926537640046
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): -1.062199121373741
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.0038878202438354494 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): -0.566668782562051
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): -0.4465654259704585
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): -0.526411307031726
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -1.864449209767057
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): -0.804996194877851
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): -0.7177002267348328
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): -1.0218734786811452
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.00997333526611328 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): -0.9458326477821167
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): -0.9148857560674472
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): -0.9289108843392794
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -1.4926250605182863
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): -0.39789847840301656
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): -0.3216423606916151
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): -0.6244239889035377
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.02493131160736084 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): -1.17971364657336
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -1.214137691890955
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): -1.1143865883252069
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): -1.1918310659197762
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): -0.018469873084276514
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): -0.41260438622181733
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): -0.26527379980077476
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.0882641315460205 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): -1.286631428387784
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -1.3140325603565501
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): -1.1808022500598037
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): -0.8691826934881409
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): -0.01844502362390545
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): -0.4510516531221616
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 0.15290075425863978
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.3500108480453491 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): -1.2298819177265683
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -1.3487337967662267
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): -1.1713953157593748
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): -0.655941853461501
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): -0.008850645304198134
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): -0.5478512703744677
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 0.45207557883164406
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.004228544235229492 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): 0.4506215175594902
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.9283721495995739
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): 0.8492289720854557
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -1.5417519265828834
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): -0.5234452470126573
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): -0.24540541314860545
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): -1.0096713272292532
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.0033336877822875977 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): -0.19170867089232388
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): -0.3084302707271981
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 0.018940496167801184
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -1.6606226278117513
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): -0.6228542068212439
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): -0.6389226291516344
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): -1.0848421226308154
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.00698697566986084 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): -0.4333065371943834
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): -0.8125937066225172
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): -0.25493316941015765
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -1.3646178062448793
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): -0.31368999700517963
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): -0.3377871266269337
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): -0.7730359123579885
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.01405029296875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): -0.7331307954222276
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -1.2066229517777673
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): -0.6153306849834664
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): -1.1429610471696845
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): -0.025947984408625682
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): -0.471174798849788
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): -0.4794516195115693
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.048227477073669436 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): -0.7920819485960718
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -1.3141563402342138
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): -0.6497992832738348
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): -0.7845597667867441
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): -0.011246541607277213
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): -0.4991969991487165
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): -0.00405534838217675
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.18991379737854003 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): -0.8833511197202562
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -1.3395692249854334
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): -0.7945915441597168
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): -0.5545834747147751
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): 0.008608375146046586
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): -0.6063116491740914
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 0.42437943395666217
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.0037862300872802735 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): 0.23775464940215724
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 0.6763150120172917
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): 0.5002324055388265
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -1.8747164388244986
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): -0.8078877951158471
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): -0.3337391409502602
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): -1.0332191582367996
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.003796815872192383 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): -0.27068578184710007
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): -0.46863757006740564
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): -0.20475357656273901
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -1.889981367879906
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): -0.8043399602167118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): -0.7118180844472803
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): -1.0426184075110188
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.008235287666320801 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): -0.6490373472189636
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): -1.0181803121619277
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): -0.5787094449867376
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -1.581345551572513
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): -0.47789800221264733
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): -0.388916678620055
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): -0.7001748552381758
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.023769474029541014 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): -0.8218581191241637
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -1.2596214450442724
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): -0.7320613052269271
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): -1.2100279651448125
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): -0.04067514632391963
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): -0.41637988678472865
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): -0.2681352796160758
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.08879287242889404 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): -0.9132417230334495
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -1.331644531552698
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): -0.717171541189822
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): -0.8341598652699551
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): -0.016416342331473023
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): -0.4247340314496194
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 0.22439364753732796
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.3517049551010132 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): -0.936151380581977
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -1.3583749796363753
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): -0.7924853193476853
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): -0.6149491840694733
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): -0.003821128407240746
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): -0.48078635435946304
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 0.5934529645901122
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.0035904407501220702 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): -0.03694878177958282
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 0.38035315161295224
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): 0.09387884707063125
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -2.1829370019329652
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): -1.0921934653233747
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): -0.5219893128081602
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): -1.0680362687891276
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.004330182075500488 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): -0.541424557147627
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): -0.7689149089524017
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): -0.42679411152025465
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -2.1087393312629428
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): -1.0085900441538145
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): -0.839781044327869
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): -0.9718478403902523
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.01296534538269043 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): -0.8169859628854302
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): -1.1785266517551518
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): -0.8035621842848468
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -1.6725259112707536
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): -0.5436840805944712
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): -0.3672883998047956
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): -0.5098043143099469
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.0418316125869751 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): -0.9410240864861664
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -1.406113844102296
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): -0.8965076338386089
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): -1.2582702428754042
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): -0.04712506647521038
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): -0.39279553635365444
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): -0.047170588946754695
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.16617212295532227 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): -0.9703342619614655
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -1.4800187472648947
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): -0.9201112721981217
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): -0.8865820961746658
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): -0.029073946664727995
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): -0.3883800792318094
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 0.4174102222411515
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.6750784158706665 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): -0.9379856240826576
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -1.5007543902362475
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): -0.8932146345891382
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): -0.6663243168304782
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): -0.012002580759672648
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): -0.4670616837966868
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 0.7134932720485917
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.0035065412521362305 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 0.2907727194312502
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): 0.5046583073206288
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.5460406102342733
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -1.9209825014851514
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): -0.8417369258211771
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): -0.42533265978381063
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): -1.058874145325017
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0036931514739990236 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): -0.1304070731527198
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): -0.5386521646553224
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): -0.022524729083415785
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -1.9123126293883526
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): -0.8285407116209681
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): -0.776596169537199
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): -1.0419194559949425
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.008060646057128907 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): -0.44857085765022764
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): -1.0609537834089804
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): -0.2965923664452411
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -1.6088779807317144
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): -0.49512082534592256
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): -0.45657049061497534
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): -0.7027957383577033
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.024480819702148438 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): -0.49194798322492816
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -1.2650640120030894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): -0.40380557568159164
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): -1.211324221426166
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): -0.03905126565777478
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): -0.4656141137692559
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): -0.24590637004084476
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.09198052883148193 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): -0.5210633202903344
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -1.338973429214276
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): -0.4144504503655324
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): -0.8103976011441558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): -0.006430423272699565
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): -0.47718312712058314
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 0.25154370949863447
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.3688462257385254 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): -0.6143040901067663
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -1.364541281114312
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): -0.5516161851920156
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): -0.5683660195294226
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): 0.007613205093770349
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): -0.6865545483377571
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 0.6544735570054683
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0036209821701049805 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): 0.128638507541527
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): 0.355917379333672
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 0.38388640306510696
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -2.1919979778649705
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): -1.093419148455344
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): -0.5047485619531745
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): -1.0711951719637556
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.004588198661804199 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): -0.22935621328660524
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): -0.7572157043876196
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): -0.16969313195157773
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -2.0988378073368392
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): -0.9877918628620629
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): -0.823159194179089
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): -0.961913241463605
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.011825013160705566 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): -0.5012268737887255
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): -1.2656962422241242
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): -0.48234238252765615
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -1.7215815456989558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): -0.5811077930791642
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): -0.4209668737125681
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): -0.5515294077934976
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.042021965980529784 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): -0.5811110976892195
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -1.457658209760315
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): -0.49494990244115344
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): -1.268084721059511
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): -0.050920922927028614
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): -0.4070157264185596
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): -0.03316236979240793
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.16700875759124756 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): -0.640558136664274
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -1.5193824593562248
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): -0.4584296952350492
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): -0.8666102952739466
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): -0.02776427520213842
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): -0.4037476518910985
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 0.4616071143650505
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.6877024412155152 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): -0.6449830891941533
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -1.5503686685682954
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): -0.5211086866289213
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): -0.6368695646424742
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): -0.005841973923105777
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): -0.5199123355645208
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 0.8317842673865314
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.0039459228515625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): -0.01548854888430951
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 0.13484745588577515
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): 0.06580507079703038
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -2.444899731846079
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): -1.330915294593865
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): -0.604685949079903
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): -1.0354110185916807
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.006392383575439453 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): -0.36645939250448295
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): -0.984865845602204
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): -0.3003913248093282
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -2.2442566766823107
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): -1.1194084191588372
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): -0.89061374273827
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): -0.815547124590565
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.020246672630310058 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): -0.6359644398154937
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): -1.4296893984149248
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): -0.6449193669337006
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -1.7863313817490736
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): -0.6256018063550324
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): -0.3914314291973346
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): -0.3235202995991551
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.07669610977172851 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): -0.672064432764709
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -1.5540977701176066
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): -0.6323176785905933
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): -1.3078986102238968
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): -0.06641593275362462
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): -0.37107367608146175
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 0.1997451286493947
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.3201687097549438 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): -0.6877345721083774
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -1.594356601904811
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): -0.6424671346506735
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): -0.9100587992385354
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): -0.032054290366046116
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): -0.38750809713802115
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 0.6809327224510296
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: numba_cuda_direct, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 1.3214087009429931 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): -0.6527713758268617
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -1.599627007691205
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): -0.6120137342595677
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): -0.6811184851588425
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): -0.014973604180855145
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): -0.3881517319409897
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 0.9724721636328196
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION numba_cuda_direct DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION numba_cuda_tiles:
1/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.007310700416564941 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): 0.9611464830912033
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 1.3880443820017219
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): 0.5236579550100978
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -0.9667522024197165
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): -0.030417251217187885
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): 0.17103475778485053
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): -0.8983127183898371
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.006586241722106934 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): 0.4214172615692873
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): 0.7406544164165065
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.9747413306761442
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -1.0253010895417018
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): 0.0628160893829836
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): 0.07434630947166367
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): -0.8063256657679256
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.006655502319335938 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): -0.14954303197883792
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): 0.05349030928905538
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 0.33297778891148355
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -1.0281395089978118
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): -0.07304284712555331
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): -0.20263051047067046
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): -0.7962860684178539
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.007102417945861817 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): -0.6964522718309787
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): -0.5436335907408689
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): -0.18086471661738607
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -1.071196441524341
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): -0.29532449096840546
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): -0.5623503565654433
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): -0.7747133904443345
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.019361209869384766 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -0.8676058347821066
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): -0.7188014377885529
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): -0.3922431186696087
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): -0.7957686789734637
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 0.16629355953206298
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): -0.6641230525821026
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): -0.37828029153973874
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.06350021362304688 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -0.9363612826822751
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): -0.8056651156922564
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): -0.5252606165291117
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): -0.6184889304004717
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 0.3383884080676109
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): -0.8024277139850026
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): -0.026016210075574517
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.010001063346862793 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): 1.0001397918624801
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): 1.399833605650109
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 1.5245470992594146
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -1.093626531721898
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): 0.48103373164884733
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): 0.23708193728846536
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): -0.6237991453894994
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.009916090965270996 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.5351038039943607
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): 0.6550757037749878
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 0.9561104185692592
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -1.1069790583790293
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): 0.4769646528797174
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): 0.13113692658207338
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): -0.6293061815249542
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.009710454940795898 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): -0.06468336407930077
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): -0.03278559199841059
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.2894208487986371
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -1.1374159780061106
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 0.41958459551065347
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): -0.1624867772568138
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): -0.6442310174084714
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.010871195793151855 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): -0.6190932482022468
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): -0.6196250184710949
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): -0.2503646811492881
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -1.1731507957910359
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 0.22455996093070987
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): -0.5562200521719584
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): -0.6187826715462779
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.031879091262817384 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): -0.741330523673683
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): -0.7692763783080544
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): -0.42941247682917666
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -0.8889210565871629
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 0.3768361872961647
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): -0.6502580501609122
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): -0.18618503262910316
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.1159902811050415 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -0.8501130784151172
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): -0.820968810993907
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): -0.5639321958448698
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): -0.6977020825422562
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 0.39813287347846943
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): -0.6970770148567346
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): 0.19554864938104127
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.01606252193450928 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): 1.1277958758272049
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): 1.3630461698906053
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 1.6047960222131479
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -1.181843918741742
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): 0.6659062449357831
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): 0.403056810596517
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): -0.40948208196309716
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.016025543212890625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): 0.6262093996806791
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): 0.5432134259228275
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 0.9050119107314607
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -1.178392266655681
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): 0.6655987790028676
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): 0.26479802641401756
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): -0.40573063904576506
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.016400361061096193 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): 0.03416615153842632
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): -0.07178644874822293
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): 0.2522240800077509
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -1.193917127073503
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 0.5754278499355835
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): -0.09193984304624186
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): -0.40519206187202733
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.017382144927978516 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): -0.5528276718384127
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): -0.7037120506495976
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): -0.3542363620808619
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -1.2549829027394395
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 0.3061882155998579
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): -0.5711127638835656
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): -0.4047447290918576
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.05914039611816406 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): -0.6140005981292336
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): -0.7806950148860828
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): -0.41840730557748285
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -0.947780918613586
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 0.3994734499549766
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): -0.6248351889020727
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): 0.02337334657390773
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.22089483737945556 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): -0.7269308128515334
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -0.817316686971051
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): -0.5602390033066933
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): -0.7559248549804101
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 0.4269409861704731
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): -0.7473280408592763
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): 0.33867210621939386
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.010176539421081543 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): 0.9678044152340008
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 1.3098021549652241
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 1.7072233552110871
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -1.1018317963400033
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): 0.49058239613293436
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): 0.26207916813358517
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): -0.6098042411304629
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.009888982772827149 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): 0.5815140652181293
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): 0.6160994408747232
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 1.1512107886370233
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -1.1346736111996816
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): 0.47698306440027444
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): 0.17448750578258215
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): -0.621116580054756
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.009877991676330567 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): 0.0368506479927505
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): -0.04949444225203928
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.5334319577477413
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -1.1540050301089346
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): 0.4277961388164704
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): -0.16795713088509068
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): -0.6167410374504918
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.01079258918762207 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): -0.5207805666522795
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): -0.6559104710241359
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): -0.07291796118289608
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -1.1731049630987154
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 0.2386378309529102
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): -0.5850753291502366
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): -0.5975699034410739
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.03228137493133545 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): -0.6335514185670109
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): -0.7926670989905036
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): -0.2326138338813001
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -0.860408489356861
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 0.36169871251068153
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): -0.6701540912239803
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): -0.1667107229079484
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.11771442890167236 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): -0.7004529354040681
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -0.8364473108290109
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): -0.3242106995396508
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): -0.6484289429480216
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 0.37628945194460317
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): -0.8145285307738266
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): 0.25410179831384555
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.01655580997467041 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): 1.1779376752358395
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 1.3170195082525473
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 1.7401726024532171
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -1.162466214307454
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): 0.6794702773546246
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): 0.43248910634686477
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): -0.5687793153473673
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.01631917953491211 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): 0.736918717435642
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): 0.5805178164463687
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 1.1732050497787947
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -1.1901302514456846
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): 0.7075345191166317
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): 0.289030294189284
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): -0.3963060407481559
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.016028690338134765 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): 0.11282593491356051
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): -0.12845961083765403
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): 0.44256332955947136
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -1.2176469382241157
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 0.581926847743407
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): -0.08212001352140377
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): -0.40613552570126915
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.0177001953125 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): -0.4290327371904507
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): -0.7098885554751615
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): -0.07308551094807932
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -1.2604732039484865
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 0.29360252716562674
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): -0.544314504715685
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): -0.3960414423349617
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.05817239284515381 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): -0.48722319653226964
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): -0.8073476122730245
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): -0.18155670600945037
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -0.9256577472009156
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 0.381727518314632
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): -0.6077367196856758
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): 0.0626031412133881
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.2184764862060547 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): -0.5810636503455442
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -0.8405381710010337
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): -0.34186489648521995
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): -0.7215610718932024
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): 0.42246804334027377
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): -0.6871301643173685
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 0.4375058334133969
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.02797238826751709 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): 1.3013436382897983
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): 1.3022632826744962
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 1.7489731149360452
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -1.2397302681813867
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): 0.9382040155377324
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): 0.5917979666463323
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): -0.18659471225995847
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.027871370315551758 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): 0.8443923803003295
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): 0.5378197080589635
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 1.1240912914352423
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -1.2458268146534057
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): 0.92338102200975
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): 0.40100177081768684
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): -0.16862732998061147
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.027858710289001463 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): 0.2419974911121385
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): -0.157023753173492
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): 0.4729908350845348
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.2757099749245295
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 0.6854092910492072
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): -0.034871107728175504
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): -0.17168933086538699
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.03008596897125244 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): -0.3213484020024671
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): -0.7627791472555627
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): -0.13431992464550566
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -1.324279197998575
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 0.38075128907317163
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): -0.5368719072080348
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): -0.18026723099708983
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.10943338871002198 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): -0.34425038789909124
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): -0.8138245847082907
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): -0.16947547382000056
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -0.9855550239322491
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 0.4445019305488666
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): -0.5708934787608072
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): 0.2810550779302292
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.4200847625732422 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): -0.4557140048137484
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -0.8388193481165768
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): -0.31906068841031354
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): -0.7782861749144437
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): 0.4503066965488911
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): -0.6726955020412605
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 0.5920625434332784
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.016189765930175782 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): 1.006312094566357
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): 1.2561470290877985
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 1.733187543846447
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -1.20457391554799
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): 0.6992342245207872
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): 0.4113374686730474
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): -0.42770152650369636
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.01618084907531738 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): 0.6786761086256531
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): 0.5380666532042436
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 1.3070963382713456
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -1.1980793526407063
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): 0.6874794473223185
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): 0.24053647574322218
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): -0.40735106253807823
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.016460418701171875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): 0.16452436803012743
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): -0.14412620292779751
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 0.6155165900283429
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -1.227701859278001
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): 0.5588525834098927
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): -0.12479749245027062
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): -0.4045768208164442
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.017403578758239745 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): -0.3459255794702917
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): -0.7463307265195996
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): 0.07153766354068745
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -1.2763189877783565
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 0.29239959878664207
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): -0.6104774494180182
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): -0.395118499692513
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.059189796447753906 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): -0.4618621239898165
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): -0.8269164439231905
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): -0.03749758969670978
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -0.9073122122133772
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 0.36298793726994394
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): -0.669140261101233
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): 0.07135765789261897
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.22413103580474852 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): -0.4681515299864345
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): -0.8567278557153333
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): -0.13463237647498724
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): -0.6743332357874722
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): 0.3840738176630901
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -0.9024812379089444
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 0.4621554988232874
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.028192973136901854 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): 1.2753393412934517
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 1.3051774659684525
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 1.8492010174919395
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -1.2342286627950292
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): 0.9279371413444275
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): 0.571627823634267
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): -0.16047892390277352
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.027977848052978517 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): 0.9294661150516268
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): 0.5084575477092174
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 1.3688051011809608
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -1.2551473753062061
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): 0.8754902271501805
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): 0.37996468217662055
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): -0.16483270682694143
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.02783956527709961 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): 0.34183869621134333
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): -0.17845993688084574
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): 0.667657283854174
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -1.2767324145085635
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 0.7245602664799896
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): -0.04329361520718897
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): -0.1721500575789552
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.0303295373916626 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): -0.19324532201249248
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): -0.7760569211294852
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): 0.0974225802873317
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -1.3156344252485122
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 0.3678575406112264
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): -0.546658474438665
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): -0.17062550973393795
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.11139998435974122 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): -0.24429694021750034
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): -0.8290418494860052
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): 0.017038194920807583
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -0.9439524805062279
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 0.4399591723705025
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): -0.5797059978106432
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): 0.3225288004516723
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.4236799955368042 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): -0.3174812674569966
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -0.8573993106970142
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): -0.11680423089122799
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): -0.7427851277085413
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): 0.4365416370840459
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): -0.730295335058113
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 0.6772346203218359
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.05202193260192871 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): 1.5132450284920629
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): 1.270738482241553
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 1.9392418810100263
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -1.2667312095365768
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): 1.1750292928003894
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): 0.8191259958225371
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): 0.08612827484909441
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.051961755752563475 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): 1.054152197769501
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): 0.48131956321674707
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 1.2696829941483085
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -1.2861439395995415
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): 1.095419845499704
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): 0.5169081506563789
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): 0.10430224620608695
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.05117001533508301 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): 0.45732121590357894
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): -0.20417453855778203
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): 0.6532663429115154
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -1.3038903910959847
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 0.8181076265106336
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): 0.021133372403362202
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): 0.08836326364297518
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.05680017471313477 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): -0.059405302015647185
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): -0.7884448406565469
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): 0.0880564786603645
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -1.3395277799058178
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 0.44083324667870677
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): -0.5004248357298651
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): 0.09895369231671797
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.20900473594665528 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): -0.0751406209661698
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): -0.8358100988036636
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): 0.06821988613113412
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -0.9988976187673612
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): 0.4565316647671788
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): -0.572378139172836
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 0.5423814910015332
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: numba_cuda_tiles, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.8187213659286499 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): -0.17857057734126985
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -0.8550900037858968
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): -0.08147509546735117
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): -0.7904565830096073
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): 0.46564740350241624
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): -0.5954168682501301
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 0.832254809734054
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.008262324333190917 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): 0.8781576665233496
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): 1.4413260982436003
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 1.6174519803695675
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -0.8999572948967651
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): 0.27077487360642644
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): 0.15870485226318415
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): -0.6960391666188006
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.007635498046875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): 0.3926041798072245
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): 0.4860610959370815
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 0.842550660672645
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -0.9592349862375684
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): 0.3701356056155043
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): 0.13753413918031346
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): -0.736551441603903
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.007634878158569336 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): -0.22666304218228847
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): -0.2592019570480359
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): 0.014741028021758473
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -0.9745759886143639
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 0.28046822871328353
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): -0.20070252117938492
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): -0.7376080458600485
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.008130097389221191 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): -0.7824740826943025
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): -0.8962586688690863
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): -0.5201205855199659
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -1.038636832454032
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 0.08121328853466088
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): -0.508730198489961
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): -0.7152011740735287
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.02273256778717041 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): -0.951387007126769
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -1.0766126519700965
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): -0.6983345909589295
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): -0.7581382233336886
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 0.14318691731490688
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): -0.5945705490119294
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): -0.31466725998040707
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.07755734920501708 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): -1.0820639803397727
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -1.1558831773380718
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): -0.8631917610174028
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): -0.5765320745217277
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 0.12921451418543006
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): -0.7160173050784701
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): 0.09513979549886387
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.011510181427001952 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): 0.9161335895559325
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 1.3623300757998482
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): 1.2841029588095798
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -1.0513752425727252
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): 0.5067339741670617
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): 0.1814242240081139
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): -0.5505369910910525
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.011281633377075195 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): 0.4105304587071502
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): 0.42039439823424574
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 0.5911567648512648
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -1.0660538140799813
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): 0.5176506810109118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): 0.19033922427125116
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): -0.5677256411406044
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.011569452285766602 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): -0.2165050393590646
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): -0.3403198547180867
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): -0.07225694672729126
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -1.0981006313025203
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 0.38447826160607274
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): -0.09381275809239667
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): -0.5502987101520979
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.012361407279968262 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): -0.8066650096805524
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): -0.9753561263978481
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): -0.6326839713377929
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -1.1540260300918745
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 0.09753974506803983
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): -0.5011446691373312
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): -0.5433054834638062
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.0390763521194458 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): -0.8658668709320815
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -1.101630714416051
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): -0.7304402411236723
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): -0.8386260330613949
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 0.16187766906128134
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): -0.5618842680723414
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): -0.112962784257694
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.14382457733154297 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): -1.0097257508649062
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -1.153695450413159
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): -0.878040961673574
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): -0.6445574615117813
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): 0.149258321905979
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): -0.60358927430275
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 0.2668215040915707
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.01954479217529297 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): 0.9914431267063646
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 1.4478027188110543
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): 1.2130910721167663
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -1.1061031718853276
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): 0.7648508667557561
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): 0.3403098847190259
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): -0.328514678131064
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.01900901794433594 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): 0.4414361355634291
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): 0.3210218785766261
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): 0.5477110444403327
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -1.1254017512769823
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 0.6953011320228187
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): 0.33598542593348313
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): -0.3361995208592057
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.019583725929260255 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): -0.3024660127521568
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): -0.40532479006811106
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): -0.1854929241626081
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -1.1451754772956333
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 0.45866474869588864
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): -0.009047273206663283
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): -0.3381126432163844
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.020839619636535644 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): -0.9024186443615176
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): -1.0424347059707617
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): -0.7972217519536225
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -1.2110498865687536
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 0.14582813477876125
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): -0.4902576296017847
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): -0.33667878041501886
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.07153940200805664 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): -1.0632919674957917
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -1.1375743614467908
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): -0.8603020105232523
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): -0.9144945702401367
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 0.15181106777908082
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): -0.5414767348724873
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): 0.09114057789390607
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.27386233806610105 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): -1.0517439194929947
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -1.1634924863368676
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): -0.9177192379845995
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): -0.7031021738422822
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): 0.15665871534267614
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): -0.6551444249444238
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 0.394127579827088
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.012182998657226562 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): 0.9729988572318234
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): 1.3087403794696197
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 1.3879562320340089
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -1.0392269135281658
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): 0.5747857882137116
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): 0.23697862700241662
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): -0.5245832793065456
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.011665964126586914 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): 0.5492516580429593
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): 0.38683846150359563
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 0.9219498092658958
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -1.0727394127692622
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): 0.5601678095958235
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): 0.22071502564543244
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): -0.5565988488040209
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.011591172218322754 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): -0.07143784072549422
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): -0.3740457539662201
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): 0.2591064467769234
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -1.1061477950019147
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 0.4073484748213655
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): -0.09344361366837857
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): -0.5568742329160227
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.012268805503845214 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): -0.6355950650042232
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): -1.0152092045618726
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): -0.3783853684834491
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -1.153331509509438
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 0.09523040782660545
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): -0.5260684826031454
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): -0.5446806890546657
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.03904266357421875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): -0.7412535938576843
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -1.1328074563836787
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): -0.4986160489637494
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): -0.8141853831528798
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 0.13578022838817402
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): -0.5883772977178489
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): -0.08816059530002968
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.1455214023590088 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): -0.8269149096233774
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -1.173991983366444
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): -0.6449363784161052
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): -0.6046985751518228
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): 0.1316204988378921
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): -0.7220906207560361
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 0.3173839388984871
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.01928074359893799 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): 1.1105022901955803
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): 1.3838162252333968
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 1.4412274442276323
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -1.1185514677447925
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): 0.7403924958248053
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): 0.3438294042062189
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): -0.3328836065528179
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.01884467601776123 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): 0.5861540412276871
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): 0.33695604194360607
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 0.8450238693080769
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -1.1447618163825022
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): 0.6577588286088979
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): 0.3541119666920803
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): -0.3655860334060719
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.019530892372131348 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): 0.01090587900430453
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): -0.41569192791561027
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): 0.19151039793116958
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -1.1517000721828812
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 0.4783774148030802
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): -0.021724551204264374
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): -0.33772380084520903
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.02074708938598633 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): -0.5592768261031856
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): -1.0520332421345957
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): -0.4269584579109977
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -1.2150319226876662
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 0.1408994685022944
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): -0.47733929646021045
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): -0.343133691009846
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.07183670997619629 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): -0.606971073390059
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -1.131278519200142
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): -0.488457812542074
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): -0.8737672282916967
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 0.14993547285638767
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): -0.5174496421988473
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): 0.10752083050147734
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.2725998878479004 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): -0.7259570337338734
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -1.1698701016749153
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): -0.6344632301943116
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): -0.6718845902292925
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): 0.15277485232458796
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): -0.5914425257833418
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 0.5054598241521338
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.03394782543182373 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): 1.210487127895209
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 1.3858485486943355
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 1.3858485486943355
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -1.1654380198378875
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): 0.96664261725192
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): 0.4676826698735629
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): -0.08641670360173757
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.03357143402099609 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): 0.6697258086556004
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): 0.29923925558754466
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): 0.7141902429315864
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -1.1760765776105166
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 0.9081803983697179
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): 0.46112759022594324
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): -0.10035760071867462
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.034559202194213864 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): -0.06987677241793475
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): -0.45503527753114953
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): 0.010806146924214746
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -1.2073794015575259
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 0.5855739980038457
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): 0.06975960777264871
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): -0.07840365374394842
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.03628835678100586 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): -0.6532794041462519
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): -1.0949799613979865
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): -0.5526823564162556
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -1.2834302231870973
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 0.1681226095329141
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): -0.4573477527957887
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): -0.10596042467026713
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.13539564609527588 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): -0.7337670182828286
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -1.1606931238801819
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): -0.5912687179955667
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): -0.9281291231872826
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): 0.16983578705307809
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): -0.47967498282191545
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 0.35156794090125826
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.5272958517074585 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): -0.7637631965495226
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -1.1914648495241196
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): -0.6465692147960987
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): -0.720110901681504
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): 0.16354841359198916
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): -0.5742137191370265
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 0.6579788106599294
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.01931033134460449 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): 1.1108843502216552
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 1.286951383653885
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 1.6848758194244084
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -1.1500165188084799
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): 0.638406983366905
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): 0.32630441872908506
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): -0.3285622237452145
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.019216632843017577 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): 0.7170659106372496
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): 0.3210536056246601
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 1.0295710594791112
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -1.151166833763476
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): 0.7515937835439791
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): 0.33706280032361613
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): -0.32895131157988006
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.019852590560913087 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): 0.11145434745028412
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): -0.43820607901093606
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): 0.3958914521328101
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -1.1781456295782093
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 0.5087025473548575
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): -0.0460138155372231
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): -0.32162335984017654
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.02060084342956543 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): -0.4213493668464408
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): -1.0916662372415151
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): -0.209999852374862
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -1.2399309386691206
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 0.13292666695647912
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): -0.5391335447021453
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): -0.32309220906210295
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.07319273948669433 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): -0.4549888301114818
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -1.1626211158793391
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): -0.27801358769614315
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): -0.8537039251198982
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): 0.1413089343095053
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): -0.5787038344901929
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 0.15512274567728132
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.281569766998291 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): -0.5496856411037986
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -1.1930223004833862
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): -0.41150639997573657
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): -0.6220986355355097
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): 0.13950567969926445
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): -0.8038482269438392
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 0.5532395386534092
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0344806432723999 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): 1.2599227670691002
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): 1.3346274168162717
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 1.6356314573341582
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -1.175600298551155
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): 1.0200824695727875
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): 0.46127828874670157
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): -0.08008105007741
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.03409762382507324 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): 0.8266538599889751
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): 0.2883952857107583
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 0.9898281108681463
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -1.1993173452296024
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): 0.9133323183891078
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): 0.46648122484383947
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): -0.326300771431282
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.034693026542663576 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): 0.22544187670164448
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): -0.46031938099019587
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): 0.359556979667405
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -1.2135571689142386
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 0.6177236754374893
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): 0.05050457023882511
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): -0.07760172671289084
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.036400341987609865 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): -0.3442142755883087
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): -1.101906822031258
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): -0.22661061067594743
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -1.2833919466796646
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 0.16200028731729887
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): -0.4682558354324972
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): -0.08351480255769367
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.13653719425201416 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): -0.3731938337593701
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -1.164425153348165
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): -0.2261192992747751
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): -0.9032875697524321
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): 0.1678937381656273
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): -0.4917758402978506
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 0.40531973706559626
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.5317925930023193 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): -0.5056879521137517
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -1.191577453129076
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): -0.40038898785962235
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): -0.6897581486636836
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): 0.1578648796939487
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): -0.6316620890461142
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 0.7480879823687258
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.06340668201446534 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): 1.3257223146685684
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): 1.3409019096740469
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 1.5480172590618517
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -1.2025252184903348
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): 1.259458591850582
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): 0.588019030927042
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): 0.19043940050098604
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.06338746547698974 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): 0.790475311573216
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): 0.1861750859302267
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): 0.9519009932699996
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -1.207061216858678
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 1.0674509646494992
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): 0.5938559270325715
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): 0.18753444251265644
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.06453421115875244 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): 0.14530840670451278
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): -0.6377516636259215
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): 0.2594986326166587
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -1.229546351136738
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 0.6922404354201503
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): 0.11007450450381863
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): 0.19116074579387504
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.06842541694641113 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): -0.47643102352484606
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -1.3055209162786738
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): -0.31530211397215635
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): -1.2987040616380707
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 0.18929236537443017
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): -0.4200463548917483
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): 0.16501989420465568
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.2613388538360596 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): -0.47599228036295327
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -1.3578433264150158
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): -0.3226318579836587
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): -1.0313355876659762
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): 0.17452256653342496
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): -0.4754362168236649
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 0.6282350909213417
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: numba_cuda_tiles, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 1.0315660238265991 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): -0.4753862977756194
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -1.3920970094777714
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): -0.36867554844274614
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): -0.7349256107039119
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): 0.16765696277938014
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): -0.49529745304643336
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 0.9126932987732738
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.009465861320495605 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): 0.8312189741089712
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 1.5001763163422497
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): 1.2782791222347258
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -0.8989012638984555
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): 0.4711031256936965
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): 0.16259853868261304
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): -0.6279849768633163
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.009287023544311523 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): 0.31582222987975106
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): 0.4776768454211026
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 0.5218794314265133
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -0.9169120447241105
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): 0.4775763848300424
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): -0.056772173883127844
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): -0.6493683653357545
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.00898892879486084 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): -0.31922982030168184
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): -0.3914846859135823
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): -0.12431510874894429
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -0.9631725501754114
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 0.26383084170962706
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): -0.08314618536691581
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): -0.6603301061280737
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.009364604949951172 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): -0.9001700061445894
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -1.0872935002653026
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): -0.7374688163636977
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): -1.0359514956338562
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): -7.739168263348494e-05
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): -0.44760245081107464
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): -0.6523435523908295
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.028220224380493163 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): -1.004495887924182
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -1.2465582962650998
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): -0.8525556351749135
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): -0.7304089298904576
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 0.015093972544437102
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): -0.5047291537910311
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): -0.21821730776241205
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.09850115776062011 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): -1.159384071205164
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -1.3226488755819301
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): -1.0354752975669412
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): -0.5438542087922662
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): -0.004655610323134393
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): -0.6141005233132699
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 0.17841883796711114
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.014096498489379883 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): 0.8492429112566761
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 1.4513755835093989
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): 0.9742612514169876
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -1.0053896452550755
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): 0.5612225696340364
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): 0.27065161508914876
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): -0.4694497329917234
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.014085531234741211 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): 0.29867376177234406
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): 0.393962962039541
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): 0.3940503796806375
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -1.0175421035018086
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 0.551134104640221
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): -0.006468323613034491
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): -0.4630322622924276
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.014526033401489257 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): -0.4210697317707757
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): -0.4691123175142607
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): -0.31381567310919867
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -1.0378254000278087
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 0.355893386310461
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): 0.007344595530672866
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): -0.45553733975379646
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.014994931221008301 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): -1.024623872269378
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -1.149397569566356
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): -0.9225767500326804
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): -1.1171571435877676
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): -0.00403185125968933
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): -0.41051771255966124
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): -0.46377194500947994
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.04928910732269287 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): -1.1522843795775666
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -1.2771852304961118
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): -0.9702645502405848
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): -0.7978875233021919
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 0.023629445491076304
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): -0.45968709032230515
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): -0.02920577665039908
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.18356807231903077 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): -1.234036013997265
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -1.3321348422509098
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): -1.0655617696513087
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): -0.6105764962613485
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): 0.0017225048053151324
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): -0.4981641333924492
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 0.3345532338451303
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.024703145027160645 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): 0.8754009097712924
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 1.4908213233047112
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): 0.9467885052241428
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -1.050925403452912
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 0.8376044836932304
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): 0.40896521831682997
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): -0.22459463768051058
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.024814319610595704 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): 0.23832741231580004
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): 0.35843076890739245
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): 0.27858488784612495
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -1.059453014889206
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 0.804996194877851
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): 0.08729596814301831
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): -0.2168772838032942
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.024930953979492188 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): -0.5479341693791002
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): -0.5169872776644306
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): -0.5310124059362629
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -1.0947265821152696
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 0.3978984784030165
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): 0.0762561177114014
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): -0.22652551050052105
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.02601447105407715 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): -1.1612437734890835
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -1.1956678188066785
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): -1.0959167152409304
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): -1.1733611928354997
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 0.01846987308427648
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): -0.39413451313754083
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): -0.2468039267164983
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.09209356307983399 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): -1.2681864047638787
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -1.2955875367326446
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): -1.1623572264358981
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): -0.8507376698642355
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): 0.018445023623905477
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): -0.4326066294982561
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 0.17134577788254526
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.35721702575683595 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): -1.2210312724223702
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -1.3398831514620286
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): -1.1625446704551765
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): -0.6470912081573028
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): 0.008850645304198108
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): -0.5390006250702695
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 0.4609262241358422
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.014113545417785645 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): 0.9740667645721475
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 1.4518173966122314
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): 1.372674219098113
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -1.018306679570226
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): 0.5234452470126574
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): 0.2780398338640519
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): -0.48622608021659586
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.013988757133483886 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): 0.4311455359289201
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): 0.31442393609404584
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 0.6417947029890451
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -1.0377684209905074
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): 0.622854206821244
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): -0.016068422330390526
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): -0.4619879158095713
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.014387297630310058 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): -0.11961654018920373
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): -0.4989037096173376
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): 0.0587568275950219
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -1.0509278092396996
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 0.3136899970051797
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): -0.02409712962175402
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): -0.4593459153528089
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.0149153470993042 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): -0.7071828110136019
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -1.1806749673691415
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): -0.5893827005748408
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): -1.1170130627610588
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 0.025947984408625727
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): -0.44522681444116236
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): -0.45350363510294356
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.049492692947387694 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): -0.7808354069887947
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -1.3029097986269367
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): -0.6385527416665577
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): -0.7733132251794669
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 0.011246541607277234
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): -0.4879504575414394
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): 0.007191193225100437
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.18618648052215575 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): -0.8919594948663028
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -1.34817760013148
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): -0.8031999193057634
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): -0.5631918498608217
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): -0.008608375146046586
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): -0.6149200243201379
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 0.41577105881061555
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.024327349662780762 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): 1.0456424445180044
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 1.4842028071331388
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): 1.3081202006546737
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -1.0668286437086516
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): 0.8078877951158472
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): 0.47414865416558694
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): -0.22533136312095256
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.024196887016296388 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): 0.5336541783696118
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): 0.33570239014930625
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): 0.5995863836539728
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -1.0856414076631942
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 0.8043399602167118
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): 0.09252187576943151
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): -0.2382784472943069
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.02475008964538574 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): -0.17113934500631625
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): -0.5402823099492804
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): -0.10081144277409038
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -1.1034475493598657
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 0.4778980022126473
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): 0.0889813235925923
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): -0.2222768530255284
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.02610325813293457 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): -0.7811829728002441
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -1.2189462987203528
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): -0.6913861589030076
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): -1.169352818820893
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 0.04067514632391966
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): -0.375704740460809
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): -0.2274601332921562
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.09221348762512208 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): -0.8968253807019765
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -1.3152281892212248
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): -0.7007551988583489
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): -0.8177435229384821
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): 0.01641634233147301
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): -0.4083176891181463
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 0.24080998986880098
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.35481307506561277 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): -0.9323302521747362
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -1.3545538512291346
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): -0.7886641909404446
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): -0.6111280556622325
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): 0.0038211284072408058
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): -0.47696522595222235
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 0.597274092997353
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.044395732879638675 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): 1.0552446835437919
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 1.4725466169363268
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): 1.186072312394006
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -1.0907435366095908
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 1.0921934653233747
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): 0.5702041525152145
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): 0.024157196534247197
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.04416682720184326 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): 0.4671654870061874
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): 0.23967513520141276
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): 0.5817959326335597
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -1.1001492871091285
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 1.0085900441538145
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): 0.16880899982594544
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): 0.03674220376356208
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.04533860683441162 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): -0.27330188229095914
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): -0.6348425711606807
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): -0.25987810369037573
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -1.1288418306762826
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 0.543684080594471
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): 0.1763956807896755
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): 0.0338797662845242
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.046626162528991696 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): -0.8938990200109561
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -1.3589887776270857
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): -0.8493825673633985
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): -1.211145176400194
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 0.04712506647521039
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): -0.3456704698784441
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): -4.55224715443253e-05
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.17767736911773682 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): -0.9412603152967376
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -1.4509448006001666
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): -0.8910373255333938
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): -0.8575081495099378
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): 0.029073946664728005
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): -0.3593061325670814
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 0.4464841689058795
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.69399573802948 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): -0.9259830433229849
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -1.4887518094765746
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): -0.8812120538294655
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): -0.6543217360708056
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): 0.012002580759672705
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): -0.4550591030370141
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 0.7254958528082645
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.024356555938720704 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 1.1325096452524275
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): 1.3463952331418059
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 1.3877775360554505
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -1.0792455756639743
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): 0.8417369258211771
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): 0.4164042660373665
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): -0.21713721950383993
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.024885010719299317 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): 0.6981336384682483
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): 0.28988854696564564
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): 0.8060159825375524
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -1.0837719177673846
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 0.8285407116209681
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): 0.05194454208376903
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): -0.2133787443739744
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.025205230712890624 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): 0.046549967695694916
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): -0.5658329580630579
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): 0.19852845890068138
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -1.113757155385792
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 0.4951208253459225
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): 0.03855033473094725
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): -0.2076749130117807
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.0267841100692749 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): -0.4528967175671534
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -1.2260127463453148
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): -0.3647543100238169
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): -1.172272955768391
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 0.03905126565777478
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): -0.42656284811148104
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): -0.20685510438307
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.0933525800704956 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): -0.5146328970176348
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -1.3325430059415766
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): -0.40802002709283286
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): -0.8039671778714563
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): 0.006430423272699574
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): -0.4707527038478836
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 0.2579741327713341
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.36243667602539065 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): -0.6219172952005366
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -1.3721544862080823
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): -0.5592293902857859
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): -0.5759792246231928
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): -0.007613205093770296
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): -0.6941677534315274
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 0.646860351911698
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.044899916648864745 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): 1.2220576559968708
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): 1.4493365277890158
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 1.4773055515204507
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -1.0985788294096266
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): 1.093419148455344
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): 0.5886705865021694
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): 0.022223976491588353
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.04461019039154053 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): 0.7584356495754576
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): 0.23057615847444324
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): 0.8180987309104851
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -1.1110459444747764
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 0.9877918628620629
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): 0.1646326686829739
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): 0.02587862139845791
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.04507226943969726 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): 0.07988091929043852
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): -0.6845884491449603
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): 0.09876541055150796
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -1.1404737526197917
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 0.581107793079164
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): 0.16014091936659605
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): 0.02957838528566645
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.04724950790405273 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): -0.5301901747621909
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -1.4067372868332866
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): -0.4440289795141249
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): -1.2171637981324823
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 0.05092092292702858
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): -0.356094803491531
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): 0.0177585531346207
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.17803423404693602 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): -0.6127938614621354
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -1.4916181841540865
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): -0.43066542003291075
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): -0.8388460200718083
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): 0.027764275202138474
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): -0.37598337668896015
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 0.48937138956718895
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.6970156669616699 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): -0.6391411152710474
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -1.5445266946451897
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): -0.5152667127058155
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): -0.6310275907193684
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): 0.005841973923105784
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): -0.514070361641415
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 0.8376262413096373
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.08454031944274902 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): 1.3154267457095554
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 1.46576275047964
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): 1.3967203653908953
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -1.1139844372522139
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): 1.330915294593865
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): 0.7262293455139619
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): 0.29550427600218415
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.08415331840515136 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): 0.7529490266543543
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): 0.1345425735566332
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): 0.8190170943495091
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -1.1248482575234737
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 1.1194084191588372
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): 0.22879467642056722
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): 0.30386129456827216
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.08549790382385254 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): -0.010362633460461316
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): -0.8040875920598923
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): -0.019317560578668125
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -1.1607295753940412
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 0.6256018063550325
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): 0.2341703771576978
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): 0.30208150675587725
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.08936948776245117 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): -0.6056485000110843
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -1.487681837363982
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): -0.5659017458369686
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): -1.2414826774702723
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): 0.06641593275362463
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): -0.3046577433278371
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 0.2661610614030193
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.34469356536865237 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): -0.6556802817423313
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -1.5623023115387649
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): -0.6104128442846274
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): -0.8780045088724893
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): 0.03205429036604611
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): -0.35545380677197497
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 0.7129870128170757
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: numba_cuda_tiles, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 1.3677627325057984 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): -0.6377977716460066
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -1.5846534035103497
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): -0.5970401300787127
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): -0.6661448809779875
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): 0.014973604180855136
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): -0.3731781277601345
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 0.9874457678136749
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION numba_cuda_tiles DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION numba_cuda_viafft:
1/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.004930877685546875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): 0.7901117253063528
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 1.2170096242168713
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): 0.3526231972252474
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -1.137786960204567
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): -0.20145200900203836
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): -0.17103475778485047
COMPARISON AGAINST keras -> T_OTHER: 0.057845783233642575 s, LOG_10(T_REF / T_OTHER): -1.0693474761746875
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.005549979209899902 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): 0.34707095209762373
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): 0.666308106944843
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 0.9003950212044806
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -1.0996473990133657
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): -0.011530220088680085
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): -0.07434630947166364
COMPARISON AGAINST keras -> T_OTHER: 0.04216609001159668 s, LOG_10(T_REF / T_OTHER): -0.8806719752395893
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.01061234474182129 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): 0.053087478491832506
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): 0.2561208197597258
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 0.535608299382154
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -0.8255089985271414
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): 0.12958766334511715
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): 0.2026305104706704
COMPARISON AGAINST keras -> T_OTHER: 0.04163579940795899 s, LOG_10(T_REF / T_OTHER): -0.5936555579471835
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.025927257537841798 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): -0.13410191526553544
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): 0.01871676582457435
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): 0.38148563994805723
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -0.5088460849588977
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): 0.26702586559703784
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 0.5623503565654433
COMPARISON AGAINST keras -> T_OTHER: 0.042278504371643065 s, LOG_10(T_REF / T_OTHER): -0.21236303387889124
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.08934197425842286 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -0.20348278220000404
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): -0.05467838520645032
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): 0.27187993391249393
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): -0.13164562639136118
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 0.8304166121141655
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): 0.6641230525821026
COMPARISON AGAINST keras -> T_OTHER: 0.04626076221466065 s, LOG_10(T_REF / T_OTHER): 0.28584276104236384
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.4029052257537842 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -0.1339335686972726
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): -0.003237401707253888
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): 0.2771670974558909
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): 0.18393878358453092
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 1.1408161220526134
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): 0.8024277139850026
COMPARISON AGAINST keras -> T_OTHER: 0.06742041110992432 s, LOG_10(T_REF / T_OTHER): 0.7764115039094281
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.00579380989074707 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): 0.7630578545740148
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): 1.1627516683616437
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 1.2874651619709492
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -1.3307084690103634
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): 0.24395179436038197
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): -0.2370819372884654
COMPARISON AGAINST keras -> T_OTHER: 0.0420576810836792 s, LOG_10(T_REF / T_OTHER): -0.8608810826779648
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.007331681251525879 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.4039668774122873
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): 0.5239387771929145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 0.8249734919871858
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -1.2381159849611028
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): 0.345827726297644
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): -0.13113692658207335
COMPARISON AGAINST keras -> T_OTHER: 0.04223248958587646 s, LOG_10(T_REF / T_OTHER): -0.7604431081070275
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.014116477966308594 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): 0.097803413177513
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): 0.1297011852584033
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.45190762605545093
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -0.9749292007492968
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 0.5820713727674672
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): 0.16248677725681382
COMPARISON AGAINST keras -> T_OTHER: 0.04280264377593994 s, LOG_10(T_REF / T_OTHER): -0.4817442401516577
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.039128875732421874 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): -0.06287319603028836
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): -0.06340496629913658
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): 0.30585537102267013
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -0.6169307436190776
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 0.7807800131026682
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): 0.5562200521719584
COMPARISON AGAINST keras -> T_OTHER: 0.045191836357116696 s, LOG_10(T_REF / T_OTHER): -0.06256261937431963
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.14248330593109132 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): -0.09107247351277085
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): -0.1190183281471422
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): 0.22084557333173546
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -0.2386630064262507
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 1.0270942374570768
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): 0.6502580501609122
COMPARISON AGAINST keras -> T_OTHER: 0.04894304275512695 s, LOG_10(T_REF / T_OTHER): 0.464073017531809
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.5774290323257446 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -0.15303606355838262
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): -0.12389179613717231
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): 0.1331448190118649
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): -0.0006250676855216217
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 1.095209888335204
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): 0.6970770148567346
COMPARISON AGAINST keras -> T_OTHER: 0.07393889427185059 s, LOG_10(T_REF / T_OTHER): 0.8926256642377759
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.006349754333496094 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): 0.7247390652306879
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): 0.9599893592940885
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 1.201739211616631
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -1.584900729338259
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): 0.26284943433926616
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): -0.403056810596517
COMPARISON AGAINST keras -> T_OTHER: 0.041237831115722656 s, LOG_10(T_REF / T_OTHER): -0.8125388925596141
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.008709931373596191 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): 0.36141137326666156
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): 0.27841539950881
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 0.6402138843174431
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -1.4431902930696985
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): 0.40080075258884995
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): -0.2647980264140176
COMPARISON AGAINST keras -> T_OTHER: 0.040789031982421876 s, LOG_10(T_REF / T_OTHER): -0.6705286654597827
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.020267176628112792 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): 0.1261059945846682
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): 0.02015339429801894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): 0.34416392305399274
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -1.101977284027261
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 0.6673676929818254
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): 0.09193984304624186
COMPARISON AGAINST keras -> T_OTHER: 0.04169130325317383 s, LOG_10(T_REF / T_OTHER): -0.3132522188257854
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.06474647521972657 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): 0.01828509204515282
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): -0.1325992867660321
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): 0.21687640180270368
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -0.6838701388558738
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 0.8773009794834234
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): 0.5711127638835656
COMPARISON AGAINST keras -> T_OTHER: 0.044141602516174314 s, LOG_10(T_REF / T_OTHER): 0.16636803479170795
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.249298357963562 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): 0.010834590772839133
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): -0.15585982598401016
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): 0.2064278833245899
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -0.32294572971151325
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 1.0243086388570493
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): 0.6248351889020727
COMPARISON AGAINST keras -> T_OTHER: 0.05604164600372315 s, LOG_10(T_REF / T_OTHER): 0.6482085354759803
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.2345639944076539 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): 0.02039722800774291
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -0.06998864611177462
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): 0.18708903755258305
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): -0.008596814121133788
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 1.1742690270297493
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): 0.7473280408592763
COMPARISON AGAINST keras -> T_OTHER: 0.10127761363983154 s, LOG_10(T_REF / T_OTHER): 1.0860001470786702
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.005565714836120605 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): 0.7057252471004157
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 1.047722986831639
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 1.4451441870775021
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -1.3639109644735885
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): 0.22850322799934925
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): -0.26207916813358517
COMPARISON AGAINST keras -> T_OTHER: 0.04143853187561035 s, LOG_10(T_REF / T_OTHER): -0.8718834092640482
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.006617045402526856 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): 0.40702655943554716
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): 0.4416119350921411
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 0.9767232828544411
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -1.3091611169822637
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): 0.3024955586176923
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): -0.1744875057825822
COMPARISON AGAINST keras -> T_OTHER: 0.041330265998840335 s, LOG_10(T_REF / T_OTHER): -0.7956040858373382
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.014542055130004884 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): 0.2048077788778412
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): 0.11846268863305146
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 0.701389088632832
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -0.9860478992238438
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): 0.5957532697015611
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): 0.16795713088509073
COMPARISON AGAINST keras -> T_OTHER: 0.04087047576904297 s, LOG_10(T_REF / T_OTHER): -0.44878390656540107
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.04151461124420166 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): 0.06429476249795721
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): -0.07083514187389923
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): 0.5121573679673405
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -0.5880296339484787
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 0.8237131601031468
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): 0.5850753291502366
COMPARISON AGAINST keras -> T_OTHER: 0.042726325988769534 s, LOG_10(T_REF / T_OTHER): -0.012494574290837245
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.15104491710662843 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): 0.036602672656969426
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): -0.1225130077665233
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): 0.43754025734268015
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -0.19025439813288064
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 1.0318528037346617
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): 0.6701540912239803
COMPARISON AGAINST keras -> T_OTHER: 0.04738738536834717 s, LOG_10(T_REF / T_OTHER): 0.5034433683160319
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.7679947137832641 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): 0.11407559536975848
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -0.02191878005518431
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): 0.4903178312341757
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): 0.16609958782580495
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 1.1908179827184298
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): 0.8145285307738265
COMPARISON AGAINST keras -> T_OTHER: 0.06557343006134034 s, LOG_10(T_REF / T_OTHER): 1.068630329087672
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.006115913391113281 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): 0.7454485688889746
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 0.8845304019056826
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 1.3076834961063524
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -1.5949553206543188
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): 0.24698117100775988
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): -0.43248910634686477
COMPARISON AGAINST keras -> T_OTHER: 0.06133801937103271 s, LOG_10(T_REF / T_OTHER): -1.001268421694232
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.008388185501098632 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): 0.44788842324635797
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): 0.29148752225708463
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 0.8841747555895106
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -1.4791605456349686
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): 0.41850422492734773
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): -0.289030294189284
COMPARISON AGAINST keras -> T_OTHER: 0.04064474105834961 s, LOG_10(T_REF / T_OTHER): -0.68533633493744
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.01936502456665039 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): 0.19494594843496435
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): -0.046339597316250244
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): 0.5246833430808752
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -1.1355269247027118
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 0.6640468612648108
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): 0.08212001352140381
COMPARISON AGAINST keras -> T_OTHER: 0.040835094451904294 s, LOG_10(T_REF / T_OTHER): -0.32401551217986535
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.06198585033416748 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): 0.1152817675252343
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): -0.16557405075947654
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): 0.47122899376760563
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -0.7161586992328015
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 0.8379170318813117
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): 0.5443145047156849
COMPARISON AGAINST keras -> T_OTHER: 0.044057464599609374 s, LOG_10(T_REF / T_OTHER): 0.14827306238072324
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.23575105667114257 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): 0.12051352315340613
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): -0.19961089258734874
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): 0.4261800136762255
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -0.3179210275152399
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 0.9894642380003078
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): 0.6077367196856758
COMPARISON AGAINST keras -> T_OTHER: 0.05036325454711914 s, LOG_10(T_REF / T_OTHER): 0.6703398608990639
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.063003921508789 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): 0.10606651397182426
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -0.15340800668366517
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): 0.34526526783214856
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): -0.034430907575833954
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): 1.1095982076576423
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): 0.6871301643173685
COMPARISON AGAINST keras -> T_OTHER: 0.07978088855743408 s, LOG_10(T_REF / T_OTHER): 1.1246359977307654
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.007160305976867676 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): 0.7095456716434658
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): 0.7104653160281639
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 1.157175148289713
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -1.8315282348277189
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): 0.34640604889140003
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): -0.5917979666463323
COMPARISON AGAINST keras -> T_OTHER: 0.042985725402832034 s, LOG_10(T_REF / T_OTHER): -0.7783926789062907
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.01107022762298584 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): 0.4433906094826427
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): 0.13681793724127672
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 0.7230895206175556
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -1.6468285854710927
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): 0.5223792511920632
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): -0.4010017708176869
COMPARISON AGAINST keras -> T_OTHER: 0.04109468460083008 s, LOG_10(T_REF / T_OTHER): -0.5696291007982983
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.03018784523010254 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): 0.27686859884031395
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): -0.12215264544531651
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): 0.5078619428127104
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.240838867196354
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 0.7202803987773827
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): 0.03487110772817552
COMPARISON AGAINST keras -> T_OTHER: 0.04136664867401123 s, LOG_10(T_REF / T_OTHER): -0.13681822313721145
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.10357046127319336 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): 0.21552350520556757
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): -0.225907240047528
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): 0.40255198256252916
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -0.7874072907905403
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 0.9176231962812064
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): 0.5368719072080348
COMPARISON AGAINST keras -> T_OTHER: 0.04556498527526855 s, LOG_10(T_REF / T_OTHER): 0.3566046762109449
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.4074209213256836 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): 0.22664309086171597
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): -0.2429311059474835
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): 0.4014180049408066
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -0.41466154517144194
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 1.0153954093096738
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): 0.5708934787608072
COMPARISON AGAINST keras -> T_OTHER: 0.05729210376739502 s, LOG_10(T_REF / T_OTHER): 0.8519485566910364
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 1.9771172761917115 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): 0.21698149722751206
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -0.16612384607531624
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): 0.35363481363094695
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): -0.10559067287318333
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): 1.1230021985901515
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): 0.6726955020412605
COMPARISON AGAINST keras -> T_OTHER: 0.10746681690216064 s, LOG_10(T_REF / T_OTHER): 1.2647580454745389
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.006279182434082031 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): 0.5949746258933096
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): 0.8448095604147512
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 1.3218500751733997
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -1.6159113842210375
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): 0.2878967558477398
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): -0.4113374686730474
COMPARISON AGAINST keras -> T_OTHER: 0.043345308303833006 s, LOG_10(T_REF / T_OTHER): -0.8390389951767437
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.009299612045288086 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): 0.43813963288243085
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): 0.29753017746102145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 1.0665598625281234
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -1.4386158283839285
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): 0.44694297157909624
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): -0.24053647574322218
COMPARISON AGAINST keras -> T_OTHER: 0.04133827686309814 s, LOG_10(T_REF / T_OTHER): -0.6478875382813005
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.021940088272094725 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): 0.2893218604803981
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): -0.01932871047752688
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 0.7403140824786136
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -1.1029043668277303
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): 0.6836500758601634
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): 0.12479749245027066
COMPARISON AGAINST keras -> T_OTHER: 0.04178473949432373 s, LOG_10(T_REF / T_OTHER): -0.27977932836617353
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.07097673416137695 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): 0.2645518699477265
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): -0.13585327710158138
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): 0.6820151129587056
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -0.6658415383603384
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 0.9028770482046602
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): 0.6104774494180182
COMPARISON AGAINST keras -> T_OTHER: 0.043227195739746094 s, LOG_10(T_REF / T_OTHER): 0.2153589497255052
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.2763039588928223 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): 0.2072781371114165
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): -0.15777618282195754
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): 0.6316426714045232
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -0.23817195111214415
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 1.032128198371177
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): 0.669140261101233
COMPARISON AGAINST keras -> T_OTHER: 0.05022144317626953 s, LOG_10(T_REF / T_OTHER): 0.740497918993852
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.7905367374420167 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): 0.4343297079225099
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): 0.04575338219361115
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): 0.7678488614339573
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): 0.22814800212147227
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): 1.2865550555720346
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): 0.9024812379089444
COMPARISON AGAINST keras -> T_OTHER: 0.07732973098754883 s, LOG_10(T_REF / T_OTHER): 1.3646367367322318
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.007559847831726074 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): 0.7037115176591848
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.7335496423341855
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 1.2775731938576727
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -1.805856486429296
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): 0.35630931771016056
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): -0.5716278236342669
COMPARISON AGAINST keras -> T_OTHER: 0.040796208381652835 s, LOG_10(T_REF / T_OTHER): -0.7321067475370405
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.011664056777954101 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): 0.5495014328750063
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): 0.12849286553259687
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 0.9888404190043404
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -1.6351120574828266
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): 0.49552554497356
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): -0.3799646821766205
COMPARISON AGAINST keras -> T_OTHER: 0.040892815589904784 s, LOG_10(T_REF / T_OTHER): -0.5447973890035619
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.030757856369018555 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): 0.3851323114185323
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): -0.1351663216736568
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): 0.710950899061363
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -1.2334387993013745
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 0.7678538816871785
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): 0.04329361520718893
COMPARISON AGAINST keras -> T_OTHER: 0.04138209819793701 s, LOG_10(T_REF / T_OTHER): -0.12885644237176624
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.10678844451904297 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): 0.35341315242617255
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): -0.2293984466908202
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): 0.6440810547259966
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -0.7689759508098472
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 0.9145160150498914
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): 0.546658474438665
COMPARISON AGAINST keras -> T_OTHER: 0.04492533206939697 s, LOG_10(T_REF / T_OTHER): 0.376032964704727
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.423244309425354 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): 0.33540905759314293
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): -0.24933585167536199
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): 0.5967441927314509
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -0.36424648269558463
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 1.0196651701811459
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): 0.5797059978106432
COMPARISON AGAINST keras -> T_OTHER: 0.05300981998443603 s, LOG_10(T_REF / T_OTHER): 0.9022347982623156
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.276844096183777 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): 0.4128140676011162
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -0.1271039756389014
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): 0.6134911041668849
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): -0.012489792650428495
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): 1.1668369721421588
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): 0.7302953350581128
COMPARISON AGAINST keras -> T_OTHER: 0.08908474445343018 s, LOG_10(T_REF / T_OTHER): 1.4075299553799487
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.007889699935913087 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): 0.6941190326695258
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): 0.45161248641901597
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 1.120115885187489
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -2.085857205359114
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): 0.35590329697785217
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): -0.8191259958225371
COMPARISON AGAINST keras -> T_OTHER: 0.04266366958618164 s, LOG_10(T_REF / T_OTHER): -0.7329977209734427
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.015804314613342287 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): 0.5372440471131222
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): -0.035588587439631794
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 0.7527748434919296
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -1.8030520902559204
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): 0.5785116948433252
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): -0.5169081506563789
COMPARISON AGAINST keras -> T_OTHER: 0.04086782932281494 s, LOG_10(T_REF / T_OTHER): -0.4126059044502919
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.0487396240234375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): 0.4361878435002168
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): -0.22530791096114425
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): 0.6321329705081532
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -1.3250237634993467
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 0.7969742541072714
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): -0.021133372403362143
COMPARISON AGAINST keras -> T_OTHER: 0.04174959659576416 s, LOG_10(T_REF / T_OTHER): 0.06722989123961307
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.17979371547698975 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): 0.4410195337142178
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): -0.28802000492668184
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): 0.5884813143902294
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -0.8391029441759529
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 0.9412580824085717
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): 0.500424835729865
COMPARISON AGAINST keras -> T_OTHER: 0.0452268123626709 s, LOG_10(T_REF / T_OTHER): 0.599378528046583
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.7807900428771972 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): 0.4972375182066663
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): -0.26343195963082755
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): 0.6405980253039703
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -0.426519479594525
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): 1.0289098039400149
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): 0.5723781391728361
COMPARISON AGAINST keras -> T_OTHER: 0.05994799137115479 s, LOG_10(T_REF / T_OTHER): 1.1147596301743692
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: numba_cuda_viafft, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 3.225172829627991 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): 0.4168462909088603
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -0.2596731355357667
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): 0.513941772782779
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): -0.1950397147594772
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): 1.0610642717525463
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): 0.5954168682501301
COMPARISON AGAINST keras -> T_OTHER: 0.12047066688537597 s, LOG_10(T_REF / T_OTHER): 1.427671677984184
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.005733203887939453 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): 0.7194528142601655
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): 1.282621245980416
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 1.4587471281063833
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -1.0586621471599493
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): 0.11207002134324229
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): -0.15870485226318412
COMPARISON AGAINST keras -> T_OTHER: 0.04103376865386963 s, LOG_10(T_REF / T_OTHER): -0.8547440188819847
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.005562925338745117 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): 0.255070040626911
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): 0.34852695675676804
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 0.7050165214923314
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -1.0967691254178817
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): 0.23260146643519086
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): -0.13753413918031349
COMPARISON AGAINST keras -> T_OTHER: 0.04162831306457519 s, LOG_10(T_REF / T_OTHER): -0.8740855807842164
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.01212005615234375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): -0.025960521002903622
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): -0.05849943586865101
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): 0.21544354920114334
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -0.7738734674349791
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 0.48117074989266845
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): 0.20070252117938492
COMPARISON AGAINST keras -> T_OTHER: 0.041726326942443846 s, LOG_10(T_REF / T_OTHER): -0.5369055246806635
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.026231670379638673 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): -0.2737438842043415
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): -0.3875284703791253
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): -0.011390387030004865
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -0.529906633964071
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 0.589943487024622
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): 0.508730198489961
COMPARISON AGAINST keras -> T_OTHER: 0.04219849109649658 s, LOG_10(T_REF / T_OTHER): -0.2064709755835677
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.08937561511993408 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): -0.35681645811483975
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -0.4820421029581671
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): -0.10376404194700009
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): -0.1635676743217593
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 0.7377574663268363
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): 0.5945705490119293
COMPARISON AGAINST keras -> T_OTHER: 0.046915435791015626 s, LOG_10(T_REF / T_OTHER): 0.27990328903152223
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.4033111810684204 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): -0.3660466752613027
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -0.4398658722596018
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): -0.1471744559389328
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): 0.1394852305567422
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 0.8452318192639001
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): 0.71601730507847
COMPARISON AGAINST keras -> T_OTHER: 0.06229929924011231 s, LOG_10(T_REF / T_OTHER): 0.8111571005773339
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.007579803466796875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): 0.7347093655478185
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 1.1809058517917344
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): 1.102678734801466
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -1.232799466580839
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): 0.3253097501589478
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): -0.1814242240081139
COMPARISON AGAINST keras -> T_OTHER: 0.04089019298553467 s, LOG_10(T_REF / T_OTHER): -0.7319612150991662
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.007278347015380859 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): 0.22019123443589897
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): 0.23005517396299457
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 0.4008175405800136
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -1.2563930383512325
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): 0.32731145673966067
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): -0.19033922427125116
COMPARISON AGAINST keras -> T_OTHER: 0.04169631004333496 s, LOG_10(T_REF / T_OTHER): -0.7580648654118557
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.014359045028686523 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): -0.12269228126666785
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): -0.24650709662568998
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): 0.021555811365105423
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -1.0042878732101237
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 0.4782910196984695
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): 0.09381275809239668
COMPARISON AGAINST keras -> T_OTHER: 0.04107820987701416 s, LOG_10(T_REF / T_OTHER): -0.45648595205970116
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.039193367958068846 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): -0.3055203405432212
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): -0.4742114572605169
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): -0.1315393022004616
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -0.6528813609545432
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 0.598684414205371
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): 0.5011446691373312
COMPARISON AGAINST keras -> T_OTHER: 0.04318902492523193 s, LOG_10(T_REF / T_OTHER): -0.04216081432647511
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.1424945592880249 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): -0.3039826028597401
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -0.5397464463437097
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): -0.16855597305133094
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): -0.27674176498905345
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 0.7237619371336228
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): 0.5618842680723415
COMPARISON AGAINST keras -> T_OTHER: 0.05068469047546387 s, LOG_10(T_REF / T_OTHER): 0.44892148381464736
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.5773276805877685 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): -0.4061364765621562
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -0.5501061761104088
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): -0.27445168737082404
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): -0.04096818720903127
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): 0.752847596208729
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): 0.60358927430275
COMPARISON AGAINST keras -> T_OTHER: 0.0778057336807251 s, LOG_10(T_REF / T_OTHER): 0.8704107783943207
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.008927321434020996 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): 0.6511332419873387
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 1.1074928340920283
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): 0.8727811873977405
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -1.4464130566043534
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): 0.4245409820367302
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): -0.3403098847190259
COMPARISON AGAINST keras -> T_OTHER: 0.0416433572769165 s, LOG_10(T_REF / T_OTHER): -0.6688245628500898
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.008769488334655762 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): 0.10545070962994592
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): -0.014963547356856972
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): 0.2117256185068495
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -1.4613871772104654
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 0.3593157060893356
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): -0.33598542593348313
COMPARISON AGAINST keras -> T_OTHER: 0.04122486114501953 s, LOG_10(T_REF / T_OTHER): -0.6721849467926888
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.019995975494384765 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): -0.29341873954549347
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): -0.39627751686144774
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): -0.17644565095594478
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -1.13612820408897
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 0.46771202190255196
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): 0.009047273206663296
COMPARISON AGAINST keras -> T_OTHER: 0.04265873432159424 s, LOG_10(T_REF / T_OTHER): -0.3290653700097211
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.064438796043396 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): -0.41216101475973294
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): -0.552177076368977
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): -0.30696412235183784
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -0.7207922569669688
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 0.636085764380546
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): 0.4902576296017847
COMPARISON AGAINST keras -> T_OTHER: 0.045244789123535155 s, LOG_10(T_REF / T_OTHER): 0.15357884918676593
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.24889836311340333 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): -0.5218152326233044
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -0.5960976265743034
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): -0.31882527565076496
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): -0.37301783536764943
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 0.6932878026515682
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): 0.5414767348724873
COMPARISON AGAINST keras -> T_OTHER: 0.05799689292907715 s, LOG_10(T_REF / T_OTHER): 0.6326173127663933
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.2378748416900636 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): -0.3965994945485709
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -0.5083480613924438
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): -0.26257481304017577
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): -0.04795774889785841
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): 0.8118031402871
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): 0.6551444249444238
COMPARISON AGAINST keras -> T_OTHER: 0.11051080226898194 s, LOG_10(T_REF / T_OTHER): 1.0492720047715118
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.007059526443481445 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): 0.7360202302294069
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): 1.0717617524672032
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 1.150977605031592
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -1.2762055405305823
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): 0.33780716121129506
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): -0.23697862700241665
COMPARISON AGAINST keras -> T_OTHER: 0.04076969623565674 s, LOG_10(T_REF / T_OTHER): -0.7615619063089623
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.007017874717712402 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): 0.32853663239752684
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): 0.16612343585816322
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 0.7012347836204633
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -1.2934544384146947
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): 0.339452783950391
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): -0.22071502564543238
COMPARISON AGAINST keras -> T_OTHER: 0.04202613830566406 s, LOG_10(T_REF / T_OTHER): -0.7773138744494532
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.014373779296875 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): 0.02200577294288439
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): -0.28060214029784153
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): 0.35255006044530196
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -1.0127041813335362
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 0.5007920884897441
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): 0.09344361366837856
COMPARISON AGAINST keras -> T_OTHER: 0.04178318977355957 s, LOG_10(T_REF / T_OTHER): -0.46343061924764406
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.04119749069213867 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): -0.10952658240107778
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): -0.48914072195872704
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): 0.1476831141196964
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -0.6272630269062928
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 0.621298890429751
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): 0.5260684826031455
COMPARISON AGAINST keras -> T_OTHER: 0.043001437187194826 s, LOG_10(T_REF / T_OTHER): -0.01861220645152029
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.15132710933685303 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): -0.15287629613983536
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -0.5444301586658298
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): 0.0897612487540995
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): -0.2258080854350308
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 0.7241575261060229
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): 0.588377297717849
COMPARISON AGAINST keras -> T_OTHER: 0.0478299617767334 s, LOG_10(T_REF / T_OTHER): 0.5002167024178192
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.7673923969268799 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): -0.10482428886734124
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -0.4519013626104079
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): 0.077154242339931
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): 0.11739204560421333
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): 0.8537111195939283
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): 0.7220906207560361
COMPARISON AGAINST keras -> T_OTHER: 0.07007174491882324 s, LOG_10(T_REF / T_OTHER): 1.0394745596545232
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.00873563289642334 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): 0.7666728859893615
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): 1.0399868210271779
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 1.0973980400214134
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -1.4623808719510116
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): 0.3965630916185865
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): -0.3438294042062189
COMPARISON AGAINST keras -> T_OTHER: 0.041496109962463376 s, LOG_10(T_REF / T_OTHER): -0.6767130107590368
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.008338284492492676 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): 0.23204207453560685
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): -0.01715592474847421
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 0.49091190261599654
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -1.4988737830745824
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): 0.3036468619168176
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): -0.35411196669208034
COMPARISON AGAINST keras -> T_OTHER: 0.043729519844055174 s, LOG_10(T_REF / T_OTHER): -0.7196980000981522
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.020532727241516113 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): 0.032630430208568866
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): -0.3939673767113459
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): 0.21323494913543392
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -1.1299755209786166
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 0.5001019660073446
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): 0.021724551204264343
COMPARISON AGAINST keras -> T_OTHER: 0.04250557422637939 s, LOG_10(T_REF / T_OTHER): -0.3159992496409446
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.0622725248336792 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): -0.0819375296429751
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): -0.5746939456743853
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): 0.0503808385492128
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -0.7376926262274559
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 0.6182387649625048
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): 0.47733929646021045
COMPARISON AGAINST keras -> T_OTHER: 0.0457183837890625 s, LOG_10(T_REF / T_OTHER): 0.1342056054503645
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.2364809036254883 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): -0.08952143119121163
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -0.6138288770012946
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): 0.028991829656773313
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): -0.3563175860928494
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 0.667385115055235
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): 0.5174496421988474
COMPARISON AGAINST keras -> T_OTHER: 0.05608227252960205 s, LOG_10(T_REF / T_OTHER): 0.6249704727003247
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.0640650987625122 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): -0.13451450795053171
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -0.5784275758915737
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): -0.04302070441096995
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): -0.08044206444595076
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): 0.7442173781079297
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): 0.5914425257833417
COMPARISON AGAINST keras -> T_OTHER: 0.08512670993804931 s, LOG_10(T_REF / T_OTHER): 1.0969023499354755
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.01156456470489502 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): 0.7428044580216461
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.9181658788207726
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 0.9181658788207726
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -1.6331206897114505
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): 0.49895994737835714
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): -0.4676826698735629
COMPARISON AGAINST keras -> T_OTHER: 0.04142177104949951 s, LOG_10(T_REF / T_OTHER): -0.5540993734753005
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.011610269546508789 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): 0.20859821842965717
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): -0.1618883346383986
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): 0.2530626527056431
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -1.63720416783646
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 0.4470528081437746
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): -0.46112759022594324
COMPARISON AGAINST keras -> T_OTHER: 0.042298746109008786 s, LOG_10(T_REF / T_OTHER): -0.5614851909446179
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.02943093776702881 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): -0.13963638019058355
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): -0.5247948853037983
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): -0.058953460848434024
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -1.2771390093301744
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 0.515814390231197
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): -0.06975960777264874
COMPARISON AGAINST keras -> T_OTHER: 0.0413968563079834 s, LOG_10(T_REF / T_OTHER): -0.14816326151659714
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.10401957035064698 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): -0.19593165135046314
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): -0.6376322086021977
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): -0.09533460362046689
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -0.8260824703913086
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 0.6254703623287028
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): 0.4573477527957887
COMPARISON AGAINST keras -> T_OTHER: 0.04631564617156982 s, LOG_10(T_REF / T_OTHER): 0.3513873281255216
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.40858242511749265 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): -0.25409203546091313
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -0.6810181410582664
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): -0.1115937351736512
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): -0.4484541403653671
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): 0.6495107698749936
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): 0.47967498282191545
COMPARISON AGAINST keras -> T_OTHER: 0.06026105880737305 s, LOG_10(T_REF / T_OTHER): 0.8312429237231738
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 1.9781903266906737 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): -0.18954947741249617
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -0.6172511303870931
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): -0.07235549565907222
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): -0.14589718254447764
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): 0.7377621327290157
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): 0.5742137191370265
COMPARISON AGAINST keras -> T_OTHER: 0.11589789390563965 s, LOG_10(T_REF / T_OTHER): 1.2321925297969558
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.009109306335449218 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): 0.7845799314925703
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.9606469649248001
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 1.3585714006953233
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -1.476320937537565
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): 0.31210256463782
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): -0.326304418729085
COMPARISON AGAINST keras -> T_OTHER: 0.04114830493927002 s, LOG_10(T_REF / T_OTHER): -0.6548666424742995
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.008843302726745605 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): 0.3800031103136334
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): -0.016009194698956012
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 0.6925082591554951
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -1.488229634087092
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): 0.4145309832203629
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): -0.33706280032361613
COMPARISON AGAINST keras -> T_OTHER: 0.0409853458404541 s, LOG_10(T_REF / T_OTHER): -0.6660141119034962
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.022071456909179686 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): 0.15746816298750727
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): -0.392192263473713
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): 0.4419052676700332
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -1.1321318140409864
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 0.5547163628920807
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): 0.04601381553722308
COMPARISON AGAINST keras -> T_OTHER: 0.04163327217102051 s, LOG_10(T_REF / T_OTHER): -0.27560954430295337
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.0712883472442627 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): 0.11778417785570441
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): -0.5525326925393699
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): 0.3291336923272833
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -0.7007973939669755
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 0.6720602116586243
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): 0.5391335447021453
COMPARISON AGAINST keras -> T_OTHER: 0.0433488130569458 s, LOG_10(T_REF / T_OTHER): 0.2160413356400423
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.2774417638778687 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): 0.12371500437871123
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -0.5839172813891462
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): 0.3006902467940498
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): -0.2750000906297052
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): 0.7200127687996983
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): 0.578703834490193
COMPARISON AGAINST keras -> T_OTHER: 0.051208877563476564 s, LOG_10(T_REF / T_OTHER): 0.7338265801674744
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.7923971652984618 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): 0.2541625858400406
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -0.3891740735395471
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): 0.3923418269681026
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): 0.18174959140832955
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): 0.9433539066431037
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): 0.8038482269438392
COMPARISON AGAINST keras -> T_OTHER: 0.07876739501953126 s, LOG_10(T_REF / T_OTHER): 1.3570877655972484
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.011920571327209473 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): 0.7986444783223987
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): 0.8733491280695702
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 1.1743531685874566
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -1.6368785872978566
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): 0.558804180826086
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): -0.4612782887467016
COMPARISON AGAINST keras -> T_OTHER: 0.0414625883102417 s, LOG_10(T_REF / T_OTHER): -0.5413593388241115
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.011647772789001466 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): 0.36017263514513576
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): -0.1780859391330811
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 0.5233468860243068
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -1.665798570073442
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): 0.44685109354526836
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): -0.4664812248438394
COMPARISON AGAINST keras -> T_OTHER: 0.0722811222076416 s, LOG_10(T_REF / T_OTHER): -0.7927819962751215
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.030884289741516115 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): 0.17493730646281935
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): -0.5108239512290209
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): 0.3090524094285798
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -1.2640617391530637
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 0.5672191051986641
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): -0.05050457023882513
COMPARISON AGAINST keras -> T_OTHER: 0.041480493545532224 s, LOG_10(T_REF / T_OTHER): -0.12810629695171594
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.10699446201324463 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): 0.12404155984418848
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): -0.633650986598761
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): 0.24164522475654976
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -0.8151361112471674
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 0.630256122749796
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): 0.46825583543249716
COMPARISON AGAINST keras -> T_OTHER: 0.04411845207214356 s, LOG_10(T_REF / T_OTHER): 0.38474103287480355
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.4236691236495972 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): 0.1185820065384805
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -0.6726493130503145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): 0.2656565410230755
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): -0.41151172945458153
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): 0.6596695784634778
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): 0.4917758402978506
COMPARISON AGAINST keras -> T_OTHER: 0.05369467735290527 s, LOG_10(T_REF / T_OTHER): 0.8970955773634468
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.2772167682647706 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): 0.12597413693236245
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -0.5599153640829617
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): 0.23127310118649191
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): -0.0580960596175693
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): 0.7895269687400629
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): 0.6316620890461142
COMPARISON AGAINST keras -> T_OTHER: 0.09498484134674072 s, LOG_10(T_REF / T_OTHER): 1.37975007141484
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.016372537612915038 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): 0.7377032837415264
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): 0.7528828787470048
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 0.9599982281348096
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -1.7905442494173767
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): 0.6714395609235401
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): -0.588019030927042
COMPARISON AGAINST keras -> T_OTHER: 0.04089739322662354 s, LOG_10(T_REF / T_OTHER): -0.39757963042605593
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.016149067878723146 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): 0.19661938454064454
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): -0.4076808411023448
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): 0.35804506623742816
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -1.8009171438912497
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 0.4735950376169276
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): -0.5938559270325715
COMPARISON AGAINST keras -> T_OTHER: 0.04115939140319824 s, LOG_10(T_REF / T_OTHER): -0.406321484519915
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.05008590221405029 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): 0.035233902200694237
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): -0.7478261681297401
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): 0.1494241281128401
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -1.3396208556405564
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 0.5821659309163318
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): -0.11007450450381862
COMPARISON AGAINST keras -> T_OTHER: 0.04155557155609131 s, LOG_10(T_REF / T_OTHER): 0.08108624129005647
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.17999639511108398 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): -0.05638466863309773
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -0.8854745613869255
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): 0.10474424091959196
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): -0.8786577067463224
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 0.6093387202661785
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): 0.42004635489174835
COMPARISON AGAINST keras -> T_OTHER: 0.046794795989990236 s, LOG_10(T_REF / T_OTHER): 0.585066249096404
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.7809805154800415 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): -0.0005560635392884504
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -0.8824071095913509
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): 0.15280435884000618
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): -0.5558993708423112
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): 0.6499587833570898
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): 0.4754362168236649
COMPARISON AGAINST keras -> T_OTHER: 0.06151328086853027 s, LOG_10(T_REF / T_OTHER): 1.1036713077450064
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: numba_cuda_viafft, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 3.226966691017151 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): 0.019911155270813947
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -0.896799556431338
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): 0.12662190460368722
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): -0.23962815765747855
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): 0.6629544158258135
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): 0.49529745304643336
COMPARISON AGAINST keras -> T_OTHER: 0.12612574100494384 s, LOG_10(T_REF / T_OTHER): 1.4079907518197072
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.006509709358215332 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): 0.6686204354263582
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 1.3375777776596367
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): 1.1156805835521129
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -1.0614998025810685
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): 0.30850458701108346
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): -0.162598538682613
COMPARISON AGAINST keras -> T_OTHER: 0.04019250869750977 s, LOG_10(T_REF / T_OTHER): -0.7905835155459294
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.010583972930908203 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): 0.3725944037628789
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): 0.5344490193042305
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 0.5786516053096411
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -0.8601398708409826
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): 0.5343485587131702
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): 0.05677217388312787
COMPARISON AGAINST keras -> T_OTHER: 0.04142332077026367 s, LOG_10(T_REF / T_OTHER): -0.5925961914526267
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.01088564395904541 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): -0.23608363493476603
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): -0.3083385005466665
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): -0.04116892338202846
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -0.8800263648084955
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 0.3469770270765428
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): 0.08314618536691581
COMPARISON AGAINST keras -> T_OTHER: 0.04111857414245605 s, LOG_10(T_REF / T_OTHER): -0.577183920761158
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.026247739791870117 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): -0.45256755533351484
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -0.6396910494542281
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): -0.289866365552623
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): -0.5883490448227816
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): 0.4475250591284411
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 0.4476024508110746
COMPARISON AGAINST keras -> T_OTHER: 0.042056488990783694 s, LOG_10(T_REF / T_OTHER): -0.20474110157975486
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.0902172565460205 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): -0.499766734133151
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -0.7418291424740686
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): -0.34782648138388245
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): -0.2256797760994265
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 0.5198231263354682
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): 0.5047291537910311
COMPARISON AGAINST keras -> T_OTHER: 0.04664206504821777 s, LOG_10(T_REF / T_OTHER): 0.286511846028619
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.40508098602294923 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): -0.545283547891894
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -0.7085483522686602
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): -0.4213747742536712
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): 0.07024631452100374
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): 0.6094449129901355
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): 0.6141005233132699
COMPARISON AGAINST keras -> T_OTHER: 0.06531643867492676 s, LOG_10(T_REF / T_OTHER): 0.792519361280381
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0075589179992675785 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): 0.5785912961675272
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 1.1807239684202502
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): 0.7036096363278388
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -1.2760412603442242
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): 0.2905709545448876
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): -0.27065161508914876
COMPARISON AGAINST keras -> T_OTHER: 0.04154903888702392 s, LOG_10(T_REF / T_OTHER): -0.7401013480808722
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.014296889305114746 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): 0.3051420853853785
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): 0.4004312856525754
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): 0.400518703293672
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -1.0110737798887741
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 0.5576024282532553
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): 0.006468323613034489
COMPARISON AGAINST keras -> T_OTHER: 0.04090774059295654 s, LOG_10(T_REF / T_OTHER): -0.4565639386793931
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.014282441139221192 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): -0.42841432730144857
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): -0.47645691304493354
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): -0.3211602686398715
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -1.0451699955584814
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 0.3485487907797882
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): -0.007344595530672877
COMPARISON AGAINST keras -> T_OTHER: 0.041465258598327635 s, LOG_10(T_REF / T_OTHER): -0.46288193528446936
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.038588881492614746 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): -0.6141061597097167
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -0.7388798570066949
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): -0.5120590374730192
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): -0.7066394310281063
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): 0.4064858612999719
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 0.4105177125596612
COMPARISON AGAINST keras -> T_OTHER: 0.04362308979034424 s, LOG_10(T_REF / T_OTHER): -0.053254232449818764
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.14204895496368408 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): -0.6925972892552614
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -0.8174981401738067
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): -0.5105774599182797
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): -0.3382004329798869
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 0.48331653581338146
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): 0.45968709032230515
COMPARISON AGAINST keras -> T_OTHER: 0.052717733383178714 s, LOG_10(T_REF / T_OTHER): 0.43048131367190606
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.5780445098876953 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): -0.7358718806048159
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -0.8339707088584606
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): -0.5673976362588595
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): -0.11241236286889923
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): 0.4998866381977644
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): 0.4981641333924492
COMPARISON AGAINST keras -> T_OTHER: 0.08496575355529785 s, LOG_10(T_REF / T_OTHER): 0.8327173672375795
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.009633564949035644 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): 0.4664356914544624
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 1.0818561049878812
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): 0.5378232869073128
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -1.459890621769742
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 0.42863926537640046
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): -0.40896521831682997
COMPARISON AGAINST keras -> T_OTHER: 0.04143304824829101 s, LOG_10(T_REF / T_OTHER): -0.6335598559973405
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.02029581069946289 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): 0.1510314441727817
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): 0.27113480076437424
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): 0.1912889197031067
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -1.1467489830322244
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 0.7177002267348328
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): -0.0872959681430183
COMPARISON AGAINST keras -> T_OTHER: 0.04088647365570068 s, LOG_10(T_REF / T_OTHER): -0.3041732519463125
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.020916199684143065 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): -0.6241902870905016
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): -0.593243395375832
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): -0.6072685236476643
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -1.170982699826671
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 0.32164236069161517
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): -0.07625611771140142
COMPARISON AGAINST keras -> T_OTHER: 0.04200146198272705 s, LOG_10(T_REF / T_OTHER): -0.3027816282119225
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.06446878910064698 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): -0.7671092603515425
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -0.8015333056691376
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): -0.7017822021033895
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): -0.7792266796979589
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 0.41260438622181733
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): 0.39413451313754083
COMPARISON AGAINST keras -> T_OTHER: 0.04592180252075195 s, LOG_10(T_REF / T_OTHER): 0.14733058642104255
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.249365234375 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): -0.8355797752656224
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -0.8629809072343884
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): -0.729750596937642
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): -0.41813104036597937
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): 0.45105165312216156
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): 0.4326066294982561
COMPARISON AGAINST keras -> T_OTHER: 0.062070250511169434 s, LOG_10(T_REF / T_OTHER): 0.6039524073808015
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 1.2357561349868775 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): -0.6820306473521007
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -0.800882526391759
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): -0.6235440453849072
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): -0.10809058308703336
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): 0.5478512703744676
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): 0.5390006250702695
COMPARISON AGAINST keras -> T_OTHER: 0.1235964298248291 s, LOG_10(T_REF / T_OTHER): 0.9999268492061116
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.007440400123596191 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): 0.6960269307080956
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 1.1737775627481795
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): 1.0946343852340612
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -1.296346513434278
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): 0.24540541314860545
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): -0.2780398338640519
COMPARISON AGAINST keras -> T_OTHER: 0.04323766231536865 s, LOG_10(T_REF / T_OTHER): -0.7642659140806477
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.014516019821166992 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): 0.44721395825931054
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): 0.33049235842443636
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 0.6578631253194357
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -1.0216999986601167
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): 0.6389226291516344
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): 0.016068422330390495
COMPARISON AGAINST keras -> T_OTHER: 0.04052910804748535 s, LOG_10(T_REF / T_OTHER): -0.4459194934791808
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.015208148956298828 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): -0.0955194105674497
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): -0.47480657999558357
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): 0.08285395721677596
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -1.0268306796179456
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 0.33778712662693366
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): 0.024097129621754074
COMPARISON AGAINST keras -> T_OTHER: 0.04143097400665283 s, LOG_10(T_REF / T_OTHER): -0.4352487857310548
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.04157767295837402 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): -0.2619559965724396
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -0.7354481529279793
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): -0.1441558861336784
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): -0.6717862483198965
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 0.471174798849788
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): 0.4452268144411623
COMPARISON AGAINST keras -> T_OTHER: 0.042377662658691403 s, LOG_10(T_REF / T_OTHER): -0.008276820661781247
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.15222694873809814 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): -0.2928849494473553
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -0.8149593410854972
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): -0.15060228412511834
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): -0.28536276763802754
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 0.49919699914871657
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): 0.4879504575414394
COMPARISON AGAINST keras -> T_OTHER: 0.04867992401123047 s, LOG_10(T_REF / T_OTHER): 0.49514165076653976
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.767128586769104 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): -0.2770394705461648
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -0.7332575758113421
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): -0.18827989498562542
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): 0.05172817445931618
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): 0.6063116491740913
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): 0.614920024320138
COMPARISON AGAINST keras -> T_OTHER: 0.07147877216339112 s, LOG_10(T_REF / T_OTHER): 1.0306910831307536
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.008164811134338378 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): 0.5714937903524174
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 1.010054152967552
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): 0.8339715464890868
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -1.5409772978742384
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): 0.33373914095026014
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): -0.474148654165587
COMPARISON AGAINST keras -> T_OTHER: 0.04087202548980713 s, LOG_10(T_REF / T_OTHER): -0.6994800172865395
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.01955409049987793 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): 0.4411323026001803
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): 0.24318051437987467
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): 0.5070645078845413
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -1.1781632834326257
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 0.7118180844472803
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): -0.09252187576943151
COMPARISON AGAINST keras -> T_OTHER: 0.041883015632629396 s, LOG_10(T_REF / T_OTHER): -0.3308003230637384
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.020164871215820314 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): -0.26012066859890853
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): -0.6292636335418728
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): -0.18979276636668269
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -1.192428872952458
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 0.388916678620055
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): -0.0889813235925923
COMPARISON AGAINST keras -> T_OTHER: 0.04129083156585693 s, LOG_10(T_REF / T_OTHER): -0.3112581766181207
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.06200110912322998 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): -0.40547823233943514
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -0.8432415582595437
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): -0.31568141844219855
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): -0.793648078360084
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 0.4163798867847286
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): 0.37570474046080904
COMPARISON AGAINST keras -> T_OTHER: 0.044071197509765625 s, LOG_10(T_REF / T_OTHER): 0.14824460716865281
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.23610877990722656 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): -0.4885076915838301
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -0.9069105001030785
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): -0.2924375097402026
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): -0.40942583382033576
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): 0.42473403144961935
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): 0.40831768911814637
COMPARISON AGAINST keras -> T_OTHER: 0.05296444892883301 s, LOG_10(T_REF / T_OTHER): 0.6491276789869473
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 1.0640568733215332 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): -0.45536502622251396
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -0.8775886252769123
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): -0.3116989649882223
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): -0.1341628297100102
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): 0.48078635435946304
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): 0.4769652259522223
COMPARISON AGAINST keras -> T_OTHER: 0.08968617916107177 s, LOG_10(T_REF / T_OTHER): 1.0742393189495751
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.011943650245666505 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): 0.48504053102857736
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 0.9023424644211124
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): 0.6158681598787915
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -1.6609476891248052
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 0.5219893128081602
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): -0.5702041525152145
COMPARISON AGAINST keras -> T_OTHER: 0.04199368953704834 s, LOG_10(T_REF / T_OTHER): -0.5460469559809674
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.0299424409866333 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): 0.29835648718024194
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): 0.07086613537546729
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): 0.41298693280761434
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -1.268958286935074
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 0.839781044327869
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): -0.16880899982594538
COMPARISON AGAINST keras -> T_OTHER: 0.0405839204788208 s, LOG_10(T_REF / T_OTHER): -0.13206679606238333
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.03020455837249756 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): -0.44969756308063463
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): -0.8112382519503561
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): -0.4362737844800512
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -1.305237511465958
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 0.3672883998047956
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): -0.1763956807896755
COMPARISON AGAINST keras -> T_OTHER: 0.04193613529205322 s, LOG_10(T_REF / T_OTHER): -0.1425159145051513
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.1033475399017334 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): -0.548228550132512
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -1.0133183077486414
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): -0.5037120974849545
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): -0.8654747065217497
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 0.39279553635365444
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): 0.3456704698784441
COMPARISON AGAINST keras -> T_OTHER: 0.04663105010986328 s, LOG_10(T_REF / T_OTHER): 0.34562494740689975
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.40638554096221924 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): -0.5819541827296562
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -1.0916386680330852
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): -0.5317311929663123
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): -0.4982020169428564
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): 0.38838007923180934
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): 0.3593061325670814
COMPARISON AGAINST keras -> T_OTHER: 0.06355473995208741 s, LOG_10(T_REF / T_OTHER): 0.8057903014729608
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 1.97886381149292 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): -0.47092394028597084
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -1.0336927064395607
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): -0.4261529507924514
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): -0.19926263303379146
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): 0.4670616837966868
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): 0.4550591030370141
COMPARISON AGAINST keras -> T_OTHER: 0.13057527542114258 s, LOG_10(T_REF / T_OTHER): 1.1805549558452784
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.009337091445922851 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 0.7161053792150609
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): 0.9299909671044394
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 0.9713732700180839
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -1.4956498417013409
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): 0.4253326597838107
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): -0.4164042660373665
COMPARISON AGAINST keras -> T_OTHER: 0.04015624523162842 s, LOG_10(T_REF / T_OTHER): -0.6335414855412065
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0220797061920166 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): 0.6461890963844793
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): 0.23794400488187664
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): 0.7540714404537833
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -1.1357164598511535
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 0.776596169537199
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): -0.05194454208376906
COMPARISON AGAINST keras -> T_OTHER: 0.04067397117614746 s, LOG_10(T_REF / T_OTHER): -0.2653232864577434
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.023064303398132324 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): 0.007999632964747724
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): -0.604383292794005
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): 0.1599781241697342
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -1.1523074901167392
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 0.45657049061497534
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): -0.03855033473094722
COMPARISON AGAINST keras -> T_OTHER: 0.04065983295440674 s, LOG_10(T_REF / T_OTHER): -0.2462252477427279
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.07152206897735595 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): -0.026333869455672287
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -0.7994498982338336
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): 0.06180853808766417
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): -0.7457101076569099
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 0.4656141137692558
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): 0.4265628481114811
COMPARISON AGAINST keras -> T_OTHER: 0.043125319480896 s, LOG_10(T_REF / T_OTHER): 0.2197077437284111
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.27598090171813966 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): -0.043880193169751266
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -0.861790302093693
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): 0.06273267675505075
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): -0.33321447402357274
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): 0.47718312712058314
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): 0.4707527038478836
COMPARISON AGAINST keras -> T_OTHER: 0.051540923118591306 s, LOG_10(T_REF / T_OTHER): 0.7287268366192177
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 1.7922553777694703 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): 0.07225045823099072
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -0.6779867327765549
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): 0.13493836314574154
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): 0.11818852880833455
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): 0.6865545483377571
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): 0.6941677534315274
COMPARISON AGAINST keras -> T_OTHER: 0.08172817230224609 s, LOG_10(T_REF / T_OTHER): 1.3410281053432254
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.011576437950134277 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): 0.6333870694947016
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): 0.8606659412868465
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 0.8886349650182814
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -1.687249415911796
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): 0.5047485619531745
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): -0.5886705865021694
COMPARISON AGAINST keras -> T_OTHER: 0.042660069465637204 s, LOG_10(T_REF / T_OTHER): -0.566446610010581
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.030535244941711427 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): 0.5938029808924837
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): 0.0659434897914693
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): 0.6534660622275112
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -1.2756786131577504
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 0.8231591941790889
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): -0.1646326686829739
COMPARISON AGAINST keras -> T_OTHER: 0.042029619216918945 s, LOG_10(T_REF / T_OTHER): -0.13875404728451604
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.03117227554321289 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): -0.0802600000761575
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): -0.8447293685115563
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): -0.06137550881508808
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -1.3006146719863878
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 0.4209668737125681
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): -0.16014091936659608
COMPARISON AGAINST keras -> T_OTHER: 0.04210474491119385 s, LOG_10(T_REF / T_OTHER): -0.1305625340809296
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.10727341175079345 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): -0.1740953712706599
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -1.0506424833417556
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): -0.08793417602259389
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): -0.8610689946409512
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 0.40701572641855965
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): 0.356094803491531
COMPARISON AGAINST keras -> T_OTHER: 0.04535641670227051 s, LOG_10(T_REF / T_OTHER): 0.37385335662615166
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.42314274311065675 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): -0.23681048477317534
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -1.1156348074651263
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): -0.05468204334395066
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): -0.46286264338284816
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): 0.4037476518910985
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): 0.3759833766889601
COMPARISON AGAINST keras -> T_OTHER: 0.057694196701049805 s, LOG_10(T_REF / T_OTHER): 0.865354766256149
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 2.276737189292908 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): -0.12507075362963246
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -1.0304563330037746
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): -0.0011963510644005118
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): -0.11695722907795342
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): 0.5199123355645208
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): 0.5140703616414151
COMPARISON AGAINST keras -> T_OTHER: 0.10130159854888916 s, LOG_10(T_REF / T_OTHER): 1.3516966029510522
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.01587941646575928 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): 0.5891974001955935
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 0.7395334049656781
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): 0.6704910198769334
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -1.8402137827661758
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): 0.604685949079903
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): -0.7262293455139619
COMPARISON AGAINST keras -> T_OTHER: 0.04281141757965088 s, LOG_10(T_REF / T_OTHER): -0.43072506951177775
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.049690866470336915 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): 0.5241543502337871
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): -0.09425210286393403
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): 0.5902224179289418
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -1.3536429339440408
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 0.89061374273827
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): -0.22879467642056717
COMPARISON AGAINST keras -> T_OTHER: 0.04180324077606201 s, LOG_10(T_REF / T_OTHER): 0.07506661814770497
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.049863767623901364 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): -0.2445330106181591
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): -1.0382579692175902
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): -0.25348793773636585
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -1.394899952551739
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 0.3914314291973346
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): -0.2341703771576978
COMPARISON AGAINST keras -> T_OTHER: 0.04264557361602783 s, LOG_10(T_REF / T_OTHER): 0.06791112959817946
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.18023827075958251 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): -0.30099075668324715
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -1.183024094036145
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): -0.26124400250913155
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): -0.9368249341424351
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): 0.3710736760814618
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): 0.3046577433278371
COMPARISON AGAINST keras -> T_OTHER: 0.048420381546020505 s, LOG_10(T_REF / T_OTHER): 0.5708188047308564
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.7814244270324707 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): -0.3002264749703562
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -1.2068485047667898
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): -0.25495903751265236
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): -0.5225507021005142
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): 0.38750809713802115
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): 0.355453806771975
COMPARISON AGAINST keras -> T_OTHER: 0.0667492151260376 s, LOG_10(T_REF / T_OTHER): 1.0684408195890507
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: numba_cuda_viafft, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 3.2298986434936525 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): -0.26461964388587206
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -1.2114752757502152
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): -0.2238620023185781
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): -0.2929667532178529
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): 0.3881517319409897
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): 0.37317812776013454
COMPARISON AGAINST keras -> T_OTHER: 0.14078779220581056 s, LOG_10(T_REF / T_OTHER): 1.3606238955738092
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION numba_cuda_viafft DONE.

============================================================================================================================================================================
COMPARISONS FOR IMPLEMENTATION keras:
1/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.057845783233642575 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0007994890213012696 s, LOG_10(T_REF / T_OTHER): 1.8594592014810405
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0002991676330566406 s, LOG_10(T_REF / T_OTHER): 2.286357100391559
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0021892786026000977 s, LOG_10(T_REF / T_OTHER): 1.4219706733999349
COMPARISON AGAINST cv2 -> T_OTHER: 0.06771910190582275 s, LOG_10(T_REF / T_OTHER): -0.06843948402987939
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007841086387634278 s, LOG_10(T_REF / T_OTHER): 0.8678954671726492
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007310700416564941 s, LOG_10(T_REF / T_OTHER): 0.8983127183898371
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.004930877685546875 s, LOG_10(T_REF / T_OTHER): 1.0693474761746875
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.04216609001159668 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002495861053466797 s, LOG_10(T_REF / T_OTHER): 1.2277429273372131
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0011966943740844727 s, LOG_10(T_REF / T_OTHER): 1.5469800821844322
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 1.78106699644407
COMPARISON AGAINST cv2 -> T_OTHER: 0.06981339454650878 s, LOG_10(T_REF / T_OTHER): -0.21897542377377627
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005699300765991211 s, LOG_10(T_REF / T_OTHER): 0.8691417551509093
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006586241722106934 s, LOG_10(T_REF / T_OTHER): 0.8063256657679256
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005549979209899902 s, LOG_10(T_REF / T_OTHER): 0.8806719752395893
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.04163579940795899 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.009391260147094727 s, LOG_10(T_REF / T_OTHER): 0.6467430364390159
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005884242057800293 s, LOG_10(T_REF / T_OTHER): 0.8497763777069092
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003091740608215332 s, LOG_10(T_REF / T_OTHER): 1.1292638573293374
COMPARISON AGAINST cv2 -> T_OTHER: 0.07101013660430908 s, LOG_10(T_REF / T_OTHER): -0.231853440579958
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007874512672424316 s, LOG_10(T_REF / T_OTHER): 0.7232432212923006
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.006655502319335938 s, LOG_10(T_REF / T_OTHER): 0.7962860684178539
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01061234474182129 s, LOG_10(T_REF / T_OTHER): 0.5936555579471834
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.042278504371643065 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03530681133270264 s, LOG_10(T_REF / T_OTHER): 0.07826111861335582
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02483360767364502 s, LOG_10(T_REF / T_OTHER): 0.23107979970346565
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.010771369934082032 s, LOG_10(T_REF / T_OTHER): 0.5938486738269485
COMPARISON AGAINST cv2 -> T_OTHER: 0.08367633819580078 s, LOG_10(T_REF / T_OTHER): -0.29648305108000644
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014019441604614259 s, LOG_10(T_REF / T_OTHER): 0.4793888994759291
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007102417945861817 s, LOG_10(T_REF / T_OTHER): 0.7747133904443345
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.025927257537841798 s, LOG_10(T_REF / T_OTHER): 0.21236303387889127
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.04626076221466065 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.14273757934570314 s, LOG_10(T_REF / T_OTHER): -0.4893255432423679
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10132904052734375 s, LOG_10(T_REF / T_OTHER): -0.34052114624881413
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04777224063873291 s, LOG_10(T_REF / T_OTHER): -0.013962827129869968
COMPARISON AGAINST cv2 -> T_OTHER: 0.12097654342651368 s, LOG_10(T_REF / T_OTHER): -0.41748838743372496
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01320197582244873 s, LOG_10(T_REF / T_OTHER): 0.5445738510718017
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019361209869384766 s, LOG_10(T_REF / T_OTHER): 0.37828029153973874
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08934197425842286 s, LOG_10(T_REF / T_OTHER): -0.28584276104236384
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.06742041110992432 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5484492778778076 s, LOG_10(T_REF / T_OTHER): -0.9103450726067007
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4059198617935181 s, LOG_10(T_REF / T_OTHER): -0.779648905616682
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.212831449508667 s, LOG_10(T_REF / T_OTHER): -0.4992444064535372
COMPARISON AGAINST cv2 -> T_OTHER: 0.2637935161590576 s, LOG_10(T_REF / T_OTHER): -0.5924727203248973
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.029133105278015138 s, LOG_10(T_REF / T_OTHER): 0.3644046181431854
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06350021362304688 s, LOG_10(T_REF / T_OTHER): 0.026016210075574524
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4029052257537842 s, LOG_10(T_REF / T_OTHER): -0.776411503909428
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.0420576810836792 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.000999784469604492 s, LOG_10(T_REF / T_OTHER): 1.6239389372519797
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0003983020782470703 s, LOG_10(T_REF / T_OTHER): 2.023632751039609
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029888153076171873 s, LOG_10(T_REF / T_OTHER): 2.148346244648914
COMPARISON AGAINST cv2 -> T_OTHER: 0.12407169342041016 s, LOG_10(T_REF / T_OTHER): -0.46982738633239857
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003303790092468262 s, LOG_10(T_REF / T_OTHER): 1.1048328770383467
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010001063346862793 s, LOG_10(T_REF / T_OTHER): 0.6237991453894994
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00579380989074707 s, LOG_10(T_REF / T_OTHER): 0.8608810826779648
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.04223248958587646 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 1.1644099855193148
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0021941423416137694 s, LOG_10(T_REF / T_OTHER): 1.284381885299942
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010970592498779296 s, LOG_10(T_REF / T_OTHER): 1.5854166000942134
COMPARISON AGAINST cv2 -> T_OTHER: 0.12685849666595458 s, LOG_10(T_REF / T_OTHER): -0.4776728768540752
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00330655574798584 s, LOG_10(T_REF / T_OTHER): 1.1062708344046717
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009916090965270996 s, LOG_10(T_REF / T_OTHER): 0.6293061815249542
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007331681251525879 s, LOG_10(T_REF / T_OTHER): 0.7604431081070275
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.04280264377593994 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269974708557128 s, LOG_10(T_REF / T_OTHER): 0.5795476533291707
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01047189235687256 s, LOG_10(T_REF / T_OTHER): 0.6114454254100609
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.004986763000488281 s, LOG_10(T_REF / T_OTHER): 0.9336518662071086
COMPARISON AGAINST cv2 -> T_OTHER: 0.13324642181396484 s, LOG_10(T_REF / T_OTHER): -0.49318496059763917
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036953449249267577 s, LOG_10(T_REF / T_OTHER): 1.063815612919125
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009710454940795898 s, LOG_10(T_REF / T_OTHER): 0.6442310174084714
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014116477966308594 s, LOG_10(T_REF / T_OTHER): 0.4817442401516576
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.045191836357116696 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04522416591644287 s, LOG_10(T_REF / T_OTHER): -0.000310576655968784
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04527957439422607 s, LOG_10(T_REF / T_OTHER): -0.0008423469248169824
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01934826374053955 s, LOG_10(T_REF / T_OTHER): 0.3684179903969898
COMPARISON AGAINST cv2 -> T_OTHER: 0.1619675874710083 s, LOG_10(T_REF / T_OTHER): -0.554368124244758
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006482124328613281 s, LOG_10(T_REF / T_OTHER): 0.8433426324769878
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010871195793151855 s, LOG_10(T_REF / T_OTHER): 0.618782671546278
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039128875732421874 s, LOG_10(T_REF / T_OTHER): 0.06256261937431964
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.04894304275512695 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17572617530822754 s, LOG_10(T_REF / T_OTHER): -0.5551454910445798
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18740549087524414 s, LOG_10(T_REF / T_OTHER): -0.5830913456789512
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08568768501281739 s, LOG_10(T_REF / T_OTHER): -0.24322744420007353
COMPARISON AGAINST cv2 -> T_OTHER: 0.24684650897979737 s, LOG_10(T_REF / T_OTHER): -0.7027360239580598
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01338658332824707 s, LOG_10(T_REF / T_OTHER): 0.5630212199252679
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.031879091262817384 s, LOG_10(T_REF / T_OTHER): 0.1861850326291032
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14248330593109132 s, LOG_10(T_REF / T_OTHER): -0.464073017531809
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.07393889427185059 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8213621377944946 s, LOG_10(T_REF / T_OTHER): -1.0456617277961584
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7680516242980957 s, LOG_10(T_REF / T_OTHER): -1.0165174603749483
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.42496562004089355 s, LOG_10(T_REF / T_OTHER): -0.7594808452259111
COMPARISON AGAINST cv2 -> T_OTHER: 0.5782607078552247 s, LOG_10(T_REF / T_OTHER): -0.8932507319232976
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04637551307678223 s, LOG_10(T_REF / T_OTHER): 0.20258422409742816
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1159902811050415 s, LOG_10(T_REF / T_OTHER): -0.19554864938104133
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5774290323257446 s, LOG_10(T_REF / T_OTHER): -0.8926256642377759
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.041237831115722656 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0011967897415161132 s, LOG_10(T_REF / T_OTHER): 1.537277957790302
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000696253776550293 s, LOG_10(T_REF / T_OTHER): 1.7725282518537024
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00039904117584228517 s, LOG_10(T_REF / T_OTHER): 2.014278104176245
COMPARISON AGAINST cv2 -> T_OTHER: 0.24415051937103271 s, LOG_10(T_REF / T_OTHER): -0.772361836778645
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003466629981994629 s, LOG_10(T_REF / T_OTHER): 1.0753883268988802
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01606252193450928 s, LOG_10(T_REF / T_OTHER): 0.40948208196309716
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006349754333496094 s, LOG_10(T_REF / T_OTHER): 0.8125388925596141
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.040789031982421876 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003789687156677246 s, LOG_10(T_REF / T_OTHER): 1.0319400387264441
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004587745666503907 s, LOG_10(T_REF / T_OTHER): 0.9489440649685926
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00199434757232666 s, LOG_10(T_REF / T_OTHER): 1.3107425497772258
COMPARISON AGAINST cv2 -> T_OTHER: 0.24166014194488525 s, LOG_10(T_REF / T_OTHER): -0.7726616276099159
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034610986709594726 s, LOG_10(T_REF / T_OTHER): 1.0713294180486328
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016025543212890625 s, LOG_10(T_REF / T_OTHER): 0.4057306390457651
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008709931373596191 s, LOG_10(T_REF / T_OTHER): 0.6705286654597826
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.04169130325317383 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01515958309173584 s, LOG_10(T_REF / T_OTHER): 0.43935821341045367
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01934816837310791 s, LOG_10(T_REF / T_OTHER): 0.3334056131238044
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.009175491333007813 s, LOG_10(T_REF / T_OTHER): 0.6574161418797781
COMPARISON AGAINST cv2 -> T_OTHER: 0.2563129425048828 s, LOG_10(T_REF / T_OTHER): -0.7887250652014756
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004359388351440429 s, LOG_10(T_REF / T_OTHER): 0.9806199118076109
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016400361061096193 s, LOG_10(T_REF / T_OTHER): 0.40519206187202733
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020267176628112792 s, LOG_10(T_REF / T_OTHER): 0.31325221882578547
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.044141602516174314 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06207704544067383 s, LOG_10(T_REF / T_OTHER): -0.14808294274655512
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08786489963531494 s, LOG_10(T_REF / T_OTHER): -0.29896732155774003
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03929522037506104 s, LOG_10(T_REF / T_OTHER): 0.050508367010995724
COMPARISON AGAINST cv2 -> T_OTHER: 0.3126700401306152 s, LOG_10(T_REF / T_OTHER): -0.8502381736475818
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008588457107543945 s, LOG_10(T_REF / T_OTHER): 0.7109329446917155
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017382144927978516 s, LOG_10(T_REF / T_OTHER): 0.4047447290918576
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06474647521972657 s, LOG_10(T_REF / T_OTHER): -0.16636803479170792
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.05604164600372315 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24315590858459474 s, LOG_10(T_REF / T_OTHER): -0.6373739447031413
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.35692687034606935 s, LOG_10(T_REF / T_OTHER): -0.8040683614599906
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.15498566627502441 s, LOG_10(T_REF / T_OTHER): -0.44178065215139056
COMPARISON AGAINST cv2 -> T_OTHER: 0.5244029760360718 s, LOG_10(T_REF / T_OTHER): -0.9711542651874937
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023572778701782225 s, LOG_10(T_REF / T_OTHER): 0.3761001033810689
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05914039611816406 s, LOG_10(T_REF / T_OTHER): -0.02337334657390772
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249298357963562 s, LOG_10(T_REF / T_OTHER): -0.6482085354759805
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18/162 [impl: keras, kernel_size: 3, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.10127761363983154 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1779215812683106 s, LOG_10(T_REF / T_OTHER): -1.0656029190709273
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4504482984542846 s, LOG_10(T_REF / T_OTHER): -1.1559887931904447
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.8024621725082397 s, LOG_10(T_REF / T_OTHER): -0.8989111095260871
COMPARISON AGAINST cv2 -> T_OTHER: 1.2592455387115478 s, LOG_10(T_REF / T_OTHER): -1.0945969611998039
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08265032768249511 s, LOG_10(T_REF / T_OTHER): 0.08826887995107922
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22089483737945556 s, LOG_10(T_REF / T_OTHER): -0.3386721062193938
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2345639944076539 s, LOG_10(T_REF / T_OTHER): -1.0860001470786702
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.04143853187561035 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010959625244140625 s, LOG_10(T_REF / T_OTHER): 1.5776086563644638
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 1.919606396095687
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019969940185546876 s, LOG_10(T_REF / T_OTHER): 2.3170275963415503
COMPARISON AGAINST cv2 -> T_OTHER: 0.12865655422210692 s, LOG_10(T_REF / T_OTHER): -0.4920275552095402
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032886505126953126 s, LOG_10(T_REF / T_OTHER): 1.1003866372633975
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.010176539421081543 s, LOG_10(T_REF / T_OTHER): 0.6098042411304629
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005565714836120605 s, LOG_10(T_REF / T_OTHER): 0.8718834092640482
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.041330265998840335 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002592015266418457 s, LOG_10(T_REF / T_OTHER): 1.2026306452728854
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0023936033248901367 s, LOG_10(T_REF / T_OTHER): 1.2372160209294794
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006981372833251953 s, LOG_10(T_REF / T_OTHER): 1.7723273686917793
COMPARISON AGAINST cv2 -> T_OTHER: 0.13484201431274415 s, LOG_10(T_REF / T_OTHER): -0.5135570311449256
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00329737663269043 s, LOG_10(T_REF / T_OTHER): 1.0980996444550304
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009888982772827149 s, LOG_10(T_REF / T_OTHER): 0.621116580054756
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006617045402526856 s, LOG_10(T_REF / T_OTHER): 0.7956040858373382
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.04087047576904297 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00907440185546875 s, LOG_10(T_REF / T_OTHER): 0.6535916854432423
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01107039451599121 s, LOG_10(T_REF / T_OTHER): 0.5672465951984526
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028922557830810547 s, LOG_10(T_REF / T_OTHER): 1.1501729951982331
COMPARISON AGAINST cv2 -> T_OTHER: 0.14082303047180175 s, LOG_10(T_REF / T_OTHER): -0.5372639926584427
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036886930465698242 s, LOG_10(T_REF / T_OTHER): 1.0445371762669622
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009877991676330567 s, LOG_10(T_REF / T_OTHER): 0.6167410374504917
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014542055130004884 s, LOG_10(T_REF / T_OTHER): 0.44878390656540107
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.042726325988769534 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03580191135406494 s, LOG_10(T_REF / T_OTHER): 0.07678933678879442
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04886929988861084 s, LOG_10(T_REF / T_OTHER): -0.058340567583062
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01276566982269287 s, LOG_10(T_REF / T_OTHER): 0.5246519422581778
COMPARISON AGAINST cv2 -> T_OTHER: 0.16077947616577148 s, LOG_10(T_REF / T_OTHER): -0.5755350596576414
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006229996681213379 s, LOG_10(T_REF / T_OTHER): 0.8362077343939841
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01079258918762207 s, LOG_10(T_REF / T_OTHER): 0.5975699034410739
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04151461124420166 s, LOG_10(T_REF / T_OTHER): 0.012494574290837229
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.04738738536834717 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1388364315032959 s, LOG_10(T_REF / T_OTHER): -0.4668406956590625
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.20027148723602295 s, LOG_10(T_REF / T_OTHER): -0.6259563760825552
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05515258312225342 s, LOG_10(T_REF / T_OTHER): -0.06590311097335176
COMPARISON AGAINST cv2 -> T_OTHER: 0.23407795429229736 s, LOG_10(T_REF / T_OTHER): -0.6936977664489126
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014036321640014648 s, LOG_10(T_REF / T_OTHER): 0.5284094354186298
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03228137493133545 s, LOG_10(T_REF / T_OTHER): 0.16671072290794844
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15104491710662843 s, LOG_10(T_REF / T_OTHER): -0.5034433683160319
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.06557343006134034 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.5905853033065795 s, LOG_10(T_REF / T_OTHER): -0.9545547337179136
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.8077500820159912 s, LOG_10(T_REF / T_OTHER): -1.0905491091428563
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.24833641052246094 s, LOG_10(T_REF / T_OTHER): -0.5783124978534963
COMPARISON AGAINST cv2 -> T_OTHER: 0.5239123582839966 s, LOG_10(T_REF / T_OTHER): -0.9025307412618672
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.049492597579956055 s, LOG_10(T_REF / T_OTHER): 0.12218765363075755
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11771442890167236 s, LOG_10(T_REF / T_OTHER): -0.25410179831384555
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7679947137832641 s, LOG_10(T_REF / T_OTHER): -1.068630329087672
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.06133801937103271 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010990381240844726 s, LOG_10(T_REF / T_OTHER): 1.7467169905832067
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 1.8857988235999146
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00030114650726318357 s, LOG_10(T_REF / T_OTHER): 2.3089519178005844
COMPARISON AGAINST cv2 -> T_OTHER: 0.24066705703735353 s, LOG_10(T_REF / T_OTHER): -0.5936868989600866
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034632205963134764 s, LOG_10(T_REF / T_OTHER): 1.2482495927019919
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01655580997467041 s, LOG_10(T_REF / T_OTHER): 0.5687793153473673
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006115913391113281 s, LOG_10(T_REF / T_OTHER): 1.001268421694232
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.04064474105834961 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029907464981079102 s, LOG_10(T_REF / T_OTHER): 1.1332247581837978
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004287266731262207 s, LOG_10(T_REF / T_OTHER): 0.9768238571945246
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010951995849609376 s, LOG_10(T_REF / T_OTHER): 1.5695110905269505
COMPARISON AGAINST cv2 -> T_OTHER: 0.25282998085021974 s, LOG_10(T_REF / T_OTHER): -0.7938242106975286
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032001018524169924 s, LOG_10(T_REF / T_OTHER): 1.1038405598647876
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01631917953491211 s, LOG_10(T_REF / T_OTHER): 0.3963060407481559
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008388185501098632 s, LOG_10(T_REF / T_OTHER): 0.68533633493744
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.040835094451904294 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012361526489257812 s, LOG_10(T_REF / T_OTHER): 0.5189614606148296
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.021545553207397462 s, LOG_10(T_REF / T_OTHER): 0.2776759148636151
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005785417556762695 s, LOG_10(T_REF / T_OTHER): 0.8486988552607405
COMPARISON AGAINST cv2 -> T_OTHER: 0.2645726680755615 s, LOG_10(T_REF / T_OTHER): -0.8115114125228465
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004197311401367187 s, LOG_10(T_REF / T_OTHER): 0.9880623734446761
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016028690338134765 s, LOG_10(T_REF / T_OTHER): 0.40613552570126915
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01936502456665039 s, LOG_10(T_REF / T_OTHER): 0.3240155121798653
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.044057464599609374 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04753470420837402 s, LOG_10(T_REF / T_OTHER): -0.03299129485548901
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09075417518615722 s, LOG_10(T_REF / T_OTHER): -0.3138471131401998
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02094419002532959 s, LOG_10(T_REF / T_OTHER): 0.3229559313868824
COMPARISON AGAINST cv2 -> T_OTHER: 0.3224417448043823 s, LOG_10(T_REF / T_OTHER): -0.8644317616135248
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009002757072448731 s, LOG_10(T_REF / T_OTHER): 0.6896439695005885
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0177001953125 s, LOG_10(T_REF / T_OTHER): 0.3960414423349617
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06198585033416748 s, LOG_10(T_REF / T_OTHER): -0.14827306238072324
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.05036325454711914 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17862412929534913 s, LOG_10(T_REF / T_OTHER): -0.5498263377456577
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.37330563068389894 s, LOG_10(T_REF / T_OTHER): -0.8699507534864126
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0883636474609375 s, LOG_10(T_REF / T_OTHER): -0.2441598472228384
COMPARISON AGAINST cv2 -> T_OTHER: 0.4902015447616577 s, LOG_10(T_REF / T_OTHER): -0.9882608884143037
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024154019355773926 s, LOG_10(T_REF / T_OTHER): 0.3191243771012439
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05817239284515381 s, LOG_10(T_REF / T_OTHER): -0.0626031412133881
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23575105667114257 s, LOG_10(T_REF / T_OTHER): -0.6703398608990638
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.07978088855743408 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.832661247253418 s, LOG_10(T_REF / T_OTHER): -1.0185694837589412
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.513362169265747 s, LOG_10(T_REF / T_OTHER): -1.2780440044144306
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.48003134727478025 s, LOG_10(T_REF / T_OTHER): -0.7793707298986168
COMPARISON AGAINST cv2 -> T_OTHER: 1.1507097005844116 s, LOG_10(T_REF / T_OTHER): -1.1590669053065994
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08259174823760987 s, LOG_10(T_REF / T_OTHER): -0.01503779007312309
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2184764862060547 s, LOG_10(T_REF / T_OTHER): -0.43750583341339694
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.063003921508789 s, LOG_10(T_REF / T_OTHER): -1.1246359977307654
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.042985725402832034 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013976097106933594 s, LOG_10(T_REF / T_OTHER): 1.4879383505497565
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013946533203125 s, LOG_10(T_REF / T_OTHER): 1.4888579949344547
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004986047744750977 s, LOG_10(T_REF / T_OTHER): 1.9355678271960037
COMPARISON AGAINST cv2 -> T_OTHER: 0.4858025789260864 s, LOG_10(T_REF / T_OTHER): -1.0531355559214282
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003224968910217285 s, LOG_10(T_REF / T_OTHER): 1.1247987277976907
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02797238826751709 s, LOG_10(T_REF / T_OTHER): 0.18659471225995852
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007160305976867676 s, LOG_10(T_REF / T_OTHER): 0.7783926789062907
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.04109468460083008 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003988099098205566 s, LOG_10(T_REF / T_OTHER): 1.013019710280941
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008078646659851075 s, LOG_10(T_REF / T_OTHER): 0.706447038039575
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0020944356918334963 s, LOG_10(T_REF / T_OTHER): 1.292718621415854
COMPARISON AGAINST cv2 -> T_OTHER: 0.4908910751342773 s, LOG_10(T_REF / T_OTHER): -1.0771994846727944
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00332489013671875 s, LOG_10(T_REF / T_OTHER): 1.0920083519903616
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027871370315551758 s, LOG_10(T_REF / T_OTHER): 0.16862732998061145
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01107022762298584 s, LOG_10(T_REF / T_OTHER): 0.5696291007982983
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.04136664867401123 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015957450866699217 s, LOG_10(T_REF / T_OTHER): 0.4136868219775255
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.03999307155609131 s, LOG_10(T_REF / T_OTHER): 0.01466557769189498
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00937497615814209 s, LOG_10(T_REF / T_OTHER): 0.6446801659499217
COMPARISON AGAINST cv2 -> T_OTHER: 0.5256189107894897 s, LOG_10(T_REF / T_OTHER): -1.1040206440591425
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005748462677001953 s, LOG_10(T_REF / T_OTHER): 0.8570986219145941
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027858710289001463 s, LOG_10(T_REF / T_OTHER): 0.17168933086538693
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03018784523010254 s, LOG_10(T_REF / T_OTHER): 0.13681822313721148
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
34/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.04556498527526855 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06305396556854248 s, LOG_10(T_REF / T_OTHER): -0.14108117100537731
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.17423810958862304 s, LOG_10(T_REF / T_OTHER): -0.5825119162584729
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.040990567207336424 s, LOG_10(T_REF / T_OTHER): 0.04594730635158418
COMPARISON AGAINST cv2 -> T_OTHER: 0.6348091840744019 s, LOG_10(T_REF / T_OTHER): -1.1440119670014852
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.012520241737365722 s, LOG_10(T_REF / T_OTHER): 0.5610185200702614
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03008596897125244 s, LOG_10(T_REF / T_OTHER): 0.1802672309970898
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10357046127319336 s, LOG_10(T_REF / T_OTHER): -0.3566046762109449
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
35/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.05729210376739502 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.24176878929138185 s, LOG_10(T_REF / T_OTHER): -0.6253054658293205
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7128110647201538 s, LOG_10(T_REF / T_OTHER): -1.0948796626385198
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.16166846752166747 s, LOG_10(T_REF / T_OTHER): -0.4505305517502298
COMPARISON AGAINST cv2 -> T_OTHER: 1.0585341453552246 s, LOG_10(T_REF / T_OTHER): -1.2666101018624782
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.03932311534881592 s, LOG_10(T_REF / T_OTHER): 0.16344685261863737
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.10943338871002198 s, LOG_10(T_REF / T_OTHER): -0.28105507793022916
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4074209213256836 s, LOG_10(T_REF / T_OTHER): -0.8519485566910364
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
36/162 [impl: keras, kernel_size: 3, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.10746681690216064 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.1996399879455566 s, LOG_10(T_REF / T_OTHER): -1.0477765482470267
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.8983863592147827 s, LOG_10(T_REF / T_OTHER): -1.4308818915498551
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.875785231590271 s, LOG_10(T_REF / T_OTHER): -0.911123231843592
COMPARISON AGAINST cv2 -> T_OTHER: 2.5212917566299438 s, LOG_10(T_REF / T_OTHER): -1.370348718347722
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.14894647598266603 s, LOG_10(T_REF / T_OTHER): -0.14175584688438725
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4200847625732422 s, LOG_10(T_REF / T_OTHER): -0.5920625434332784
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9771172761917115 s, LOG_10(T_REF / T_OTHER): -1.2647580454745389
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
37/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.043345308303833006 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.001595616340637207 s, LOG_10(T_REF / T_OTHER): 1.4340136210700534
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0008976221084594727 s, LOG_10(T_REF / T_OTHER): 1.683848555591495
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00029926300048828126 s, LOG_10(T_REF / T_OTHER): 2.1608890703501435
COMPARISON AGAINST cv2 -> T_OTHER: 0.2593071460723877 s, LOG_10(T_REF / T_OTHER): -0.7768723890442937
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032359838485717775 s, LOG_10(T_REF / T_OTHER): 1.1269357510244837
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016189765930175782 s, LOG_10(T_REF / T_OTHER): 0.4277015265036964
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006279182434082031 s, LOG_10(T_REF / T_OTHER): 0.8390389951767437
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
38/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.04133827686309814 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003390979766845703 s, LOG_10(T_REF / T_OTHER): 1.0860271711637313
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0046874284744262695 s, LOG_10(T_REF / T_OTHER): 0.9454177157423219
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0007978200912475586 s, LOG_10(T_REF / T_OTHER): 1.714447400809424
COMPARISON AGAINST cv2 -> T_OTHER: 0.25531754493713377 s, LOG_10(T_REF / T_OTHER): -0.7907282901026281
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003322935104370117 s, LOG_10(T_REF / T_OTHER): 1.0948305098603968
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01618084907531738 s, LOG_10(T_REF / T_OTHER): 0.4073510625380783
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009299612045288086 s, LOG_10(T_REF / T_OTHER): 0.6478875382813004
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
39/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.04178473949432373 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.011269807815551758 s, LOG_10(T_REF / T_OTHER): 0.5691011888465716
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.02293860912322998 s, LOG_10(T_REF / T_OTHER): 0.26045061788864665
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003989553451538086 s, LOG_10(T_REF / T_OTHER): 1.0200934108447872
COMPARISON AGAINST cv2 -> T_OTHER: 0.27806270122528076 s, LOG_10(T_REF / T_OTHER): -0.8231250384615568
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00454556941986084 s, LOG_10(T_REF / T_OTHER): 0.9634294042263368
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.016460418701171875 s, LOG_10(T_REF / T_OTHER): 0.4045768208164442
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.021940088272094725 s, LOG_10(T_REF / T_OTHER): 0.27977932836617353
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
40/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.043227195739746094 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.038597941398620605 s, LOG_10(T_REF / T_OTHER): 0.049192920222221326
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09704413414001464 s, LOG_10(T_REF / T_OTHER): -0.3512122268270866
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.014760494232177734 s, LOG_10(T_REF / T_OTHER): 0.46665616323320047
COMPARISON AGAINST cv2 -> T_OTHER: 0.3288194894790649 s, LOG_10(T_REF / T_OTHER): -0.8812004880858436
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008876442909240723 s, LOG_10(T_REF / T_OTHER): 0.687518098479155
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.017403578758239745 s, LOG_10(T_REF / T_OTHER): 0.39511849969251295
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07097673416137695 s, LOG_10(T_REF / T_OTHER): -0.21535894972550523
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
41/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.05022144317626953 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.17143874168395995 s, LOG_10(T_REF / T_OTHER): -0.5332197818824355
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3973409175872803 s, LOG_10(T_REF / T_OTHER): -0.8982741018158095
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.06452744007110596 s, LOG_10(T_REF / T_OTHER): -0.10885524758932874
COMPARISON AGAINST cv2 -> T_OTHER: 0.47814438343048093 s, LOG_10(T_REF / T_OTHER): -0.9786698701059962
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.025660133361816405 s, LOG_10(T_REF / T_OTHER): 0.29163027937732494
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.059189796447753906 s, LOG_10(T_REF / T_OTHER): -0.07135765789261894
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2763039588928223 s, LOG_10(T_REF / T_OTHER): -0.740497918993852
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
42/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.07732973098754883 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6586482286453247 s, LOG_10(T_REF / T_OTHER): -0.9303070288097218
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.6114983081817627 s, LOG_10(T_REF / T_OTHER): -1.3188833545386205
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.30558664798736573 s, LOG_10(T_REF / T_OTHER): -0.5967878752982745
COMPARISON AGAINST cv2 -> T_OTHER: 1.0588519334793092 s, LOG_10(T_REF / T_OTHER): -1.1364887346107595
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09256103038787841 s, LOG_10(T_REF / T_OTHER): -0.0780816811601972
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.22413103580474852 s, LOG_10(T_REF / T_OTHER): -0.4621554988232873
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7905367374420167 s, LOG_10(T_REF / T_OTHER): -1.3646367367322318
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
43/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.040796208381652835 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014955520629882813 s, LOG_10(T_REF / T_OTHER): 1.4358182651962252
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 1.465656389871226
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989696502685547 s, LOG_10(T_REF / T_OTHER): 2.009679941394713
COMPARISON AGAINST cv2 -> T_OTHER: 0.4834700107574463 s, LOG_10(T_REF / T_OTHER): -1.0737497388922557
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033281564712524412 s, LOG_10(T_REF / T_OTHER): 1.088416065247201
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028192973136901854 s, LOG_10(T_REF / T_OTHER): 0.1604789239027735
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007559847831726074 s, LOG_10(T_REF / T_OTHER): 0.7321067475370405
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
44/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.040892815589904784 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.003291153907775879 s, LOG_10(T_REF / T_OTHER): 1.0942988218785683
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008676743507385254 s, LOG_10(T_REF / T_OTHER): 0.6732902545361588
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011967658996582032 s, LOG_10(T_REF / T_OTHER): 1.5336378080079023
COMPARISON AGAINST cv2 -> T_OTHER: 0.5034561872482299 s, LOG_10(T_REF / T_OTHER): -1.0903146684792646
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003726696968078613 s, LOG_10(T_REF / T_OTHER): 1.040322933977122
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.027977848052978517 s, LOG_10(T_REF / T_OTHER): 0.1648327068269414
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011664056777954101 s, LOG_10(T_REF / T_OTHER): 0.5447973890035619
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
45/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.04138209819793701 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012671375274658203 s, LOG_10(T_REF / T_OTHER): 0.5139887537902985
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0419877290725708 s, LOG_10(T_REF / T_OTHER): -0.006309879301890522
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005984187126159668 s, LOG_10(T_REF / T_OTHER): 0.8398073414331292
COMPARISON AGAINST cv2 -> T_OTHER: 0.5264957427978516 s, LOG_10(T_REF / T_OTHER): -1.1045823569296083
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.005249309539794922 s, LOG_10(T_REF / T_OTHER): 0.8967103240589448
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02783956527709961 s, LOG_10(T_REF / T_OTHER): 0.17215005757895518
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030757856369018555 s, LOG_10(T_REF / T_OTHER): 0.12885644237176624
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
46/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.04492533206939697 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04732723236083984 s, LOG_10(T_REF / T_OTHER): -0.022619812278554446
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.18110177516937256 s, LOG_10(T_REF / T_OTHER): -0.6054314113955472
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.024235010147094727 s, LOG_10(T_REF / T_OTHER): 0.26804809002126967
COMPARISON AGAINST cv2 -> T_OTHER: 0.6273360013961792 s, LOG_10(T_REF / T_OTHER): -1.1450089155145742
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01300194263458252 s, LOG_10(T_REF / T_OTHER): 0.5384830503451644
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0303295373916626 s, LOG_10(T_REF / T_OTHER): 0.17062550973393797
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10678844451904297 s, LOG_10(T_REF / T_OTHER): -0.376032964704727
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
47/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.05300981998443603 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.19551589488983154 s, LOG_10(T_REF / T_OTHER): -0.5668257406691726
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.7514965295791626 s, LOG_10(T_REF / T_OTHER): -1.1515706499376774
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.10711417198181153 s, LOG_10(T_REF / T_OTHER): -0.3054906055308647
COMPARISON AGAINST cv2 -> T_OTHER: 0.9791238069534302 s, LOG_10(T_REF / T_OTHER): -1.2664812809579002
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.04045069217681885 s, LOG_10(T_REF / T_OTHER): 0.11743037191883018
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.11139998435974122 s, LOG_10(T_REF / T_OTHER): -0.3225288004516723
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.423244309425354 s, LOG_10(T_REF / T_OTHER): -0.9022347982623156
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
48/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.08908474445343018 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8800740718841553 s, LOG_10(T_REF / T_OTHER): -0.9947158877788326
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.0509653091430664 s, LOG_10(T_REF / T_OTHER): -1.5346339310188502
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5544242143630982 s, LOG_10(T_REF / T_OTHER): -0.794038851213064
COMPARISON AGAINST cv2 -> T_OTHER: 2.3432740688323976 s, LOG_10(T_REF / T_OTHER): -1.4200197480303773
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.15505876541137695 s, LOG_10(T_REF / T_OTHER): -0.24069298323778998
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.4236799955368042 s, LOG_10(T_REF / T_OTHER): -0.6772346203218359
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276844096183777 s, LOG_10(T_REF / T_OTHER): -1.4075299553799487
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
49/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.04266366958618164 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0015956640243530273 s, LOG_10(T_REF / T_OTHER): 1.4271167536429685
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.002788996696472168 s, LOG_10(T_REF / T_OTHER): 1.1846102073924587
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983352661132812 s, LOG_10(T_REF / T_OTHER): 1.853113606160932
COMPARISON AGAINST cv2 -> T_OTHER: 0.9614300489425659 s, LOG_10(T_REF / T_OTHER): -1.3528594843856714
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034766197204589844 s, LOG_10(T_REF / T_OTHER): 1.0889010179512948
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05202193260192871 s, LOG_10(T_REF / T_OTHER): -0.08612827484909444
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007889699935913087 s, LOG_10(T_REF / T_OTHER): 0.7329977209734427
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
50/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.04086782932281494 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004587030410766602 s, LOG_10(T_REF / T_OTHER): 0.9498499515634141
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01715395450592041 s, LOG_10(T_REF / T_OTHER): 0.37701731701066016
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002792549133300781 s, LOG_10(T_REF / T_OTHER): 1.1653807479422216
COMPARISON AGAINST cv2 -> T_OTHER: 1.0042174339294434 s, LOG_10(T_REF / T_OTHER): -1.3904461858056285
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004171228408813477 s, LOG_10(T_REF / T_OTHER): 0.9911175992936171
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.051961755752563475 s, LOG_10(T_REF / T_OTHER): -0.10430224620608698
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015804314613342287 s, LOG_10(T_REF / T_OTHER): 0.4126059044502918
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
51/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.04174959659576416 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.017852306365966797 s, LOG_10(T_REF / T_OTHER): 0.36895795226060374
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08188230991363525 s, LOG_10(T_REF / T_OTHER): -0.2925378022007573
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011369705200195312 s, LOG_10(T_REF / T_OTHER): 0.5649030792685402
COMPARISON AGAINST cv2 -> T_OTHER: 1.0301629781723023 s, LOG_10(T_REF / T_OTHER): -1.39225365473896
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.007778716087341308 s, LOG_10(T_REF / T_OTHER): 0.7297443628676583
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05117001533508301 s, LOG_10(T_REF / T_OTHER): -0.08836326364297524
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0487396240234375 s, LOG_10(T_REF / T_OTHER): -0.06722989123961302
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
52/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.0452268123626709 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.06512608528137206 s, LOG_10(T_REF / T_OTHER): -0.15835899433236517
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.3489751577377319 s, LOG_10(T_REF / T_OTHER): -0.8873985329732648
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.04637598991394043 s, LOG_10(T_REF / T_OTHER): -0.010897213656353445
COMPARISON AGAINST cv2 -> T_OTHER: 1.241301989555359 s, LOG_10(T_REF / T_OTHER): -1.4384814722225359
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020583367347717284 s, LOG_10(T_REF / T_OTHER): 0.34187955436198875
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.05680017471313477 s, LOG_10(T_REF / T_OTHER): -0.09895369231671797
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17979371547698975 s, LOG_10(T_REF / T_OTHER): -0.599378528046583
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.05994799137115479 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2484830379486084 s, LOG_10(T_REF / T_OTHER): -0.6175221119677029
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.4320765256881713 s, LOG_10(T_REF / T_OTHER): -1.3781915898051968
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.17862253189086913 s, LOG_10(T_REF / T_OTHER): -0.474161604870399
COMPARISON AGAINST cv2 -> T_OTHER: 2.084748864173889 s, LOG_10(T_REF / T_OTHER): -1.5412791097688943
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07305071353912354 s, LOG_10(T_REF / T_OTHER): -0.0858498262343543
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.20900473594665528 s, LOG_10(T_REF / T_OTHER): -0.5423814910015332
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7807900428771972 s, LOG_10(T_REF / T_OTHER): -1.1147596301743692
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54/162 [impl: keras, kernel_size: 3, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.12047066688537597 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.2351130247116089 s, LOG_10(T_REF / T_OTHER): -1.0108253870753239
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.864434337615966 s, LOG_10(T_REF / T_OTHER): -1.6873448135199507
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.9876685380935669 s, LOG_10(T_REF / T_OTHER): -0.9137299052014052
COMPARISON AGAINST cv2 -> T_OTHER: 5.053505086898804 s, LOG_10(T_REF / T_OTHER): -1.6227113927436612
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.28021328449249266 s, LOG_10(T_REF / T_OTHER): -0.36660740623163773
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.8187213659286499 s, LOG_10(T_REF / T_OTHER): -0.832254809734054
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.225172829627991 s, LOG_10(T_REF / T_OTHER): -1.427671677984184
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
55/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.04103376865386963 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0010938167572021485 s, LOG_10(T_REF / T_OTHER): 1.57419683314215
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.000299072265625 s, LOG_10(T_REF / T_OTHER): 2.137365264862401
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.00019936561584472657 s, LOG_10(T_REF / T_OTHER): 2.313491146988368
COMPARISON AGAINST cv2 -> T_OTHER: 0.06562352180480957 s, LOG_10(T_REF / T_OTHER): -0.20391812827796454
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004429221153259277 s, LOG_10(T_REF / T_OTHER): 0.966814040225227
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008262324333190917 s, LOG_10(T_REF / T_OTHER): 0.6960391666188006
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005733203887939453 s, LOG_10(T_REF / T_OTHER): 0.8547440188819847
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
56/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.04162831306457519 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0030919551849365235 s, LOG_10(T_REF / T_OTHER): 1.1291556214111274
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0024933099746704103 s, LOG_10(T_REF / T_OTHER): 1.2226125375409844
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0010972023010253906 s, LOG_10(T_REF / T_OTHER): 1.579102102276548
COMPARISON AGAINST cv2 -> T_OTHER: 0.06951401233673096 s, LOG_10(T_REF / T_OTHER): -0.22268354463366544
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032561302185058595 s, LOG_10(T_REF / T_OTHER): 1.1066870472194072
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007635498046875 s, LOG_10(T_REF / T_OTHER): 0.736551441603903
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.005562925338745117 s, LOG_10(T_REF / T_OTHER): 0.8740855807842164
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
57/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.041726326942443846 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.012866640090942382 s, LOG_10(T_REF / T_OTHER): 0.5109450036777601
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.013867688179016114 s, LOG_10(T_REF / T_OTHER): 0.4784060888120126
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007380080223083496 s, LOG_10(T_REF / T_OTHER): 0.7523490738818069
COMPARISON AGAINST cv2 -> T_OTHER: 0.07200756072998046 s, LOG_10(T_REF / T_OTHER): -0.23696794275431537
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004002523422241211 s, LOG_10(T_REF / T_OTHER): 1.018076274573332
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.007634878158569336 s, LOG_10(T_REF / T_OTHER): 0.7376080458600486
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01212005615234375 s, LOG_10(T_REF / T_OTHER): 0.5369055246806635
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
58/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.04219849109649658 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.049268555641174314 s, LOG_10(T_REF / T_OTHER): -0.06727290862077387
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06402571201324463 s, LOG_10(T_REF / T_OTHER): -0.18105749479555763
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02692875862121582 s, LOG_10(T_REF / T_OTHER): 0.1950805885535628
COMPARISON AGAINST cv2 -> T_OTHER: 0.08886537551879883 s, LOG_10(T_REF / T_OTHER): -0.3234356583805033
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0067434549331665036 s, LOG_10(T_REF / T_OTHER): 0.7964144626081896
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.008130097389221191 s, LOG_10(T_REF / T_OTHER): 0.7152011740735287
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026231670379638673 s, LOG_10(T_REF / T_OTHER): 0.2064709755835677
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
59/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.046915435791015626 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20325231552124023 s, LOG_10(T_REF / T_OTHER): -0.636719747146362
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.27118217945098877 s, LOG_10(T_REF / T_OTHER): -0.7619453919896894
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.11349666118621826 s, LOG_10(T_REF / T_OTHER): -0.38366733097852235
COMPARISON AGAINST cv2 -> T_OTHER: 0.13025269508361817 s, LOG_10(T_REF / T_OTHER): -0.44347096335328157
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.016347885131835938 s, LOG_10(T_REF / T_OTHER): 0.4578541772953139
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02273256778717041 s, LOG_10(T_REF / T_OTHER): 0.31466725998040707
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.08937561511993408 s, LOG_10(T_REF / T_OTHER): -0.2799032890315223
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
60/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.06229929924011231 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9368864059448242 s, LOG_10(T_REF / T_OTHER): -1.1772037758386367
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.1104682207107544 s, LOG_10(T_REF / T_OTHER): -1.2510229728369358
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5659977674484253 s, LOG_10(T_REF / T_OTHER): -0.9583315565162667
COMPARISON AGAINST cv2 -> T_OTHER: 0.2925196409225464 s, LOG_10(T_REF / T_OTHER): -0.6716718700205917
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05759813785552979 s, LOG_10(T_REF / T_OTHER): 0.03407471868656619
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07755734920501708 s, LOG_10(T_REF / T_OTHER): -0.09513979549886391
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4033111810684204 s, LOG_10(T_REF / T_OTHER): -0.8111571005773339
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
61/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.04089019298553467 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0013962030410766602 s, LOG_10(T_REF / T_OTHER): 1.4666705806469849
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004997491836547851 s, LOG_10(T_REF / T_OTHER): 1.9128670668909007
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983829498291016 s, LOG_10(T_REF / T_OTHER): 1.8346399499006323
COMPARISON AGAINST cv2 -> T_OTHER: 0.12955596446990966 s, LOG_10(T_REF / T_OTHER): -0.5008382514816727
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003583836555480957 s, LOG_10(T_REF / T_OTHER): 1.057270965258114
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011510181427001952 s, LOG_10(T_REF / T_OTHER): 0.5505369910910524
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007579803466796875 s, LOG_10(T_REF / T_OTHER): 0.7319612150991662
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
62/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.04169631004333496 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004383707046508789 s, LOG_10(T_REF / T_OTHER): 0.9782560998477546
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.004285264015197754 s, LOG_10(T_REF / T_OTHER): 0.9881200393748502
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0028921127319335937 s, LOG_10(T_REF / T_OTHER): 1.1588824059918692
COMPARISON AGAINST cv2 -> T_OTHER: 0.13134870529174805 s, LOG_10(T_REF / T_OTHER): -0.49832817293937687
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034254789352416992 s, LOG_10(T_REF / T_OTHER): 1.0853763221515162
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011281633377075195 s, LOG_10(T_REF / T_OTHER): 0.5677256411406044
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007278347015380859 s, LOG_10(T_REF / T_OTHER): 0.7580648654118557
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
63/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.04107820987701416 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046616554260255 s, LOG_10(T_REF / T_OTHER): 0.3337936707930333
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025329852104187013 s, LOG_10(T_REF / T_OTHER): 0.20997885543401118
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013663744926452637 s, LOG_10(T_REF / T_OTHER): 0.4780417634248066
COMPARISON AGAINST cv2 -> T_OTHER: 0.14501516819000243 s, LOG_10(T_REF / T_OTHER): -0.5478019211504226
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004773473739624024 s, LOG_10(T_REF / T_OTHER): 0.9347769717581705
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011569452285766602 s, LOG_10(T_REF / T_OTHER): 0.5502987101520979
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014359045028686523 s, LOG_10(T_REF / T_OTHER): 0.45648595205970116
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
64/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.04318902492523193 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07920141220092773 s, LOG_10(T_REF / T_OTHER): -0.2633595262167461
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11679494380950928 s, LOG_10(T_REF / T_OTHER): -0.4320506429340417
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05305812358856201 s, LOG_10(T_REF / T_OTHER): -0.08937848787398656
COMPARISON AGAINST cv2 -> T_OTHER: 0.1762357234954834 s, LOG_10(T_REF / T_OTHER): -0.6107205466280681
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009874796867370606 s, LOG_10(T_REF / T_OTHER): 0.6408452285318461
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012361407279968262 s, LOG_10(T_REF / T_OTHER): 0.5433054834638064
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.039193367958068846 s, LOG_10(T_REF / T_OTHER): 0.0421608143264751
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
65/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.05068469047546387 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2869332551956177 s, LOG_10(T_REF / T_OTHER): -0.7529040866743875
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4937927722930908 s, LOG_10(T_REF / T_OTHER): -0.9886679301583571
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21006526947021484 s, LOG_10(T_REF / T_OTHER): -0.6174774568659783
COMPARISON AGAINST cv2 -> T_OTHER: 0.26948838233947753 s, LOG_10(T_REF / T_OTHER): -0.7256632488037008
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02691760063171387 s, LOG_10(T_REF / T_OTHER): 0.2748404533189754
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0390763521194458 s, LOG_10(T_REF / T_OTHER): 0.11296278425769406
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1424945592880249 s, LOG_10(T_REF / T_OTHER): -0.4489214838146474
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
66/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.0778057336807251 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4708177328109742 s, LOG_10(T_REF / T_OTHER): -1.276547254956477
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0489367723464964 s, LOG_10(T_REF / T_OTHER): -1.4205169545047294
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0861106395721436 s, LOG_10(T_REF / T_OTHER): -1.1448624657651447
COMPARISON AGAINST cv2 -> T_OTHER: 0.634440016746521 s, LOG_10(T_REF / T_OTHER): -0.911378965603352
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10199403762817383 s, LOG_10(T_REF / T_OTHER): -0.11756318218559168
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.14382457733154297 s, LOG_10(T_REF / T_OTHER): -0.2668215040915706
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5773276805877685 s, LOG_10(T_REF / T_OTHER): -0.8704107783943207
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
67/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.0416433572769165 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019933700561523436 s, LOG_10(T_REF / T_OTHER): 1.3199578048374285
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0006969928741455078 s, LOG_10(T_REF / T_OTHER): 1.7763173969421182
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.001196575164794922 s, LOG_10(T_REF / T_OTHER): 1.5416057502478304
COMPARISON AGAINST cv2 -> T_OTHER: 0.2495365858078003 s, LOG_10(T_REF / T_OTHER): -0.7775884937542634
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003358769416809082 s, LOG_10(T_REF / T_OTHER): 1.09336554488682
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01954479217529297 s, LOG_10(T_REF / T_OTHER): 0.328514678131064
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008927321434020996 s, LOG_10(T_REF / T_OTHER): 0.66882456285009
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
68/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.04122486114501953 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.006878972053527832 s, LOG_10(T_REF / T_OTHER): 0.7776356564226348
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009076905250549317 s, LOG_10(T_REF / T_OTHER): 0.6572213994358319
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005385780334472656 s, LOG_10(T_REF / T_OTHER): 0.8839105652995384
COMPARISON AGAINST cv2 -> T_OTHER: 0.25372393131256105 s, LOG_10(T_REF / T_OTHER): -0.7892022304177766
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003834056854248047 s, LOG_10(T_REF / T_OTHER): 1.0315006528820245
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01900901794433594 s, LOG_10(T_REF / T_OTHER): 0.3361995208592057
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008769488334655762 s, LOG_10(T_REF / T_OTHER): 0.6721849467926888
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
69/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.04265873432159424 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.039297175407409665 s, LOG_10(T_REF / T_OTHER): 0.03564663046422764
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04979894161224365 s, LOG_10(T_REF / T_OTHER): -0.06721214685172665
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03001844882965088 s, LOG_10(T_REF / T_OTHER): 0.1526197190537763
COMPARISON AGAINST cv2 -> T_OTHER: 0.27357146739959715 s, LOG_10(T_REF / T_OTHER): -0.807062834079249
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006811308860778809 s, LOG_10(T_REF / T_OTHER): 0.796777391912273
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019583725929260255 s, LOG_10(T_REF / T_OTHER): 0.3381126432163844
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.019995975494384765 s, LOG_10(T_REF / T_OTHER): 0.3290653700097211
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
70/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.045244789123535155 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16645944118499756 s, LOG_10(T_REF / T_OTHER): -0.5657398639464989
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.22978649139404297 s, LOG_10(T_REF / T_OTHER): -0.7057559255557428
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13065063953399658 s, LOG_10(T_REF / T_OTHER): -0.4605429715386037
COMPARISON AGAINST cv2 -> T_OTHER: 0.33879709243774414 s, LOG_10(T_REF / T_OTHER): -0.8743711061537348
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01489572525024414 s, LOG_10(T_REF / T_OTHER): 0.48250691519378003
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.020839619636535644 s, LOG_10(T_REF / T_OTHER): 0.33667878041501886
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.064438796043396 s, LOG_10(T_REF / T_OTHER): -0.1535788491867659
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
71/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.05799689292907715 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.8276319980621338 s, LOG_10(T_REF / T_OTHER): -1.1544325453896978
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9820184946060181 s, LOG_10(T_REF / T_OTHER): -1.2287149393406969
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5186176776885987 s, LOG_10(T_REF / T_OTHER): -0.9514425884171583
COMPARISON AGAINST cv2 -> T_OTHER: 0.5875432968139649 s, LOG_10(T_REF / T_OTHER): -1.0056351481340429
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05043525695800781 s, LOG_10(T_REF / T_OTHER): 0.06067048988517482
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07153940200805664 s, LOG_10(T_REF / T_OTHER): -0.09114057789390602
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.24889836311340333 s, LOG_10(T_REF / T_OTHER): -0.6326173127663933
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
72/162 [impl: keras, kernel_size: 5, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.11051080226898194 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.085149621963501 s, LOG_10(T_REF / T_OTHER): -1.4458714993200827
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.990476870536804 s, LOG_10(T_REF / T_OTHER): -1.5576200661639557
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.265956401824951 s, LOG_10(T_REF / T_OTHER): -1.3118468178116875
COMPARISON AGAINST cv2 -> T_OTHER: 1.3824024200439453 s, LOG_10(T_REF / T_OTHER): -1.0972297536693703
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19092974662780762 s, LOG_10(T_REF / T_OTHER): -0.23746886448441187
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.27386233806610105 s, LOG_10(T_REF / T_OTHER): -0.39412757982708796
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2378748416900636 s, LOG_10(T_REF / T_OTHER): -1.0492720047715118
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
73/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.04076969623565674 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0012964487075805664 s, LOG_10(T_REF / T_OTHER): 1.497582136538369
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0005984306335449219 s, LOG_10(T_REF / T_OTHER): 1.8333236587761652
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000498652458190918 s, LOG_10(T_REF / T_OTHER): 1.9125395113405543
COMPARISON AGAINST cv2 -> T_OTHER: 0.1333463430404663 s, LOG_10(T_REF / T_OTHER): -0.5146436342216201
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003243160247802734 s, LOG_10(T_REF / T_OTHER): 1.0993690675202572
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012182998657226562 s, LOG_10(T_REF / T_OTHER): 0.5245832793065456
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007059526443481445 s, LOG_10(T_REF / T_OTHER): 0.7615619063089623
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
74/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.04202613830566406 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032935857772827147 s, LOG_10(T_REF / T_OTHER): 1.1058505068469802
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0047872066497802734 s, LOG_10(T_REF / T_OTHER): 0.9434373103076165
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962745666503905 s, LOG_10(T_REF / T_OTHER): 1.4785486580699165
COMPARISON AGAINST cv2 -> T_OTHER: 0.13793041706085205 s, LOG_10(T_REF / T_OTHER): -0.5161405639652414
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003211832046508789 s, LOG_10(T_REF / T_OTHER): 1.1167666583998443
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011665964126586914 s, LOG_10(T_REF / T_OTHER): 0.5565988488040208
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007017874717712402 s, LOG_10(T_REF / T_OTHER): 0.7773138744494533
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
75/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.04178318977355957 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.013663601875305176 s, LOG_10(T_REF / T_OTHER): 0.4854363921905285
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.027426671981811524 s, LOG_10(T_REF / T_OTHER): 0.18282847894980261
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006382942199707031 s, LOG_10(T_REF / T_OTHER): 0.8159806796929461
COMPARISON AGAINST cv2 -> T_OTHER: 0.14800457954406737 s, LOG_10(T_REF / T_OTHER): -0.5492735620858922
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004537105560302734 s, LOG_10(T_REF / T_OTHER): 0.9642227077373882
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.011591172218322754 s, LOG_10(T_REF / T_OTHER): 0.5568742329160227
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014373779296875 s, LOG_10(T_REF / T_OTHER): 0.4634306192476441
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
76/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.043001437187194826 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.053014826774597165 s, LOG_10(T_REF / T_OTHER): -0.09091437594955748
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.12706077098846436 s, LOG_10(T_REF / T_OTHER): -0.47052851550720676
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.02932159900665283 s, LOG_10(T_REF / T_OTHER): 0.16629532057121665
COMPARISON AGAINST cv2 -> T_OTHER: 0.17463600635528564 s, LOG_10(T_REF / T_OTHER): -0.6086508204547724
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009853076934814454 s, LOG_10(T_REF / T_OTHER): 0.6399110968812712
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.012268805503845214 s, LOG_10(T_REF / T_OTHER): 0.5446806890546658
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04119749069213867 s, LOG_10(T_REF / T_OTHER): 0.01861220645152027
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
77/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.0478299617767334 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.21517560482025147 s, LOG_10(T_REF / T_OTHER): -0.6530929985576546
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5300866842269898 s, LOG_10(T_REF / T_OTHER): -1.044646861083649
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.12307093143463135 s, LOG_10(T_REF / T_OTHER): -0.41045545366371966
COMPARISON AGAINST cv2 -> T_OTHER: 0.25452170372009275 s, LOG_10(T_REF / T_OTHER): -0.7260247878528501
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.028560066223144533 s, LOG_10(T_REF / T_OTHER): 0.22394082368820376
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03904266357421875 s, LOG_10(T_REF / T_OTHER): 0.08816059530002966
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15132710933685303 s, LOG_10(T_REF / T_OTHER): -0.5002167024178192
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
78/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.07007174491882324 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9768812656402588 s, LOG_10(T_REF / T_OTHER): -1.1442988485218646
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.172295260429382 s, LOG_10(T_REF / T_OTHER): -1.4913759222649312
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.6424853801727295 s, LOG_10(T_REF / T_OTHER): -0.9623203173145922
COMPARISON AGAINST cv2 -> T_OTHER: 0.5856328725814819 s, LOG_10(T_REF / T_OTHER): -0.9220825140503099
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.10747473239898682 s, LOG_10(T_REF / T_OTHER): -0.185763440060595
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.1455214023590088 s, LOG_10(T_REF / T_OTHER): -0.31738393889848715
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7673923969268799 s, LOG_10(T_REF / T_OTHER): -1.0394745596545234
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
79/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.041496109962463376 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014949321746826171 s, LOG_10(T_REF / T_OTHER): 1.4433858967483981
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007967233657836914 s, LOG_10(T_REF / T_OTHER): 1.7166998317862148
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0006980657577514649 s, LOG_10(T_REF / T_OTHER): 1.7741110507804503
COMPARISON AGAINST cv2 -> T_OTHER: 0.2533233642578125 s, LOG_10(T_REF / T_OTHER): -0.7856678611919747
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035053491592407227 s, LOG_10(T_REF / T_OTHER): 1.0732761023776232
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01928074359893799 s, LOG_10(T_REF / T_OTHER): 0.33288360655281785
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.00873563289642334 s, LOG_10(T_REF / T_OTHER): 0.6767130107590368
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
80/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.043729519844055174 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004886913299560547 s, LOG_10(T_REF / T_OTHER): 0.951740074633759
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.008674263954162598 s, LOG_10(T_REF / T_OTHER): 0.7025420753496779
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002692556381225586 s, LOG_10(T_REF / T_OTHER): 1.2106099027141488
COMPARISON AGAINST cv2 -> T_OTHER: 0.26299681663513186 s, LOG_10(T_REF / T_OTHER): -0.7791757829764303
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004144096374511718 s, LOG_10(T_REF / T_OTHER): 1.0233448620149697
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01884467601776123 s, LOG_10(T_REF / T_OTHER): 0.3655860334060719
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008338284492492676 s, LOG_10(T_REF / T_OTHER): 0.7196980000981522
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
81/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.04250557422637939 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.019046545028686523 s, LOG_10(T_REF / T_OTHER): 0.3486296798495135
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05086441040039062 s, LOG_10(T_REF / T_OTHER): -0.07796812707040124
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566423416137696 s, LOG_10(T_REF / T_OTHER): 0.5292341987763786
COMPARISON AGAINST cv2 -> T_OTHER: 0.27696325778961184 s, LOG_10(T_REF / T_OTHER): -0.813976271337672
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0064914941787719725 s, LOG_10(T_REF / T_OTHER): 0.8161012156482892
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019530892372131348 s, LOG_10(T_REF / T_OTHER): 0.33772380084520903
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020532727241516113 s, LOG_10(T_REF / T_OTHER): 0.3159992496409446
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
82/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.0457183837890625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0752027988433838 s, LOG_10(T_REF / T_OTHER): -0.2161431350933396
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.23387856483459474 s, LOG_10(T_REF / T_OTHER): -0.7088995511247498
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05545179843902588 s, LOG_10(T_REF / T_OTHER): -0.0838247669011517
COMPARISON AGAINST cv2 -> T_OTHER: 0.3403996467590332 s, LOG_10(T_REF / T_OTHER): -0.8718982316778203
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.014998841285705566 s, LOG_10(T_REF / T_OTHER): 0.4840331595121404
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02074708938598633 s, LOG_10(T_REF / T_OTHER): 0.343133691009846
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0622725248336792 s, LOG_10(T_REF / T_OTHER): -0.13420560545036445
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
83/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.05608227252960205 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.290614652633667 s, LOG_10(T_REF / T_OTHER): -0.7144919038915363
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9719075441360474 s, LOG_10(T_REF / T_OTHER): -1.2387993497016192
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.22120974063873292 s, LOG_10(T_REF / T_OTHER): -0.5959786430435513
COMPARISON AGAINST cv2 -> T_OTHER: 0.5371723651885987 s, LOG_10(T_REF / T_OTHER): -0.9812880587931742
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05086405277252197 s, LOG_10(T_REF / T_OTHER): 0.04241464235491033
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07183670997619629 s, LOG_10(T_REF / T_OTHER): -0.10752083050147737
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2364809036254883 s, LOG_10(T_REF / T_OTHER): -0.6249704727003247
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
84/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.08512670993804931 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4503830194473266 s, LOG_10(T_REF / T_OTHER): -1.2314168578860072
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.030841994285583 s, LOG_10(T_REF / T_OTHER): -1.675329925827049
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.174867534637451 s, LOG_10(T_REF / T_OTHER): -1.1399230543464454
COMPARISON AGAINST cv2 -> T_OTHER: 1.2805904626846314 s, LOG_10(T_REF / T_OTHER): -1.1773444143814262
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.19175682067871094 s, LOG_10(T_REF / T_OTHER): -0.35268497182754577
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2725998878479004 s, LOG_10(T_REF / T_OTHER): -0.5054598241521338
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640650987625122 s, LOG_10(T_REF / T_OTHER): -1.0969023499354755
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
85/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.04142177104949951 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002090859413146973 s, LOG_10(T_REF / T_OTHER): 1.2969038314969465
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 1.472265252296073
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0013962507247924805 s, LOG_10(T_REF / T_OTHER): 1.472265252296073
COMPARISON AGAINST cv2 -> T_OTHER: 0.49687824249267576 s, LOG_10(T_REF / T_OTHER): -1.07902131623615
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036658048629760742 s, LOG_10(T_REF / T_OTHER): 1.0530593208536576
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03394782543182373 s, LOG_10(T_REF / T_OTHER): 0.08641670360173759
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01156456470489502 s, LOG_10(T_REF / T_OTHER): 0.5540993734753005
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
86/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.042298746109008786 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007181978225708008 s, LOG_10(T_REF / T_OTHER): 0.7700834093742751
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.016855072975158692 s, LOG_10(T_REF / T_OTHER): 0.3995968563062193
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006483054161071778 s, LOG_10(T_REF / T_OTHER): 0.814547843650261
COMPARISON AGAINST cv2 -> T_OTHER: 0.5035544872283936 s, LOG_10(T_REF / T_OTHER): -1.075718976891842
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004147529602050781 s, LOG_10(T_REF / T_OTHER): 1.0085379990883925
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03357143402099609 s, LOG_10(T_REF / T_OTHER): 0.10035760071867464
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011610269546508789 s, LOG_10(T_REF / T_OTHER): 0.5614851909446179
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
87/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.0413968563079834 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.040592002868652347 s, LOG_10(T_REF / T_OTHER): 0.008526881326013657
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.09853692054748535 s, LOG_10(T_REF / T_OTHER): -0.37663162378720116
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03370990753173828 s, LOG_10(T_REF / T_OTHER): 0.08920980066816311
COMPARISON AGAINST cv2 -> T_OTHER: 0.5571127653121948 s, LOG_10(T_REF / T_OTHER): -1.1289757478135773
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008974075317382812 s, LOG_10(T_REF / T_OTHER): 0.6639776517477941
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034559202194213864 s, LOG_10(T_REF / T_OTHER): 0.0784036537439484
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02943093776702881 s, LOG_10(T_REF / T_OTHER): 0.14816326151659712
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
88/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.04631564617156982 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.1633227586746216 s, LOG_10(T_REF / T_OTHER): -0.5473189794759846
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45159306526184084 s, LOG_10(T_REF / T_OTHER): -0.9890195367277193
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1295536518096924 s, LOG_10(T_REF / T_OTHER): -0.44672193174598845
COMPARISON AGAINST cv2 -> T_OTHER: 0.6969434261322022 s, LOG_10(T_REF / T_OTHER): -1.17746979851683
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024640226364135744 s, LOG_10(T_REF / T_OTHER): 0.27408303420318125
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03628835678100586 s, LOG_10(T_REF / T_OTHER): 0.10596042467026712
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10401957035064698 s, LOG_10(T_REF / T_OTHER): -0.3513873281255216
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
89/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.06026105880737305 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.733452033996582 s, LOG_10(T_REF / T_OTHER): -1.0853349591840868
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.9601884365081788 s, LOG_10(T_REF / T_OTHER): -1.5122610647814403
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5282912492752075 s, LOG_10(T_REF / T_OTHER): -0.9428366588968249
COMPARISON AGAINST cv2 -> T_OTHER: 1.1474501371383667 s, LOG_10(T_REF / T_OTHER): -1.2796970640885408
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09157330989837646 s, LOG_10(T_REF / T_OTHER): -0.18173215384818014
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13539564609527588 s, LOG_10(T_REF / T_OTHER): -0.35156794090125826
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40858242511749265 s, LOG_10(T_REF / T_OTHER): -0.8312429237231738
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
90/162 [impl: keras, kernel_size: 5, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.11589789390563965 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0606773614883425 s, LOG_10(T_REF / T_OTHER): -1.421742007209452
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.194438576698303 s, LOG_10(T_REF / T_OTHER): -1.849443660184049
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.336810898780823 s, LOG_10(T_REF / T_OTHER): -1.304548025456028
COMPARISON AGAINST cv2 -> T_OTHER: 2.7679947137832643 s, LOG_10(T_REF / T_OTHER): -1.3780897123414335
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3618311405181885 s, LOG_10(T_REF / T_OTHER): -0.4944303970679402
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5272958517074585 s, LOG_10(T_REF / T_OTHER): -0.6579788106599294
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.9781903266906737 s, LOG_10(T_REF / T_OTHER): -1.2321925297969558
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
91/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.04114830493927002 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014959096908569336 s, LOG_10(T_REF / T_OTHER): 1.4394465739668698
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 1.6155136073990994
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0003989458084106445 s, LOG_10(T_REF / T_OTHER): 2.013438043169623
COMPARISON AGAINST cv2 -> T_OTHER: 0.2727760553359985 s, LOG_10(T_REF / T_OTHER): -0.8214542950632655
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004439997673034668 s, LOG_10(T_REF / T_OTHER): 0.9669692071121195
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.01931033134460449 s, LOG_10(T_REF / T_OTHER): 0.32856222374521443
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009109306335449218 s, LOG_10(T_REF / T_OTHER): 0.6548666424742994
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
92/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.0409853458404541 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00368647575378418 s, LOG_10(T_REF / T_OTHER): 1.0460172222171296
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.009175372123718262 s, LOG_10(T_REF / T_OTHER): 0.6500049172045401
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 1.358522371058991
COMPARISON AGAINST cv2 -> T_OTHER: 0.2721724271774292 s, LOG_10(T_REF / T_OTHER): -0.8222155221835958
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034047365188598633 s, LOG_10(T_REF / T_OTHER): 1.080545095123859
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019216632843017577 s, LOG_10(T_REF / T_OTHER): 0.32895131157988
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008843302726745605 s, LOG_10(T_REF / T_OTHER): 0.6660141119034961
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
93/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.04163327217102051 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015358996391296387 s, LOG_10(T_REF / T_OTHER): 0.4330777072904606
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.05445318222045899 s, LOG_10(T_REF / T_OTHER): -0.11658271917075959
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007978582382202148 s, LOG_10(T_REF / T_OTHER): 0.7175148119729866
COMPARISON AGAINST cv2 -> T_OTHER: 0.2992008447647095 s, LOG_10(T_REF / T_OTHER): -0.8565222697380329
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006153392791748047 s, LOG_10(T_REF / T_OTHER): 0.8303259071950341
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.019852590560913087 s, LOG_10(T_REF / T_OTHER): 0.3216233598401765
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.022071456909179686 s, LOG_10(T_REF / T_OTHER): 0.27560954430295337
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
94/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.0433488130569458 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.05435435771942139 s, LOG_10(T_REF / T_OTHER): -0.09825715778433788
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.25441999435424806 s, LOG_10(T_REF / T_OTHER): -0.7685740281794121
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03341064453125 s, LOG_10(T_REF / T_OTHER): 0.11309235668724096
COMPARISON AGAINST cv2 -> T_OTHER: 0.3579447031021118 s, LOG_10(T_REF / T_OTHER): -0.9168387296070178
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015169048309326172 s, LOG_10(T_REF / T_OTHER): 0.45601887601858204
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02060084342956543 s, LOG_10(T_REF / T_OTHER): 0.3230922090621029
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0712883472442627 s, LOG_10(T_REF / T_OTHER): -0.21604133564004235
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
95/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.051208877563476564 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20866847038269043 s, LOG_10(T_REF / T_OTHER): -0.6101115757887632
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.0643614053726196 s, LOG_10(T_REF / T_OTHER): -1.3177438615566206
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.13882944583892823 s, LOG_10(T_REF / T_OTHER): -0.43313633337342455
COMPARISON AGAINST cv2 -> T_OTHER: 0.5226030349731445 s, LOG_10(T_REF / T_OTHER): -1.0088266707971796
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.05286388397216797 s, LOG_10(T_REF / T_OTHER): -0.013813811367776069
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.07319273948669433 s, LOG_10(T_REF / T_OTHER): -0.15512274567728138
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.2774417638778687 s, LOG_10(T_REF / T_OTHER): -0.7338265801674744
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
96/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.07876739501953126 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.9983243465423584 s, LOG_10(T_REF / T_OTHER): -1.1029251797572077
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.391453838348388 s, LOG_10(T_REF / T_OTHER): -1.7462618391367954
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.726260495185852 s, LOG_10(T_REF / T_OTHER): -0.9647459386291458
COMPARISON AGAINST cv2 -> T_OTHER: 1.1794639110565186 s, LOG_10(T_REF / T_OTHER): -1.1753381741889188
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.20421156883239747 s, LOG_10(T_REF / T_OTHER): -0.4137338589541447
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.281569766998291 s, LOG_10(T_REF / T_OTHER): -0.5532395386534092
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7923971652984618 s, LOG_10(T_REF / T_OTHER): -1.3570877655972484
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
97/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.0414625883102417 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0018951892852783203 s, LOG_10(T_REF / T_OTHER): 1.3400038171465103
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015956878662109375 s, LOG_10(T_REF / T_OTHER): 1.4147084668936818
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.000797891616821289 s, LOG_10(T_REF / T_OTHER): 1.7157125074115682
COMPARISON AGAINST cv2 -> T_OTHER: 0.5166252851486206 s, LOG_10(T_REF / T_OTHER): -1.095519248473745
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0032922506332397463 s, LOG_10(T_REF / T_OTHER): 1.1001635196501975
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0344806432723999 s, LOG_10(T_REF / T_OTHER): 0.08008105007740995
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011920571327209473 s, LOG_10(T_REF / T_OTHER): 0.5413593388241116
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
98/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.0722811222076416 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005082416534423828 s, LOG_10(T_REF / T_OTHER): 1.1529546314202572
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.01755208969116211 s, LOG_10(T_REF / T_OTHER): 0.6146960571420402
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0034905672073364258 s, LOG_10(T_REF / T_OTHER): 1.3161288822994281
COMPARISON AGAINST cv2 -> T_OTHER: 0.5395621299743653 s, LOG_10(T_REF / T_OTHER): -0.8730165737983204
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0041628599166870115 s, LOG_10(T_REF / T_OTHER): 1.2396330898203898
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.03409762382507324 s, LOG_10(T_REF / T_OTHER): 0.32630077143128206
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011647772789001466 s, LOG_10(T_REF / T_OTHER): 0.7927819962751215
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
99/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.041480493545532224 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.020644307136535645 s, LOG_10(T_REF / T_OTHER): 0.3030436034145353
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.10012938976287841 s, LOG_10(T_REF / T_OTHER): -0.38271765427730503
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015159511566162109 s, LOG_10(T_REF / T_OTHER): 0.4371587063802958
COMPARISON AGAINST cv2 -> T_OTHER: 0.5672824621200562 s, LOG_10(T_REF / T_OTHER): -1.1359554422013478
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008366012573242187 s, LOG_10(T_REF / T_OTHER): 0.69532540215038
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.034693026542663576 s, LOG_10(T_REF / T_OTHER): 0.07760172671289078
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030884289741516115 s, LOG_10(T_REF / T_OTHER): 0.1281062969517159
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
100/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.04411845207214356 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08041179180145264 s, LOG_10(T_REF / T_OTHER): -0.260699473030615
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.4602695941925049 s, LOG_10(T_REF / T_OTHER): -1.0183920194735645
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.061336088180541995 s, LOG_10(T_REF / T_OTHER): -0.1430958081182538
COMPARISON AGAINST cv2 -> T_OTHER: 0.6990325689315796 s, LOG_10(T_REF / T_OTHER): -1.1998771441219709
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02506716251373291 s, LOG_10(T_REF / T_OTHER): 0.24551508987499251
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.036400341987609865 s, LOG_10(T_REF / T_OTHER): 0.08351480255769367
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10699446201324463 s, LOG_10(T_REF / T_OTHER): -0.38474103287480355
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
101/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.05369467735290527 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3224369525909424 s, LOG_10(T_REF / T_OTHER): -0.7785135708249663
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.993774914741516 s, LOG_10(T_REF / T_OTHER): -1.5697448904137612
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.2298107147216797 s, LOG_10(T_REF / T_OTHER): -0.6314390363403712
COMPARISON AGAINST cv2 -> T_OTHER: 1.0927946090698242 s, LOG_10(T_REF / T_OTHER): -1.3086073068180284
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09275925159454346 s, LOG_10(T_REF / T_OTHER): -0.23742599889996896
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.13653719425201416 s, LOG_10(T_REF / T_OTHER): -0.4053197370655962
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.4236691236495972 s, LOG_10(T_REF / T_OTHER): -0.8970955773634468
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
102/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.09498484134674072 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.7038455963134767 s, LOG_10(T_REF / T_OTHER): -1.2537759344824775
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.266463208198548 s, LOG_10(T_REF / T_OTHER): -1.9396654354978016
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3369995832443238 s, LOG_10(T_REF / T_OTHER): -1.148476970228348
COMPARISON AGAINST cv2 -> T_OTHER: 2.6031574249267577 s, LOG_10(T_REF / T_OTHER): -1.4378461310324093
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3697237968444824 s, LOG_10(T_REF / T_OTHER): -0.5902231026747771
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.5317925930023193 s, LOG_10(T_REF / T_OTHER): -0.7480879823687258
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.2772167682647706 s, LOG_10(T_REF / T_OTHER): -1.3797500714148399
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
103/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.04089739322662354 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0029951095581054687 s, LOG_10(T_REF / T_OTHER): 1.1352829141675824
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028922319412231444 s, LOG_10(T_REF / T_OTHER): 1.1504625091730607
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0017952203750610351 s, LOG_10(T_REF / T_OTHER): 1.3575778585608655
COMPARISON AGAINST cv2 -> T_OTHER: 1.0107883930206298 s, LOG_10(T_REF / T_OTHER): -1.3929646189913207
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0034888029098510743 s, LOG_10(T_REF / T_OTHER): 1.069019191349596
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06340668201446534 s, LOG_10(T_REF / T_OTHER): -0.190439400500986
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016372537612915038 s, LOG_10(T_REF / T_OTHER): 0.39757963042605593
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
104/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.04115939140319824 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01026899814605713 s, LOG_10(T_REF / T_OTHER): 0.6029408690605597
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.04128842353820801 s, LOG_10(T_REF / T_OTHER): -0.00135935658242975
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.007081127166748047 s, LOG_10(T_REF / T_OTHER): 0.7643665507573432
COMPARISON AGAINST cv2 -> T_OTHER: 1.021091365814209 s, LOG_10(T_REF / T_OTHER): -1.3945956593713347
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0054269075393676754 s, LOG_10(T_REF / T_OTHER): 0.8799165221368427
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06338746547698974 s, LOG_10(T_REF / T_OTHER): -0.1875344425126564
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.016149067878723146 s, LOG_10(T_REF / T_OTHER): 0.40632148451991507
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
105/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.04155557155609131 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.04618294239044189 s, LOG_10(T_REF / T_OTHER): -0.04585233908936223
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.28024744987487793 s, LOG_10(T_REF / T_OTHER): -0.8289124094197966
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035505151748657225 s, LOG_10(T_REF / T_OTHER): 0.0683378868227836
COMPARISON AGAINST cv2 -> T_OTHER: 1.0948039531707763 s, LOG_10(T_REF / T_OTHER): -1.420707096930613
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.013108396530151367 s, LOG_10(T_REF / T_OTHER): 0.5010796896262754
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06453421115875244 s, LOG_10(T_REF / T_OTHER): -0.1911607457938751
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.05008590221405029 s, LOG_10(T_REF / T_OTHER): -0.08108624129005645
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
106/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.046794795989990236 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.20495026111602782 s, LOG_10(T_REF / T_OTHER): -0.6414509177295017
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.382733130455017 s, LOG_10(T_REF / T_OTHER): -1.4705408104833295
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.14142284393310547 s, LOG_10(T_REF / T_OTHER): -0.48032200817681203
COMPARISON AGAINST cv2 -> T_OTHER: 1.3611986637115479 s, LOG_10(T_REF / T_OTHER): -1.4637239558427264
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.044251203536987305 s, LOG_10(T_REF / T_OTHER): 0.024272471169774427
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.06842541694641113 s, LOG_10(T_REF / T_OTHER): -0.16501989420465565
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.17999639511108398 s, LOG_10(T_REF / T_OTHER): -0.585066249096404
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
107/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.06151328086853027 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7819811105728149 s, LOG_10(T_REF / T_OTHER): -1.104227371284295
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.957270336151123 s, LOG_10(T_REF / T_OTHER): -1.9860784173363575
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.5493331909179687 s, LOG_10(T_REF / T_OTHER): -0.9508669489050003
COMPARISON AGAINST cv2 -> T_OTHER: 2.80892128944397 s, LOG_10(T_REF / T_OTHER): -1.6595706785873177
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.1748563528060913 s, LOG_10(T_REF / T_OTHER): -0.45371252438791665
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.2613388538360596 s, LOG_10(T_REF / T_OTHER): -0.6282350909213417
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7809805154800415 s, LOG_10(T_REF / T_OTHER): -1.1036713077450064
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
108/162 [impl: keras, kernel_size: 5, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.12612574100494384 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.082359766960144 s, LOG_10(T_REF / T_OTHER): -1.3880795965488932
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 25.444506907463072 s, LOG_10(T_REF / T_OTHER): -2.3047903082510452
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.410863256454468 s, LOG_10(T_REF / T_OTHER): -1.28136884721602
COMPARISON AGAINST cv2 -> T_OTHER: 5.603026032447815 s, LOG_10(T_REF / T_OTHER): -1.6476189094771856
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.7011970281600952 s, LOG_10(T_REF / T_OTHER): -0.7450363359938936
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.0315660238265991 s, LOG_10(T_REF / T_OTHER): -0.9126932987732739
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.226966691017151 s, LOG_10(T_REF / T_OTHER): -1.4079907518197072
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
109/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 2]
T_REF: 0.04019250869750977 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00139617919921875 s, LOG_10(T_REF / T_OTHER): 1.4592039509722876
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.00029921531677246094 s, LOG_10(T_REF / T_OTHER): 2.128161293205566
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0004987478256225586 s, LOG_10(T_REF / T_OTHER): 1.9062640990980422
COMPARISON AGAINST cv2 -> T_OTHER: 0.07500002384185792 s, LOG_10(T_REF / T_OTHER): -0.27091628703513915
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003199315071105957 s, LOG_10(T_REF / T_OTHER): 1.099088102557013
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009465861320495605 s, LOG_10(T_REF / T_OTHER): 0.6279849768633163
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.006509709358215332 s, LOG_10(T_REF / T_OTHER): 0.7905835155459294
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
110/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 4]
T_REF: 0.04142332077026367 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004488015174865722 s, LOG_10(T_REF / T_OTHER): 0.9651905952155057
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.003091716766357422 s, LOG_10(T_REF / T_OTHER): 1.1270452107568572
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027925252914428713 s, LOG_10(T_REF / T_OTHER): 1.1712477967622679
COMPARISON AGAINST cv2 -> T_OTHER: 0.07669880390167236 s, LOG_10(T_REF / T_OTHER): -0.267543679388356
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0030924320220947266 s, LOG_10(T_REF / T_OTHER): 1.126944750165797
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009287023544311523 s, LOG_10(T_REF / T_OTHER): 0.6493683653357545
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.010583972930908203 s, LOG_10(T_REF / T_OTHER): 0.5925961914526267
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
111/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 8]
T_REF: 0.04111857414245605 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01874725818634033 s, LOG_10(T_REF / T_OTHER): 0.3411002858263919
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.022140765190124513 s, LOG_10(T_REF / T_OTHER): 0.2688454202144914
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.011968040466308593 s, LOG_10(T_REF / T_OTHER): 0.5360149973791295
COMPARISON AGAINST cv2 -> T_OTHER: 0.08258106708526611 s, LOG_10(T_REF / T_OTHER): -0.3028424440473376
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004896402359008789 s, LOG_10(T_REF / T_OTHER): 0.9241609478377009
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.00898892879486084 s, LOG_10(T_REF / T_OTHER): 0.6603301061280737
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01088564395904541 s, LOG_10(T_REF / T_OTHER): 0.577183920761158
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
112/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 16]
T_REF: 0.042056488990783694 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07441482543945313 s, LOG_10(T_REF / T_OTHER): -0.24782645375375997
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.11449406147003174 s, LOG_10(T_REF / T_OTHER): -0.43494994787447316
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05116326808929443 s, LOG_10(T_REF / T_OTHER): -0.08512526397286815
COMPARISON AGAINST cv2 -> T_OTHER: 0.10172810554504394 s, LOG_10(T_REF / T_OTHER): -0.38360794324302677
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.009366273880004883 s, LOG_10(T_REF / T_OTHER): 0.652266160708196
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.009364604949951172 s, LOG_10(T_REF / T_OTHER): 0.6523435523908295
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.026247739791870117 s, LOG_10(T_REF / T_OTHER): 0.20474110157975486
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
113/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 32]
T_REF: 0.04664206504821777 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.28513882160186765 s, LOG_10(T_REF / T_OTHER): -0.78627858016177
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.49787321090698244 s, LOG_10(T_REF / T_OTHER): -1.0283409885026877
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.20096299648284913 s, LOG_10(T_REF / T_OTHER): -0.6343383274125015
COMPARISON AGAINST cv2 -> T_OTHER: 0.15169434547424315 s, LOG_10(T_REF / T_OTHER): -0.5121916221280455
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.027256274223327638 s, LOG_10(T_REF / T_OTHER): 0.2333112803068492
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.028220224380493163 s, LOG_10(T_REF / T_OTHER): 0.21821730776241208
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0902172565460205 s, LOG_10(T_REF / T_OTHER): -0.28651184602861907
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
114/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 16, img_side: 64]
T_REF: 0.06531643867492676 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4217571020126343 s, LOG_10(T_REF / T_OTHER): -1.337802909172275
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0705713987350465 s, LOG_10(T_REF / T_OTHER): -1.5010677135490411
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.0688496828079224 s, LOG_10(T_REF / T_OTHER): -1.2138941355340522
COMPARISON AGAINST cv2 -> T_OTHER: 0.3445843458175659 s, LOG_10(T_REF / T_OTHER): -0.7222730467593772
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09956276416778564 s, LOG_10(T_REF / T_OTHER): -0.18307444829024552
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09850115776062011 s, LOG_10(T_REF / T_OTHER): -0.1784188379671111
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40508098602294923 s, LOG_10(T_REF / T_OTHER): -0.792519361280381
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
115/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 2]
T_REF: 0.04154903888702392 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0019946575164794924 s, LOG_10(T_REF / T_OTHER): 1.3186926442483995
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004985809326171875 s, LOG_10(T_REF / T_OTHER): 1.9208253165011224
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014957189559936523 s, LOG_10(T_REF / T_OTHER): 1.443710984408711
COMPARISON AGAINST cv2 -> T_OTHER: 0.14272527694702147 s, LOG_10(T_REF / T_OTHER): -0.535939912263352
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003871583938598633 s, LOG_10(T_REF / T_OTHER): 1.0306723026257598
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014096498489379883 s, LOG_10(T_REF / T_OTHER): 0.46944973299172343
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0075589179992675785 s, LOG_10(T_REF / T_OTHER): 0.7401013480808722
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
116/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 4]
T_REF: 0.04090774059295654 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081079483032227 s, LOG_10(T_REF / T_OTHER): 0.7617060240647716
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.005686044692993164 s, LOG_10(T_REF / T_OTHER): 0.8569952243319685
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.005684900283813477 s, LOG_10(T_REF / T_OTHER): 0.857082641973065
COMPARISON AGAINST cv2 -> T_OTHER: 0.14666123390197755 s, LOG_10(T_REF / T_OTHER): -0.5545098412093811
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003959488868713379 s, LOG_10(T_REF / T_OTHER): 1.0141663669326484
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014085531234741211 s, LOG_10(T_REF / T_OTHER): 0.46303226229242755
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014296889305114746 s, LOG_10(T_REF / T_OTHER): 0.45656393867939304
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
117/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 8]
T_REF: 0.041465258598327635 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03830158710479736 s, LOG_10(T_REF / T_OTHER): 0.034467607983020745
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.042781829833984375 s, LOG_10(T_REF / T_OTHER): -0.013574977760464178
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.029920077323913573 s, LOG_10(T_REF / T_OTHER): 0.14172166664459784
COMPARISON AGAINST cv2 -> T_OTHER: 0.15847926139831542 s, LOG_10(T_REF / T_OTHER): -0.582288060274012
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00640108585357666 s, LOG_10(T_REF / T_OTHER): 0.8114307260642576
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014526033401489257 s, LOG_10(T_REF / T_OTHER): 0.45553733975379646
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014282441139221192 s, LOG_10(T_REF / T_OTHER): 0.4628819352844693
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
118/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 16]
T_REF: 0.04362308979034424 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.15869686603546143 s, LOG_10(T_REF / T_OTHER): -0.560851927259898
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2115154266357422 s, LOG_10(T_REF / T_OTHER): -0.6856256245568761
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1254646062850952 s, LOG_10(T_REF / T_OTHER): -0.4588048050232003
COMPARISON AGAINST cv2 -> T_OTHER: 0.19638197422027587 s, LOG_10(T_REF / T_OTHER): -0.6533851985782876
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.015134787559509278 s, LOG_10(T_REF / T_OTHER): 0.4597400937497907
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014994931221008301 s, LOG_10(T_REF / T_OTHER): 0.46377194500948
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.038588881492614746 s, LOG_10(T_REF / T_OTHER): 0.05325423244981874
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
119/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 32]
T_REF: 0.052717733383178714 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.6998989343643188 s, LOG_10(T_REF / T_OTHER): -1.1230786029271675
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9331171751022339 s, LOG_10(T_REF / T_OTHER): -1.2479794538457127
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.460273003578186 s, LOG_10(T_REF / T_OTHER): -0.9410587735901857
COMPARISON AGAINST cv2 -> T_OTHER: 0.3094841957092285 s, LOG_10(T_REF / T_OTHER): -0.7686817466517929
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.046678996086120604 s, LOG_10(T_REF / T_OTHER): 0.05283522214147538
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04928910732269287 s, LOG_10(T_REF / T_OTHER): 0.02920577665039909
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.14204895496368408 s, LOG_10(T_REF / T_OTHER): -0.43048131367190606
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
120/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 32, img_side: 64]
T_REF: 0.08496575355529785 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.146539306640625 s, LOG_10(T_REF / T_OTHER): -1.5685892478423953
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 3.94395534992218 s, LOG_10(T_REF / T_OTHER): -1.66668807609604
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.1348084688186644 s, LOG_10(T_REF / T_OTHER): -1.400115003496439
COMPARISON AGAINST cv2 -> T_OTHER: 0.7488134622573852 s, LOG_10(T_REF / T_OTHER): -0.9451297301064787
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18284144401550292 s, LOG_10(T_REF / T_OTHER): -0.3328307290398151
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18356807231903077 s, LOG_10(T_REF / T_OTHER): -0.33455323384513025
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.5780445098876953 s, LOG_10(T_REF / T_OTHER): -0.8327173672375795
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
121/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 2]
T_REF: 0.04143304824829101 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0032911777496337892 s, LOG_10(T_REF / T_OTHER): 1.0999955474518028
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007978677749633789 s, LOG_10(T_REF / T_OTHER): 1.7154159609852218
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0027923107147216795 s, LOG_10(T_REF / T_OTHER): 1.1713831429046533
COMPARISON AGAINST cv2 -> T_OTHER: 0.27776508331298827 s, LOG_10(T_REF / T_OTHER): -0.8263307657724015
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 1.062199121373741
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024703145027160645 s, LOG_10(T_REF / T_OTHER): 0.22459463768051058
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009633564949035644 s, LOG_10(T_REF / T_OTHER): 0.6335598559973405
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
122/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 4]
T_REF: 0.04088647365570068 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.01433424949645996 s, LOG_10(T_REF / T_OTHER): 0.45520469611909425
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.010871052742004395 s, LOG_10(T_REF / T_OTHER): 0.5753080527106867
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.013065242767333984 s, LOG_10(T_REF / T_OTHER): 0.4954621716494192
COMPARISON AGAINST cv2 -> T_OTHER: 0.28454790115356443 s, LOG_10(T_REF / T_OTHER): -0.842575731085912
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0038878202438354494 s, LOG_10(T_REF / T_OTHER): 1.0218734786811452
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024814319610595704 s, LOG_10(T_REF / T_OTHER): 0.21687728380329419
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.02029581069946289 s, LOG_10(T_REF / T_OTHER): 0.3041732519463125
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
123/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 8]
T_REF: 0.04200146198272705 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08803858757019042 s, LOG_10(T_REF / T_OTHER): -0.3214086588785791
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08198344707489014 s, LOG_10(T_REF / T_OTHER): -0.2904617671639096
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08467423915863037 s, LOG_10(T_REF / T_OTHER): -0.30448689543574176
COMPARISON AGAINST cv2 -> T_OTHER: 0.3100740909576416 s, LOG_10(T_REF / T_OTHER): -0.8682010716147487
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00997333526611328 s, LOG_10(T_REF / T_OTHER): 0.6244239889035376
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024930953979492188 s, LOG_10(T_REF / T_OTHER): 0.22652551050052105
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020916199684143065 s, LOG_10(T_REF / T_OTHER): 0.30278162821192256
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
124/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 16]
T_REF: 0.04592180252075195 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3771019458770752 s, LOG_10(T_REF / T_OTHER): -0.914439846772585
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.408209228515625 s, LOG_10(T_REF / T_OTHER): -0.9488638920901802
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3244379997253418 s, LOG_10(T_REF / T_OTHER): -0.8491127885244321
COMPARISON AGAINST cv2 -> T_OTHER: 0.38777177333831786 s, LOG_10(T_REF / T_OTHER): -0.9265572661190015
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.02493131160736084 s, LOG_10(T_REF / T_OTHER): 0.2652737998007748
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02601447105407715 s, LOG_10(T_REF / T_OTHER): 0.2468039267164983
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06446878910064698 s, LOG_10(T_REF / T_OTHER): -0.14733058642104255
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
125/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 32]
T_REF: 0.062070250511169434 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.707716131210327 s, LOG_10(T_REF / T_OTHER): -1.4395321826464238
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.8189334630966187 s, LOG_10(T_REF / T_OTHER): -1.4669333146151897
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.338401770591736 s, LOG_10(T_REF / T_OTHER): -1.3337030043184435
COMPARISON AGAINST cv2 -> T_OTHER: 0.6530808448791504 s, LOG_10(T_REF / T_OTHER): -1.0220834477467808
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0882641315460205 s, LOG_10(T_REF / T_OTHER): -0.1529007542586398
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09209356307983399 s, LOG_10(T_REF / T_OTHER): -0.17134577788254524
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.249365234375 s, LOG_10(T_REF / T_OTHER): -0.6039524073808014
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
126/162 [impl: keras, kernel_size: 7, n_kernels: 16, n_channels: 64, img_side: 64]
T_REF: 0.1235964298248291 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.942421078681946 s, LOG_10(T_REF / T_OTHER): -1.6819574965582123
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 7.812954616546631 s, LOG_10(T_REF / T_OTHER): -1.8008093755978707
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.193699526786804 s, LOG_10(T_REF / T_OTHER): -1.6234708945910188
COMPARISON AGAINST cv2 -> T_OTHER: 1.5849784374237061 s, LOG_10(T_REF / T_OTHER): -1.108017432293145
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3500108480453491 s, LOG_10(T_REF / T_OTHER): -0.452075578831644
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35721702575683595 s, LOG_10(T_REF / T_OTHER): -0.4609262241358422
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.2357561349868775 s, LOG_10(T_REF / T_OTHER): -0.9999268492061116
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
127/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 2]
T_REF: 0.04323766231536865 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0014981985092163085 s, LOG_10(T_REF / T_OTHER): 1.4602928447887433
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0004986763000488281 s, LOG_10(T_REF / T_OTHER): 1.938043476828827
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0005983591079711914 s, LOG_10(T_REF / T_OTHER): 1.8589002993147088
COMPARISON AGAINST cv2 -> T_OTHER: 0.1472118616104126 s, LOG_10(T_REF / T_OTHER): -0.5320805993536303
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004228544235229492 s, LOG_10(T_REF / T_OTHER): 1.0096713272292532
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014113545417785645 s, LOG_10(T_REF / T_OTHER): 0.48622608021659586
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.007440400123596191 s, LOG_10(T_REF / T_OTHER): 0.7642659140806477
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
128/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 4]
T_REF: 0.04052910804748535 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.005183625221252442 s, LOG_10(T_REF / T_OTHER): 0.8931334517384913
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.006781959533691406 s, LOG_10(T_REF / T_OTHER): 0.7764118519036172
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003191423416137695 s, LOG_10(T_REF / T_OTHER): 1.1037826187986164
COMPARISON AGAINST cv2 -> T_OTHER: 0.1525975465774536 s, LOG_10(T_REF / T_OTHER): -0.5757805051809359
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0033336877822875977 s, LOG_10(T_REF / T_OTHER): 1.0848421226308154
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.013988757133483886 s, LOG_10(T_REF / T_OTHER): 0.4619879158095713
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.014516019821166992 s, LOG_10(T_REF / T_OTHER): 0.4459194934791808
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
129/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 8]
T_REF: 0.04143097400665283 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.018949413299560548 s, LOG_10(T_REF / T_OTHER): 0.33972937516360513
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.045381927490234376 s, LOG_10(T_REF / T_OTHER): -0.03955779426452874
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012566733360290527 s, LOG_10(T_REF / T_OTHER): 0.5181027429478308
COMPARISON AGAINST cv2 -> T_OTHER: 0.16177337169647216 s, LOG_10(T_REF / T_OTHER): -0.5915818938868908
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.00698697566986084 s, LOG_10(T_REF / T_OTHER): 0.7730359123579885
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.014387297630310058 s, LOG_10(T_REF / T_OTHER): 0.45934591535280883
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.015208148956298828 s, LOG_10(T_REF / T_OTHER): 0.43524878573105485
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
130/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 16]
T_REF: 0.042377662658691403 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07600045204162598 s, LOG_10(T_REF / T_OTHER): -0.2536791759106583
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.2261040449142456 s, LOG_10(T_REF / T_OTHER): -0.727171332266198
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.05794501304626465 s, LOG_10(T_REF / T_OTHER): -0.13587906547189715
COMPARISON AGAINST cv2 -> T_OTHER: 0.1952749013900757 s, LOG_10(T_REF / T_OTHER): -0.6635094276581153
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01405029296875 s, LOG_10(T_REF / T_OTHER): 0.4794516195115693
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0149153470993042 s, LOG_10(T_REF / T_OTHER): 0.4535036351029436
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.04157767295837402 s, LOG_10(T_REF / T_OTHER): 0.008276820661781276
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
131/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 32]
T_REF: 0.04867992401123047 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.2987971782684326 s, LOG_10(T_REF / T_OTHER): -0.7880266002138951
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.9941476345062256 s, LOG_10(T_REF / T_OTHER): -1.310100991852037
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.21532468795776366 s, LOG_10(T_REF / T_OTHER): -0.645743934891658
COMPARISON AGAINST cv2 -> T_OTHER: 0.2936664342880249 s, LOG_10(T_REF / T_OTHER): -0.7805044184045674
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.048227477073669436 s, LOG_10(T_REF / T_OTHER): 0.00405534838217678
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.049492692947387694 s, LOG_10(T_REF / T_OTHER): -0.00719119322510042
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.15222694873809814 s, LOG_10(T_REF / T_OTHER): -0.4951416507665398
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
132/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 16, img_side: 64]
T_REF: 0.07147877216339112 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.4518028259277345 s, LOG_10(T_REF / T_OTHER): -1.3077305536769184
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 4.150742030143737 s, LOG_10(T_REF / T_OTHER): -1.7639486589420956
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.1834449529647828 s, LOG_10(T_REF / T_OTHER): -1.218970978116379
COMPARISON AGAINST cv2 -> T_OTHER: 0.6809888362884522 s, LOG_10(T_REF / T_OTHER): -0.9789629086714373
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.18991379737854003 s, LOG_10(T_REF / T_OTHER): -0.4243794339566622
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.18618648052215575 s, LOG_10(T_REF / T_OTHER): -0.4157710588106156
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.767128586769104 s, LOG_10(T_REF / T_OTHER): -1.0306910831307536
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
133/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 2]
T_REF: 0.04087202548980713 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002190041542053223 s, LOG_10(T_REF / T_OTHER): 1.270973807638957
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0007977962493896484 s, LOG_10(T_REF / T_OTHER): 1.7095341702540914
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0011966705322265625 s, LOG_10(T_REF / T_OTHER): 1.5334515637756263
COMPARISON AGAINST cv2 -> T_OTHER: 0.2837418794631958 s, LOG_10(T_REF / T_OTHER): -0.841497280587699
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0037862300872802735 s, LOG_10(T_REF / T_OTHER): 1.0332191582367996
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024327349662780762 s, LOG_10(T_REF / T_OTHER): 0.22533136312095253
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.008164811134338378 s, LOG_10(T_REF / T_OTHER): 0.6994800172865395
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
134/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 4]
T_REF: 0.041883015632629396 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007081174850463867 s, LOG_10(T_REF / T_OTHER): 0.7719326256639187
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.011170101165771485 s, LOG_10(T_REF / T_OTHER): 0.5739808374436131
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006083774566650391 s, LOG_10(T_REF / T_OTHER): 0.8378648309482797
COMPARISON AGAINST cv2 -> T_OTHER: 0.294714093208313 s, LOG_10(T_REF / T_OTHER): -0.8473629603688871
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.003796815872192383 s, LOG_10(T_REF / T_OTHER): 1.0426184075110188
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024196887016296388 s, LOG_10(T_REF / T_OTHER): 0.2382784472943069
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01955409049987793 s, LOG_10(T_REF / T_OTHER): 0.3308003230637384
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
135/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 8]
T_REF: 0.04129083156585693 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.03670423030853272 s, LOG_10(T_REF / T_OTHER): 0.051137508019212234
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.08587348461151123 s, LOG_10(T_REF / T_OTHER): -0.318005456923752
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.03121678829193115 s, LOG_10(T_REF / T_OTHER): 0.12146541025143807
COMPARISON AGAINST cv2 -> T_OTHER: 0.31406846046447756 s, LOG_10(T_REF / T_OTHER): -0.8811706963343373
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008235287666320801 s, LOG_10(T_REF / T_OTHER): 0.7001748552381758
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02475008964538574 s, LOG_10(T_REF / T_OTHER): 0.22227685302552844
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.020164871215820314 s, LOG_10(T_REF / T_OTHER): 0.3112581766181207
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
136/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 16]
T_REF: 0.044071197509765625 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.157716703414917 s, LOG_10(T_REF / T_OTHER): -0.553722839508088
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.43215646743774416 s, LOG_10(T_REF / T_OTHER): -0.9914861654281967
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1282569408416748 s, LOG_10(T_REF / T_OTHER): -0.46392602561085133
COMPARISON AGAINST cv2 -> T_OTHER: 0.38552055358886717 s, LOG_10(T_REF / T_OTHER): -0.9418926855287368
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.023769474029541014 s, LOG_10(T_REF / T_OTHER): 0.2681352796160758
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.02610325813293457 s, LOG_10(T_REF / T_OTHER): 0.22746013329215617
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.06200110912322998 s, LOG_10(T_REF / T_OTHER): -0.14824460716865284
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
137/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 32]
T_REF: 0.05296444892883301 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7271430015563964 s, LOG_10(T_REF / T_OTHER): -1.1376353705707776
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.905560040473938 s, LOG_10(T_REF / T_OTHER): -1.556038179090026
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4629665851593018 s, LOG_10(T_REF / T_OTHER): -0.9415651887271499
COMPARISON AGAINST cv2 -> T_OTHER: 0.6060911893844605 s, LOG_10(T_REF / T_OTHER): -1.058553512807283
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.08879287242889404 s, LOG_10(T_REF / T_OTHER): -0.224393647537328
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.09221348762512208 s, LOG_10(T_REF / T_OTHER): -0.24080998986880098
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.23610877990722656 s, LOG_10(T_REF / T_OTHER): -0.6491276789869473
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
138/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 32, img_side: 64]
T_REF: 0.08968617916107177 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.0361964464187623 s, LOG_10(T_REF / T_OTHER): -1.529604345172089
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.027003765106201 s, LOG_10(T_REF / T_OTHER): -1.9518279442264876
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.18104088306427 s, LOG_10(T_REF / T_OTHER): -1.3859382839377976
COMPARISON AGAINST cv2 -> T_OTHER: 1.449197816848755 s, LOG_10(T_REF / T_OTHER): -1.2084021486595855
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3517049551010132 s, LOG_10(T_REF / T_OTHER): -0.5934529645901122
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.35481307506561277 s, LOG_10(T_REF / T_OTHER): -0.597274092997353
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.0640568733215332 s, LOG_10(T_REF / T_OTHER): -1.0742393189495754
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
139/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 2]
T_REF: 0.04199368953704834 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00390927791595459 s, LOG_10(T_REF / T_OTHER): 1.0310874870095448
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.001495528221130371 s, LOG_10(T_REF / T_OTHER): 1.4483894204020797
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.002892470359802246 s, LOG_10(T_REF / T_OTHER): 1.1619151158597587
COMPARISON AGAINST cv2 -> T_OTHER: 0.5471227407455445 s, LOG_10(T_REF / T_OTHER): -1.1149007331438379
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035904407501220702 s, LOG_10(T_REF / T_OTHER): 1.0680362687891276
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044395732879638675 s, LOG_10(T_REF / T_OTHER): -0.024157196534247142
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011943650245666505 s, LOG_10(T_REF / T_OTHER): 0.5460469559809673
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
140/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 4]
T_REF: 0.0405839204788208 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.015063667297363281 s, LOG_10(T_REF / T_OTHER): 0.4304232832426253
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.025434374809265137 s, LOG_10(T_REF / T_OTHER): 0.2029329314378507
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.01156911849975586 s, LOG_10(T_REF / T_OTHER): 0.5450537288699977
COMPARISON AGAINST cv2 -> T_OTHER: 0.5562185764312744 s, LOG_10(T_REF / T_OTHER): -1.1368914908726906
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004330182075500488 s, LOG_10(T_REF / T_OTHER): 0.9718478403902523
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04416682720184326 s, LOG_10(T_REF / T_OTHER): -0.036742203763562034
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0299424409866333 s, LOG_10(T_REF / T_OTHER): 0.1320667960623833
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
141/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 8]
T_REF: 0.04193613529205322 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08506875038146973 s, LOG_10(T_REF / T_OTHER): -0.30718164857548336
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.19557383060455322 s, LOG_10(T_REF / T_OTHER): -0.6687223374452048
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08247954845428467 s, LOG_10(T_REF / T_OTHER): -0.2937578699748999
COMPARISON AGAINST cv2 -> T_OTHER: 0.6099721431732178 s, LOG_10(T_REF / T_OTHER): -1.1627215969608067
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.01296534538269043 s, LOG_10(T_REF / T_OTHER): 0.5098043143099469
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04533860683441162 s, LOG_10(T_REF / T_OTHER): -0.03387976628452416
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03020455837249756 s, LOG_10(T_REF / T_OTHER): 0.1425159145051513
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
142/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 16]
T_REF: 0.04663105010986328 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3651982545852661 s, LOG_10(T_REF / T_OTHER): -0.8938534975394117
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.065659475326538 s, LOG_10(T_REF / T_OTHER): -1.3589432551555414
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.32961900234222413 s, LOG_10(T_REF / T_OTHER): -0.8493370448918541
COMPARISON AGAINST cv2 -> T_OTHER: 0.7581844091415405 s, LOG_10(T_REF / T_OTHER): -1.2110996539286494
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0418316125869751 s, LOG_10(T_REF / T_OTHER): 0.0471705889467547
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.046626162528991696 s, LOG_10(T_REF / T_OTHER): 4.552247154430859e-05
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.1033475399017334 s, LOG_10(T_REF / T_OTHER): -0.3456249474068997
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
143/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 32]
T_REF: 0.06355473995208741 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5520025491714478 s, LOG_10(T_REF / T_OTHER): -1.387744484202617
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.018534517288208 s, LOG_10(T_REF / T_OTHER): -1.8974289695060462
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.382513689994812 s, LOG_10(T_REF / T_OTHER): -1.3375214944392733
COMPARISON AGAINST cv2 -> T_OTHER: 1.2797945737838745 s, LOG_10(T_REF / T_OTHER): -1.3039923184158173
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16617212295532227 s, LOG_10(T_REF / T_OTHER): -0.41741022224115154
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17767736911773682 s, LOG_10(T_REF / T_OTHER): -0.4464841689058795
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.40638554096221924 s, LOG_10(T_REF / T_OTHER): -0.8057903014729608
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
144/162 [impl: keras, kernel_size: 7, n_kernels: 32, n_channels: 64, img_side: 64]
T_REF: 0.13057527542114258 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.852478766441346 s, LOG_10(T_REF / T_OTHER): -1.6514788961312492
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 21.384968400001526 s, LOG_10(T_REF / T_OTHER): -2.2142476622848393
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.279209017753601 s, LOG_10(T_REF / T_OTHER): -1.6067079066377299
COMPARISON AGAINST cv2 -> T_OTHER: 3.130967354774475 s, LOG_10(T_REF / T_OTHER): -1.37981758887907
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6750784158706665 s, LOG_10(T_REF / T_OTHER): -0.7134932720485917
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.69399573802948 s, LOG_10(T_REF / T_OTHER): -0.7254958528082643
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.97886381149292 s, LOG_10(T_REF / T_OTHER): -1.1805549558452784
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
145/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 2]
T_REF: 0.04015624523162842 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0017951726913452148 s, LOG_10(T_REF / T_OTHER): 1.3496468647562674
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0010970354080200196 s, LOG_10(T_REF / T_OTHER): 1.5635324526456458
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0009973287582397462 s, LOG_10(T_REF / T_OTHER): 1.6049147555592904
COMPARISON AGAINST cv2 -> T_OTHER: 0.29232196807861327 s, LOG_10(T_REF / T_OTHER): -0.8621083561601343
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0035065412521362305 s, LOG_10(T_REF / T_OTHER): 1.058874145325017
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024356555938720704 s, LOG_10(T_REF / T_OTHER): 0.21713721950383996
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.009337091445922851 s, LOG_10(T_REF / T_OTHER): 0.6335414855412065
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
146/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 4]
T_REF: 0.04067397117614746 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.00498659610748291 s, LOG_10(T_REF / T_OTHER): 0.9115123828422227
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.012765836715698243 s, LOG_10(T_REF / T_OTHER): 0.50326729133962
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0038897514343261717 s, LOG_10(T_REF / T_OTHER): 1.0193947269115267
COMPARISON AGAINST cv2 -> T_OTHER: 0.3017934083938599 s, LOG_10(T_REF / T_OTHER): -0.8703931733934102
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036931514739990236 s, LOG_10(T_REF / T_OTHER): 1.0419194559949425
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.024885010719299317 s, LOG_10(T_REF / T_OTHER): 0.21337874437397436
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.0220797061920166 s, LOG_10(T_REF / T_OTHER): 0.2653232864577434
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
147/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 8]
T_REF: 0.04065983295440674 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.022643351554870607 s, LOG_10(T_REF / T_OTHER): 0.25422488070747556
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0927520751953125 s, LOG_10(T_REF / T_OTHER): -0.3581580450512772
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.015957403182983398 s, LOG_10(T_REF / T_OTHER): 0.4062033719124621
COMPARISON AGAINST cv2 -> T_OTHER: 0.3275275468826294 s, LOG_10(T_REF / T_OTHER): -0.9060822423740114
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.008060646057128907 s, LOG_10(T_REF / T_OTHER): 0.7027957383577033
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.025205230712890624 s, LOG_10(T_REF / T_OTHER): 0.2076749130117807
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.023064303398132324 s, LOG_10(T_REF / T_OTHER): 0.2462252477427279
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
148/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 16]
T_REF: 0.043125319480896 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.07599306106567383 s, LOG_10(T_REF / T_OTHER): -0.24604161318408338
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.45070250034332277 s, LOG_10(T_REF / T_OTHER): -1.0191576419622448
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0620342493057251 s, LOG_10(T_REF / T_OTHER): -0.1578992056407469
COMPARISON AGAINST cv2 -> T_OTHER: 0.39824485778808594 s, LOG_10(T_REF / T_OTHER): -0.9654178513853211
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.024480819702148438 s, LOG_10(T_REF / T_OTHER): 0.24590637004084473
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0267841100692749 s, LOG_10(T_REF / T_OTHER): 0.20685510438306998
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.07152206897735595 s, LOG_10(T_REF / T_OTHER): -0.21970774372841106
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
149/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 32]
T_REF: 0.051540923118591306 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.30532279014587405 s, LOG_10(T_REF / T_OTHER): -0.7726070297889689
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.0075636863708497 s, LOG_10(T_REF / T_OTHER): -1.5905171387129107
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.238861608505249 s, LOG_10(T_REF / T_OTHER): -0.6659941598641669
COMPARISON AGAINST cv2 -> T_OTHER: 0.5944201231002808 s, LOG_10(T_REF / T_OTHER): -1.0619413106427904
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.09198052883148193 s, LOG_10(T_REF / T_OTHER): -0.25154370949863447
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.0933525800704956 s, LOG_10(T_REF / T_OTHER): -0.2579741327713341
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.27598090171813966 s, LOG_10(T_REF / T_OTHER): -0.7287268366192176
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
150/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 16, img_side: 64]
T_REF: 0.08172817230224609 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5175724506378174 s, LOG_10(T_REF / T_OTHER): -1.2687776471122345
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 8.538599133491516 s, LOG_10(T_REF / T_OTHER): -2.01901483811978
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.3135951280593872 s, LOG_10(T_REF / T_OTHER): -1.2060897421974839
COMPARISON AGAINST cv2 -> T_OTHER: 1.365247416496277 s, LOG_10(T_REF / T_OTHER): -1.2228395765348907
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3688462257385254 s, LOG_10(T_REF / T_OTHER): -0.6544735570054683
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.36243667602539065 s, LOG_10(T_REF / T_OTHER): -0.6468603519116979
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 1.7922553777694703 s, LOG_10(T_REF / T_OTHER): -1.3410281053432254
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
151/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 2]
T_REF: 0.042660069465637204 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.002692699432373047 s, LOG_10(T_REF / T_OTHER): 1.1998336795052824
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0015955448150634765 s, LOG_10(T_REF / T_OTHER): 1.4271125512974274
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.0014960289001464844 s, LOG_10(T_REF / T_OTHER): 1.4550815750288624
COMPARISON AGAINST cv2 -> T_OTHER: 0.5634097576141357 s, LOG_10(T_REF / T_OTHER): -1.120802805901215
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0036209821701049805 s, LOG_10(T_REF / T_OTHER): 1.0711951719637556
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.044899916648864745 s, LOG_10(T_REF / T_OTHER): -0.02222397649158837
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.011576437950134277 s, LOG_10(T_REF / T_OTHER): 0.5664466100105809
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
152/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 4]
T_REF: 0.042029619216918945 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.007780337333679199 s, LOG_10(T_REF / T_OTHER): 0.7325570281769997
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.026233601570129394 s, LOG_10(T_REF / T_OTHER): 0.20469753707598534
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.006781649589538574 s, LOG_10(T_REF / T_OTHER): 0.7922201095120273
COMPARISON AGAINST cv2 -> T_OTHER: 0.5760763168334961 s, LOG_10(T_REF / T_OTHER): -1.1369245658732343
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.004588198661804199 s, LOG_10(T_REF / T_OTHER): 0.961913241463605
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04461019039154053 s, LOG_10(T_REF / T_OTHER): -0.02587862139845787
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.030535244941711427 s, LOG_10(T_REF / T_OTHER): 0.13875404728451604
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
153/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 8]
T_REF: 0.04210474491119385 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.0374997615814209 s, LOG_10(T_REF / T_OTHER): 0.050302534004772075
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.21802077293395997 s, LOG_10(T_REF / T_OTHER): -0.7141668344306267
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.035904097557067874 s, LOG_10(T_REF / T_OTHER): 0.0691870252658415
COMPARISON AGAINST cv2 -> T_OTHER: 0.6228495836257935 s, LOG_10(T_REF / T_OTHER): -1.170052137905458
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.011825013160705566 s, LOG_10(T_REF / T_OTHER): 0.5515294077934977
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04507226943969726 s, LOG_10(T_REF / T_OTHER): -0.02957838528566646
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.03117227554321289 s, LOG_10(T_REF / T_OTHER): 0.13056253408092958
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
154/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 16]
T_REF: 0.04535641670227051 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.16017231941223145 s, LOG_10(T_REF / T_OTHER): -0.5479487278968116
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 1.2054094076156616 s, LOG_10(T_REF / T_OTHER): -1.424495839967907
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.1313488483428955 s, LOG_10(T_REF / T_OTHER): -0.46178753264874556
COMPARISON AGAINST cv2 -> T_OTHER: 0.779042387008667 s, LOG_10(T_REF / T_OTHER): -1.2349223512671028
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.042021965980529784 s, LOG_10(T_REF / T_OTHER): 0.033162369792407956
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.04724950790405273 s, LOG_10(T_REF / T_OTHER): -0.017758553134620655
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.10727341175079345 s, LOG_10(T_REF / T_OTHER): -0.3738533566261517
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
155/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 32]
T_REF: 0.057694196701049805 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.7299571752548217 s, LOG_10(T_REF / T_OTHER): -1.1021652510293245
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 5.522321724891663 s, LOG_10(T_REF / T_OTHER): -1.9809895737212755
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.4799201011657715 s, LOG_10(T_REF / T_OTHER): -0.9200368096000997
COMPARISON AGAINST cv2 -> T_OTHER: 1.228427529335022 s, LOG_10(T_REF / T_OTHER): -1.3282174096389971
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.16700875759124756 s, LOG_10(T_REF / T_OTHER): -0.4616071143650505
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.17803423404693602 s, LOG_10(T_REF / T_OTHER): -0.48937138956718895
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.42314274311065675 s, LOG_10(T_REF / T_OTHER): -0.865354766256149
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
156/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 32, img_side: 64]
T_REF: 0.10130159854888916 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 3.036572504043579 s, LOG_10(T_REF / T_OTHER): -1.4767673565806847
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 24.421325635910033 s, LOG_10(T_REF / T_OTHER): -2.382152935954827
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 2.283017563819885 s, LOG_10(T_REF / T_OTHER): -1.3528929540154528
COMPARISON AGAINST cv2 -> T_OTHER: 2.9803696393966677 s, LOG_10(T_REF / T_OTHER): -1.4686538320290057
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.6877024412155152 s, LOG_10(T_REF / T_OTHER): -0.8317842673865314
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.6970156669616699 s, LOG_10(T_REF / T_OTHER): -0.8376262413096371
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 2.276737189292908 s, LOG_10(T_REF / T_OTHER): -1.3516966029510522
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
157/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 2]
T_REF: 0.04281141757965088 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.004089188575744629 s, LOG_10(T_REF / T_OTHER): 1.0199224697073712
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.0028926849365234373 s, LOG_10(T_REF / T_OTHER): 1.1702584744774558
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.003391122817993164 s, LOG_10(T_REF / T_OTHER): 1.101216089388711
COMPARISON AGAINST cv2 -> T_OTHER: 1.0991281270980835 s, LOG_10(T_REF / T_OTHER): -1.409488713254398
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.0039459228515625 s, LOG_10(T_REF / T_OTHER): 1.0354110185916807
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08454031944274902 s, LOG_10(T_REF / T_OTHER): -0.29550427600218415
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.01587941646575928 s, LOG_10(T_REF / T_OTHER): 0.43072506951177775
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
158/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 4]
T_REF: 0.04180324077606201 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.014863538742065429 s, LOG_10(T_REF / T_OTHER): 0.44908773208608205
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.06173460483551026 s, LOG_10(T_REF / T_OTHER): -0.169318721011639
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.012765979766845703 s, LOG_10(T_REF / T_OTHER): 0.5151557997812368
COMPARISON AGAINST cv2 -> T_OTHER: 1.121810507774353 s, LOG_10(T_REF / T_OTHER): -1.4287095520917459
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.006392383575439453 s, LOG_10(T_REF / T_OTHER): 0.815547124590565
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08415331840515136 s, LOG_10(T_REF / T_OTHER): -0.3038612945682722
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049690866470336915 s, LOG_10(T_REF / T_OTHER): -0.07506661814770502
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
159/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 8]
T_REF: 0.04264557361602783 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.08756248950958252 s, LOG_10(T_REF / T_OTHER): -0.31244414021633854
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 0.5445566415786743 s, LOG_10(T_REF / T_OTHER): -1.1061690988157695
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.08938672542572021 s, LOG_10(T_REF / T_OTHER): -0.3213990673345454
COMPARISON AGAINST cv2 -> T_OTHER: 1.2378985166549683 s, LOG_10(T_REF / T_OTHER): -1.4628110821499185
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.020246672630310058 s, LOG_10(T_REF / T_OTHER): 0.3235202995991551
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08549790382385254 s, LOG_10(T_REF / T_OTHER): -0.3020815067558773
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.049863767623901364 s, LOG_10(T_REF / T_OTHER): -0.06791112959817946
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
160/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 16]
T_REF: 0.048420381546020505 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 0.3604439735412598 s, LOG_10(T_REF / T_OTHER): -0.8718095614141036
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 2.7470787286758425 s, LOG_10(T_REF / T_OTHER): -1.7538428987670014
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 0.3289205551147461 s, LOG_10(T_REF / T_OTHER): -0.832062807239988
COMPARISON AGAINST cv2 -> T_OTHER: 1.5583749055862426 s, LOG_10(T_REF / T_OTHER): -1.5076437388732915
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.07669610977172851 s, LOG_10(T_REF / T_OTHER): -0.19974512864939475
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.08936948776245117 s, LOG_10(T_REF / T_OTHER): -0.26616106140301937
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.18023827075958251 s, LOG_10(T_REF / T_OTHER): -0.5708188047308564
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
161/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 32]
T_REF: 0.0667492151260376 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 1.5599599838256837 s, LOG_10(T_REF / T_OTHER): -1.368667294559407
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 12.58158881664276 s, LOG_10(T_REF / T_OTHER): -2.2752893243558407
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 1.4055490970611573 s, LOG_10(T_REF / T_OTHER): -1.3233998571017032
COMPARISON AGAINST cv2 -> T_OTHER: 2.602781343460083 s, LOG_10(T_REF / T_OTHER): -1.590991521689565
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 0.3201687097549438 s, LOG_10(T_REF / T_OTHER): -0.6809327224510296
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 0.34469356536865237 s, LOG_10(T_REF / T_OTHER): -0.7129870128170758
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 0.7814244270324707 s, LOG_10(T_REF / T_OTHER): -1.0684408195890507
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
162/162 [impl: keras, kernel_size: 7, n_kernels: 64, n_channels: 64, img_side: 64]
T_REF: 0.14078779220581056 s [time for this implementation]
COMPARISON AGAINST numpy_gemm -> T_OTHER: 5.940302181243896 s, LOG_10(T_REF / T_OTHER): -1.6252435394596814
COMPARISON AGAINST numba_jit_direct -> T_OTHER: 52.56106662750244 s, LOG_10(T_REF / T_OTHER): -2.5720991713240244
COMPARISON AGAINST numba_jit_gemm -> T_OTHER: 5.40817699432373 s, LOG_10(T_REF / T_OTHER): -1.5844858978923875
COMPARISON AGAINST cv2 -> T_OTHER: 6.340969252586365 s, LOG_10(T_REF / T_OTHER): -1.6535906487916623
COMPARISON AGAINST numba_cuda_direct -> T_OTHER: 1.3214087009429931 s, LOG_10(T_REF / T_OTHER): -0.9724721636328196
COMPARISON AGAINST numba_cuda_tiles -> T_OTHER: 1.3677627325057984 s, LOG_10(T_REF / T_OTHER): -0.9874457678136748
COMPARISON AGAINST numba_cuda_viafft -> T_OTHER: 3.2298986434936525 s, LOG_10(T_REF / T_OTHER): -1.3606238955738092
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMPARISONS FOR IMPLEMENTATION keras DONE.

ALL DONE FOR TEST WITH ID: 3818676499. [time: 6084.3795511722565 s]
